{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\task\\tasks.vue?vue&type=template&id=abdc0ff6&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\task\\tasks.vue","mtime":1676527004570},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9Im1haW4tY29udGVudCBtYWluLWNvbnRlbnQyIHRhc2stc2VjICI+CiAgPGRpdj4KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBtYi0yIGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiI+CiAgICAgIDxzbG90IG5hbWU9ImhlYWRlciI+CiAgICAgICAgPGRpdiBzdHlsZT0id2lkdGg6NTBweDsiPgogICAgICAgICA8aDUgY2xhc3M9Im1iLTAiPlRhc2tzPC9oNT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9zbG90PgogICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgiPgogICAgICAgIDxoNSBjbGFzcz0ibWItMCBteC0xIGZvbnQtd2VpZ2h0LTYwMCBjdXJzb3ItcG9pbnRlciB0YWItYnJlYWRjYW1wIiB2LWZvcj0idGFza19jYXRlZ29yeSBpbiB0YXNrX2NhdGVnb3JpZXMiIEBjbGljaz0ic2VsZWN0VGFza0NhdCh0YXNrX2NhdGVnb3J5KSIgOmNsYXNzPSJjdXJyZW50X3Rhc2tfY2F0ZWdvcnk9PXRhc2tfY2F0ZWdvcnk/J3RhYi1icmVhZGNhbXAtYWN0aXZlIHRhc2stYmx1ZSc6J3RhYi1icmVhZGNhbXAnIj57e3NsdWdUb1dvcmQodGFza19jYXRlZ29yeSl9fTwvaDU+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0IGN1cnNvci1wb2ludGVyIiBzdHlsZT0id2lkdGg6NTBweDsiPgogICAgICAgIDxpbWcgc3JjPSIvaW1nL3JlZnJlc2gucG5nIiBAY2xpY2s9InJlbG9hZFRhc2tzKCkiIHdpZHRoPSIyNCI+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJzZXBhcmF0b3ItYnJlYWRjcnVtYiBib3JkZXItdG9wIj48L2Rpdj4KICA8L2Rpdj4KCiAgPCEtLSBjb250ZW50cyAtLT4KICA8ZGl2IGNsYXNzPSJ1bC10b2RvLWxpc3QtY29udGVudCIgc3R5bGU9Im1hcmdpbi10b3A6LTIwcHg7Ij4KICAgIDwhLS0gdGFza3MgLS0+CiAgICA8ZGl2IGNsYXNzPSJ0b2RvLWxlZnQgcC0xIiBzdHlsZT0iaGVpZ2h0Ojgwdmg7b3ZlcmZsb3cteTphdXRvIj4KICAgICAgPGRpdiBjbGFzcz0ibWItMiI+CiAgICAgICAgPGItY2FyZCBib2R5LWNsYXNzPSJwLTAiIGNsYXNzPSJoLTEwMCIgQGNsaWNrPSJjdXJyZW50X3Rhc2s9e307aXNfbmV3X3Rhc2s9dHJ1ZSIgdi1pZj0iY3VycmVudF90YXNrX2NhdGVnb3J5PT0nbXlfdGFza3MnIj4gCiAgICAgICAgICA8Zm9ybSAgcmVmPSJuZXdGb3JtIiBAc3VibWl0LnByZXZlbnQ9ImNyZWF0ZUZvcm1kYXRhKCkiIGNsYXNzPSIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gYm9yZGVyLWJvdHRvbSIgdi1iLXRvZ2dsZS5jb2xsYXBzZS1pbnB1dDE+CiAgICAgICAgICAgICAgPGIgY2xhc3M9IiBwLTMgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBjdXJzb3ItcG9pbnRlciB3LTEwMCIgQGNsaWNrPSIkcmVmcy5tYWluX3Rhc2suZm9jdXMoKSI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9wbHVzLnBuZyIgd2lkdGg9IjIwIiBjbGFzcz0ibXItMiI+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8aW5wdXQgbmFtZT0idGFzayIgdi1tb2RlbD0ibmV3X3Rhc2sudGFzayIgcGxhY2Vob2xkZXI9IkFkZCBhIHRhc2siIGNsYXNzPSJzdHlsZS1pbnB1dCAiIHJlZj0ibWFpbl90YXNrIj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvYj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxiLWNvbGxhcHNlIGlkPSJjb2xsYXBzZS1pbnB1dDEiID4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2RvLWNvbGxhcHNlLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2RvLWNvbGxhcHNlIHB4LTMgcHktMiI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRvZG8taWNvbnMiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImFwcDEiPgogICAgICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24gIG5vLWNhcmV0PgogICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2J1dHRvbi1jb250ZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jYWxlbmRhci1vIj48L2k+RHVlIERhdGUgPHNwYW4gY2xhc3M9InRhc2stYmx1ZSI+LSB7e2RhdGVGb3JtYXRlKG5ld190YXNrLmR1ZV9kYXRlKX19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtY2VudGVyIHRleHQtZGFyayBtYi0wIHAtMyBwYi0wIj5EdWUgRGF0ZTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gQGNsaWNrPSJuZXdfdGFzay5kdWVfZGF0ZSA9IGdldERhdGVJcygnVG9kYXknLCdjbGljaycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LWFsaWduIGN1cnNvci1wb2ludGVyIiBzdHlsZT0iZ2FwOjI1cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCI+VG9kYXk8L2g2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIHRleHQtZGFya2xpZ2h0IHRleHQtMTAiPnt7Z2V0RGF0ZUlzKCdUb2RheScpfX08L2g2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24taXRlbSBAY2xpY2s9Im5ld190YXNrLmR1ZV9kYXRlID0gZ2V0RGF0ZUlzKCdUb21vcnJvdycsJ2NsaWNrJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgtYWxpZ24iIHN0eWxlPSJnYXA6MjVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIj5Ub21vcnJvdzwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAgdGV4dC1kYXJrbGlnaHQgdGV4dC0xMCI+e3tnZXREYXRlSXMoJ1RvbW9ycm93Jyl9fTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIEBjbGljaz0ibmV3X3Rhc2suZHVlX2RhdGUgPSBnZXREYXRlSXMoJ05leHQgV2VlaycsJ2NsaWNrJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgtYWxpZ24iIHN0eWxlPSJnYXA6MjVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIj5OZXh0IFdlZWs8L2g2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIHRleHQtZGFya2xpZ2h0IHRleHQtMTAiPnt7Z2V0RGF0ZUlzKCdOZXh0IFdlZWsnKX19PC9oNj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCBweS0yIHB4LTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxoNj5QaWNrIGEgZGF0ZTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImRhdGUiIDpuYW1lPSJuZXdfdGFzay5kdWVfZGF0ZT8nZHVlX2RhdGUnOicnIiB2LW1vZGVsPSJuZXdfdGFzay5kdWVfZGF0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0idGV4dC1kYW5nZXIgbWItMCBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJuZXdfdGFzay5kdWVfZGF0ZT0nJyI+UmVtb3ZlIER1ZSBkYXRlPC9oNj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2RvLWljb25zIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJhcHA4Ij4KICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duICBuby1jYXJldD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNidXR0b24tY29udGVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtbGV2ZWwtdXAiPjwvaT4gPHNwYW4gY2xhc3M9InRhc2stYmx1ZSI+e3tuZXdfdGFzay5wcmlvcml0eSE9J05vcm1hbCc/bmV3X3Rhc2sucHJpb3JpdHk6Jyd9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LWNlbnRlciB0ZXh0LWRhcmsgbWItMCBwLTMgcGItMCI+UHJpb3JpdHk8L2g2PgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1kaXZpZGVyPjwvYi1kcm9wZG93bi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIHYtZm9yPSJwcmlvcml0eSBpbiBwcmlvcml0aWVzIiBAY2xpY2s9Im5ld190YXNrLnByaW9yaXR5PXByaW9yaXR5IiA6YWN0aXZlPSJuZXdfdGFzay5wcmlvcml0eT09cHJpb3JpdHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCI+e3twcmlvcml0eX19PC9oNj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0idGV4dC1kYW5nZXIgbWItMCBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJuZXdfdGFzay5wcmlvcml0eT0nJyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZW1vdmUgUHJpb3JpdHkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InByaW9yaXR5IiB2LW1vZGVsPSJuZXdfdGFzay5wcmlvcml0eSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oNj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2RvLWFkZCBweC0zIHB5LTIiPgogICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4iIHR5cGU9InN1Ym1pdCI+KyBBZGQ8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgPC9iLWNvbGxhcHNlPgogICAgICAgICAgPC9mb3JtPgogICAgICAgIDwvYi1jYXJkPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibWItMiI+CiAgICAgICAgPGItY2FyZCBib2R5LWNsYXNzPSJwLTAiIGNsYXNzPSJoLTEwMCBtYi0yIiB2LWZvcj0idGFzayBpbiB0YXNrcyI+IAogICAgICAgICAgPGRpdiBjbGFzcz0iIiBAY2xpY2s9ImN1cnJlbnRfbWFpbl90YXNrPXRhc2siPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gdGFzay1jYXJkIGJvcmRlci1ib3R0b20iIEBjbGljaz0ic2VsZWN0VGFzayh0YXNrKSIgOmNsYXNzPSJ0YXNrLmlkPT1jdXJyZW50X3Rhc2suaWQ/J2FjdGl2ZS10YXNrJzonJyIgOnN0eWxlPSJ0YXNrLnN0YXR1cz09J0NvbXBsZXRlZCc/J2JhY2tncm91bmQtY29sb3I6NzJmNTQyODAnOicnIj4KICAgICAgICAgICAgICA8YiBjbGFzcz0iIHAtMyBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGN1cnNvci1wb2ludGVyIHctMTAwIiBzdHlsZT0iZ2FwOjEwcHg7Ij4KICAgICAgICAgICAgICAgIDwhLS0gPGRpdj4KICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvY2hlY2sucG5nIiB3aWR0aD0iMjAiIGNsYXNzPSJtci0yIiB2LWlmPSJ0YXNrLnN0YXR1cz09J0NvbXBsZXRlZCciPgogICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9wbHVzLWVtLnBuZyIgd2lkdGg9IjIwIiBjbGFzcz0ibXItMiIgQGNsaWNrPSJjb21wbGV0ZVRhc2sodGFzaykiIHYtZWxzZT4KICAgICAgICAgICAgICAgIDwvZGl2PiAtLT4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3LTEwMCIgQGNsaWNrPSJhZGRTdWJUYXNrKHRhc2spIiB2LWItdG9nZ2xlPSInc3ViX3Rhc2tfbWFpbl9saXN0Jyt0YXNrLmlkIj4KICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LTE0IGZvbnQtd2VpZ2h0LTcwMCBtYi0wIiA6Y2xhc3M9InRhc2suc3RhdHVzPT0nQ29tcGxldGVkJyAmJiB0YXNrLmlzX2NvbXBsZXRlZD8nZmluaXNoLXRhc2snOicnIj57e3Rhc2sudGFza319PC9oNj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFzay1maWx0ZXJzIHB0LTEiPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LTEyIHRleHQtZGFya2xpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1saWdodCIgc3R5bGU9IiIgdi1mb3I9Iihhc3NpZ25fdXNlcixhdWtleSkgaW4gdGFzay5hc3NpZ25fdXNlcnMiIHYtaWY9InRhc2sudXNlcj09dXNlcklkIj4KICAgICAgICAgICAgICAgICAgICAgICAgQHt7YXNzaWduX3VzZXIudXNlcm5hbWV9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWxpZ2h0IiB2LWVsc2U+QXNzaWduZWQgYnkgQHt7dGFzay51c2VybmFtZX19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC0xMiAgYmFkZ2UgYmFkZ2Utb3V0bGluZS1pbmZvIj48aSBjbGFzcz0iZmEgZmEtY2FsZW5kYXItbyBwci0xIj48L2k+PHNwYW4gdi1pZj0idGFzay5kdWVfZGF0ZSI+RHVlIERhdGUgLSB7e2RhdGVGb3JtYXRlKHRhc2suZHVlX2RhdGUpfX08L3NwYW4+PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LTEyICBiYWRnZSIgdi1pZj0idGFzay5wcmlvcml0eSE9J05vcm1hbCciCiAgICAgICAgICAgICAgICAgICAgICA6Y2xhc3M9InRhc2sucHJpb3JpdHk9PSdVcmdlbnQnPydiYWRnZS1kYW5nZXInOnRhc2sucHJpb3JpdHk9PSdNZWRpdW0nPydiYWRnZS1zdWNjZXNzJzp0YXNrLnByaW9yaXR5PT0nTm9ybWFsJz8nYmFkZ2UtcHJpbWFyeSc6J2JhZGdlLWxpZ2h0JyIKICAgICAgICAgICAgICAgICAgICA+PGkgY2xhc3M9ImZhIGZhLWxldmVsLXVwIj48L2k+IHt7dGFzay5wcmlvcml0eSE9J05vcm1hbCc/dGFzay5wcmlvcml0eTonJ319PC9wPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LTEwIG1iLTAgdGV4dC1kYXJrbGlnaHQiIHYtaWY9InRhc2sudGFnLmlkICYmICF0YXNrLmlzX2NvbXBsZXRlZCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtbGlnaHQgdGV4dC0xMCIgOnN0eWxlPSInYmFja2dyb3VuZC1jb2xvcjonK3Rhc2sudGFnLmNvbG9yKychaW1wb3J0YW50O2NvbG9yOicrYmdUb1RleHRDb2xvcih0YXNrLnRhZy5jb2xvcikiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdGFncyBwci0xIj48L2k+e3t0YXNrLnRhZy5uYW1lfX0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwdC0yIiB2LWItdG9nZ2xlPSInc3ViX3Rhc2tfbWFpbl9saXN0Jyt0YXNrLmlkIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmctbGlnaHQgcC0wIiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTUwcHg7Ym9yZGVyLXJhZGl1czo1cHg7Ym94LXNoYWRvdzpyZ2IoMCAwIDAgLyAxNCUpIC0xcHggN3B4IDlweCAtNXB4Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJiYWRnZS1zdWNjZXNzIHAtMCIgc3R5bGU9ImJvcmRlci1yYWRpdXM6NXB4IDNweCAzcHggNXB4IiA6c3R5bGU9Iid3aWR0aDonK3Rhc2sudGFza19jb21wbGV0aW9uKyclJyI+CiAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InB4LTEiIHN0eWxlPSJ3aGl0ZS1zcGFjZTpub3dyYXA7Ij5Db21wbGV0ZWQge3twYXJzZUludCh0YXNrLnRhc2tfY29tcGxldGlvbil9fSU8L3NtYWxsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHItMiIgc3R5bGU9IndpZHRoOjE4JSI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1iZWxsIiA6Y2xhc3M9InRhc2subm90aWZpY2F0aW9ucy5zdWJfdGFza3M+MCAmJiB0YXNrLm5vdGlmaWNhdGlvbnMubm90aWZ5PjA/J21zZ19zaGFrZSc6JyciIHN0eWxlPSJmb250LXNpemU6MTZweDtjb2xvcjojNDM0ZTc1OyIgQGNsaWNrPSJyZW1vdmVOb3RpZmljYXRpb25zKHRhc2ssJ25ld19zYWJfdGFzaycpIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPHN1cD48c3BhbiBjbGFzcz0idGV4dC13YXJuaW5nIiB2LWlmPSJ0YXNrLm5vdGlmaWNhdGlvbnMuc3ViX3Rhc2tzPjAgJiYgdGFzay5ub3RpZmljYXRpb25zLm5vdGlmeT4wIj57e3Rhc2subm90aWZpY2F0aW9ucy5zdWJfdGFza3M/dGFzay5ub3RpZmljYXRpb25zLnN1Yl90YXNrczp0YXNrLm5vdGlmaWNhdGlvbnMubm90aWZ5fX08L3NwYW4+PC9zdXA+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im14LTEgcGwtMSI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jb21tZW50cyIgOmNsYXNzPSJ0YXNrLm5vdGlmaWNhdGlvbnMuYWN0aXZpdGllcz4wPydtc2dfc2hha2UnOicnIiBzdHlsZT0iZm9udC1zaXplOjE4cHg7Y29sb3I6IzQzNGU3NTsiIEBjbGljaz0iZ2V0QWN0aXZpdGllcyh0YXNrKSI+PC9pPgogICAgICAgICAgICAgICAgICAgIDxzdXA+PHNwYW4gY2xhc3M9InRleHQtc3VjY2VzcyIgdi1pZj0idGFzay5ub3RpZmljYXRpb25zLmFjdGl2aXRpZXM+MCI+e3t0YXNrLm5vdGlmaWNhdGlvbnMuYWN0aXZpdGllc319PC9zcGFuPjwvc3VwPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgPHNtYWxsPnt7dGltZUFnbyh0YXNrLmNyZWF0ZWRfb24pfX08L3NtYWxsPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8IS0tIDxkaXYgY2xhc3M9InRhc2stc3RhdHVzIHB4LTEiPgogICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWlmPSJ0YXNrLmlkPT1jdXJyZW50X3Rhc2suaWQiPgogICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWNoZXZyb24tcmlnaHQgb3BlbiI+PC9pPgogICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZT4KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jaGV2cm9uLWRvd24iPjwvaT4KICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgPC9kaXY+IC0tPgogICAgICAgICAgICAgIDwvYj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InB4LTIiPgogICAgICAgICAgICAgIDxiLWNvbGxhcHNlIDppZD0iJ3N1Yl90YXNrX21haW5fbGlzdCcrdGFzay5pZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2RvLWNvbGxhcHNlLWNvbnRhaW5lciBweS0yIiBzdHlsZT0iZmxleC1kaXJlY3Rpb246Y29sdW1uO2FsaWduLWl0ZW1zOnN0YXJ0O2dhcDo0cHg7Ij4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idy0xMDAgdGV4dC1jZW50ZXIgcC0zIiB2LWlmPSJ0YXNrLnN1Yl90YXNrczw9MCAmJiB0YXNrLnN1Yl90YXNrc19jb3VudD4wIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZV9sb2FkaW5nIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhc2stY2FyZCB0b2RvLWNvbGxhcHNlMiBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIHB4LTQgdy0xMDAgcHktMiIgdi1mb3I9InN1Yl90YXNrIGluIHRhc2suc3ViX3Rhc2tzIiBAY2xpY2s9InNlbGVjdFRhc2soc3ViX3Rhc2spIiA6Y2xhc3M9InN1Yl90YXNrLmlkPT1jdXJyZW50X3Rhc2suaWQ/J2FjdGl2ZS10YXNrJzonJyIgOnN0eWxlPSJzdWJfdGFzay5zdGF0dXM9PSdDb21wbGV0ZWQnPydiYWNrZ3JvdW5kLWNvbG9yOiM3MmY1NDI0MCFpbXBvcnRhbnQnOicnIiB2LWlmPSJzdWJfdGFzay51c2VyPT11c2VySWQgfHwgc3ViX3Rhc2suYXNzaWduX3Rhc2suaW5jbHVkZXModXNlcklkKSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIj4KICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGltZyBzcmM9Ii9pbWcvY2hlY2sucG5nIiB3aWR0aD0iMTciIGNsYXNzPSJtci0yIiB2LWlmPSJzdWJfdGFzay5zdGF0dXM9PSdDb21wbGV0ZWQnIj4KICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL3BsdXMtZW0ucG5nIiB3aWR0aD0iMTciIGNsYXNzPSJtci0yIiB2LWVsc2U+CiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImlzX2NvbXBsZXRlZCIgdi1tb2RlbD0ic3ViX3Rhc2suaXNfY29tcGxldGVkIiB2LXNob3c9ImZhbHNlIj4gLS0+CiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzdGF0dXMiIHYtbW9kZWw9InN1Yl90YXNrLnN0YXR1cyIgdi1zaG93PSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InctMTAwIGN1cnNvci1wb2ludGVyIHN1Yi10YXNrIG1sLTMiPgogICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LTE0IGZvbnQtd2VpZ2h0LTUwMCBtYi0wIiA6Y2xhc3M9InN1Yl90YXNrLnN0YXR1cz09J0NvbXBsZXRlZCcgJiYgc3ViX3Rhc2suaXNfY29tcGxldGVkPydmaW5pc2gtdGFzayc6JyciPnt7c3ViX3Rhc2sudGFza319PC9oNj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhc2stZmlsdGVycyBwdC0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtMTAgbWItMCB0ZXh0LWRhcmtsaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWxpZ2h0IHRleHQtMTAiIHN0eWxlPSJtYXJnaW4tbGVmdDoxcHgiIHYtZm9yPSIoYXNzaWduX3N1Yl91c2VyLGFzdWtleSkgaW4gc3ViX3Rhc2suYXNzaWduX3VzZXJzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9ImFzc2lnbl9zdWJfdXNlci5pZCE9dXNlcklkIj5Ae3thc3NpZ25fc3ViX3VzZXIudXNlcm5hbWV9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtZWxzZT5Bc3NpZ25lZCBieSBAe3tzdWJfdGFzay51c2VybmFtZX19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC0xMCBtYi0wIGJhZGdlIGJhZGdlLW91dGxpbmUtaW5mbyI+PGkgY2xhc3M9ImZhIGZhLWNhbGVuZGFyLW8gcHItMSI+PC9pPjxzcGFuIHYtaWY9InN1Yl90YXNrLmR1ZV9kYXRlIj5EdWUgRGF0ZSAtIHt7ZGF0ZUZvcm1hdGUoc3ViX3Rhc2suZHVlX2RhdGUpfX08L3NwYW4+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC0xMCBtYi0wIGJhZGdlIiB2LWlmPSJzdWJfdGFzay5wcmlvcml0eSE9J05vcm1hbCciCiAgICAgICAgICAgICAgICAgICAgICAgICAgOmNsYXNzPSJzdWJfdGFzay5wcmlvcml0eT09J1VyZ2VudCc/J2JhZGdlLWRhbmdlcic6c3ViX3Rhc2sucHJpb3JpdHk9PSdNZWRpdW0nPydiYWRnZS1zdWNjZXNzJzpzdWJfdGFzay5wcmlvcml0eT09J05vcm1hbCc/J2JhZGdlLXByaW1hcnknOidiYWRnZS1saWdodCciCiAgICAgICAgICAgICAgICAgICAgICAgID48aSBjbGFzcz0iZmEgZmEtbGV2ZWwtdXAiPjwvaT4ge3tzdWJfdGFzay5wcmlvcml0eSE9J05vcm1hbCc/c3ViX3Rhc2sucHJpb3JpdHk6Jyd9fTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtMTAgbWItMCB0ZXh0LWRhcmtsaWdodCIgdi1pZj0ic3ViX3Rhc2sudGFnLmlkICYmICFzdWJfdGFzay5pc19jb21wbGV0ZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1saWdodCB0ZXh0LTEwIiA6c3R5bGU9IidiYWNrZ3JvdW5kLWNvbG9yOicrc3ViX3Rhc2sudGFnLmNvbG9yKychaW1wb3J0YW50O2NvbG9yOicrYmdUb1RleHRDb2xvcihzdWJfdGFzay50YWcuY29sb3IpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS10YWdzIj48L2k+e3tzdWJfdGFzay50YWcubmFtZX19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHItMyIgc3R5bGU9IndpZHRoOjE4JSI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0IGN1cnNvci1wb2ludGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWJlbGwiIHN0eWxlPSJmb250LXNpemU6MTZweDtjb2xvcjojNDM0ZTc1OyIgOmNsYXNzPSJzdWJfdGFzay5ub3RpZmljYXRpb25zLm5vdGlmeT4wPydtc2dfc2hha2UnOicnIiBAY2xpY2s9InJlbW92ZU5vdGlmaWNhdGlvbnMoc3ViX3Rhc2ssJ25ld19zYWJfdGFzaycpIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdXA+PHNwYW4gY2xhc3M9InRleHQtd2FybmluZyIgdi1pZj0ic3ViX3Rhc2subm90aWZpY2F0aW9ucy5ub3RpZnk+MCI+e3tzdWJfdGFzay5ub3RpZmljYXRpb25zLm5vdGlmeX19PC9zcGFuPjwvc3VwPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibXgtMSBwbC0xIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jb21tZW50cyIgOmNsYXNzPSJzdWJfdGFzay5ub3RpZmljYXRpb25zLmFjdGl2aXRpZXM+MD8nbXNnX3NoYWtlJzonJyIgc3R5bGU9ImZvbnQtc2l6ZToxOHB4O2NvbG9yOiM0MzRlNzU7IiBAY2xpY2s9ImdldEFjdGl2aXRpZXMoc3ViX3Rhc2spIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdXA+PHNwYW4gY2xhc3M9InRleHQtc3VjY2VzcyIgdi1pZj0ic3ViX3Rhc2subm90aWZpY2F0aW9ucy5hY3Rpdml0aWVzPjAiPnt7c3ViX3Rhc2subm90aWZpY2F0aW9ucy5hY3Rpdml0aWVzfX08L3NwYW4+PC9zdXA+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+e3t0aW1lQWdvKHN1Yl90YXNrLmNyZWF0ZWRfb24pfX08L3NtYWxsPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwhLS0gPGRpdiBjbGFzcz0idGFzay1zdGF0dXMiPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9InN1Yl90YXNrLmlkPT1jdXJyZW50X3Rhc2suaWQiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtY2hldnJvbi1yaWdodCBvcGVuIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZT4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWNoZXZyb24tdXAgY2xvc2UiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IC0tPgoKICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxmb3JtICA6aWQ9IiduZXdTdWJGb3JtJyt0YXNrLmlkIiBAc3VibWl0LnByZXZlbnQ9ImNyZWF0ZUZvcm1kYXRhKHRhc2spIiBjbGFzcz0idy0xMDAiIHYtaWY9ImN1cnJlbnRfdGFza19jYXRlZ29yeSE9J2NvbXBsZXRlZF90YXNrcyciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhc2stY2FyZCB0b2RvLWNvbGxhcHNlMiBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIHB4LTQgcHktMiIgQGNsaWNrPSJjdXJyZW50X3Rhc2s9e307aXNfbmV3X3Rhc2s9dHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9wbHVzLnBuZyIgd2lkdGg9IjE3IiBjbGFzcz0ibXItMiIgQGNsaWNrPSJmb2N1c0lucHV0KCdhZGRfc3ViX3Rhc2snK3Rhc2suaWQpIj4KICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0iZm9udC13ZWlnaHQtNTAwIG1iLTAgdy0xMDAgcGwtMiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBuYW1lPSJ0YXNrIiB2LW1vZGVsPSJuZXdfc3ViX3Rhc2sudGFzayIgOmlkPSInYWRkX3N1Yl90YXNrJyt0YXNrLmlkIiBwbGFjZWhvbGRlcj0iQWRkIHN1YiB0YXNrIiBjbGFzcz0ic3R5bGUtaW5wdXQgdGV4dC0xMiBiZy10cmFuc3BhcmVudCB3LTEwMCI+CiAgICAgICAgICAgICAgICAgICAgICA8L2g2PgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idG9kby1jb2xsYXBzZS1jb250YWluZXIgYmctdHJhbnNwYXJlbnQgcC0xIiBzdHlsZT0ianVzdGlmeS1jb250ZW50OmZsZXgtZW5kO2dhcDogMTVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2RvLWNvbGxhcHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b2RvLWljb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duICBuby1jYXJldD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2J1dHRvbi1jb250ZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWNhbGVuZGFyLW8iPjwvaT4gPHNwYW4gY2xhc3M9InRhc2stYmx1ZSI+e3tkYXRlRm9ybWF0ZShuZXdfc3ViX3Rhc2suZHVlX2RhdGUpfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtY2VudGVyIHRleHQtZGFyayBtYi0wIHAtMyBwYi0wIj5EdWUgRGF0ZTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24tZGl2aWRlcj48L2ItZHJvcGRvd24tZGl2aWRlcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIEBjbGljaz0ibmV3X3N1Yl90YXNrLmR1ZV9kYXRlID0gZ2V0RGF0ZUlzKCdUb2RheScsJ2NsaWNrJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiBjdXJzb3ItcG9pbnRlciIgc3R5bGU9ImdhcDoyNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCI+VG9kYXk8L2g2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAgdGV4dC1kYXJrbGlnaHQgdGV4dC0xMCI+e3tnZXREYXRlSXMoJ1RvZGF5Jyl9fTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIEBjbGljaz0ibmV3X3N1Yl90YXNrLmR1ZV9kYXRlID0gZ2V0RGF0ZUlzKCdUb21vcnJvdycsJ2NsaWNrJykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiIgc3R5bGU9ImdhcDoyNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCI+VG9tb3Jyb3c8L2g2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAgdGV4dC1kYXJrbGlnaHQgdGV4dC0xMCI+e3tnZXREYXRlSXMoJ1RvbW9ycm93Jyl9fTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIEBjbGljaz0ibmV3X3N1Yl90YXNrLmR1ZV9kYXRlID0gZ2V0RGF0ZUlzKCdOZXh0IFdlZWsnLCdjbGljaycpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgtYWxpZ24iIHN0eWxlPSJnYXA6MjVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAiPk5leHQgV2VlazwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCB0ZXh0LWRhcmtsaWdodCB0ZXh0LTEwIj57e2dldERhdGVJcygnTmV4dCBXZWVrJyl9fTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1kaXZpZGVyPjwvYi1kcm9wZG93bi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCBweS0yIHB4LTMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2PlBpY2sgYSBkYXRlPC9oNj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJkYXRlIiA6bmFtZT0ibmV3X3N1Yl90YXNrLmR1ZV9kYXRlPydkdWVfZGF0ZSc6JyciIHYtbW9kZWw9Im5ld19zdWJfdGFzay5kdWVfZGF0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oNj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1kaXZpZGVyPjwvYi1kcm9wZG93bi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LWRhbmdlciBtYi0wIGN1cnNvci1wb2ludGVyIiBAY2xpY2s9Im5ld19zdWJfdGFzay5kdWVfZGF0ZT0nJyI+UmVtb3ZlIER1ZSBkYXRlPC9oNj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idG9kby1pY29ucyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93biAgbm8tY2FyZXQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNidXR0b24tY29udGVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1sZXZlbC11cCI+PC9pPiA8c3BhbiBjbGFzcz0idGFzay1ibHVlIj57e25ld19zdWJfdGFzay5wcmlvcml0eSE9J05vcm1hbCc/bmV3X3N1Yl90YXNrLnByaW9yaXR5OicnfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtY2VudGVyIHRleHQtZGFyayBtYi0wIHAtMyBwYi0wIj5Qcmlvcml0eTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24tZGl2aWRlcj48L2ItZHJvcGRvd24tZGl2aWRlcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIHYtZm9yPSJwcmlvcml0eSBpbiBwcmlvcml0aWVzIiBAY2xpY2s9Im5ld19zdWJfdGFzay5wcmlvcml0eT1wcmlvcml0eSIgOmFjdGl2ZT0ibmV3X3N1Yl90YXNrLnByaW9yaXR5PT1wcmlvcml0eSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAiPnt7cHJpb3JpdHl9fTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24tZGl2aWRlcj48L2ItZHJvcGRvd24tZGl2aWRlcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0idGV4dC1kYW5nZXIgbWItMCBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJuZXdfc3ViX3Rhc2sucHJpb3JpdHk9J05vcm1hbCciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZW1vdmUgUHJpb3JpdHkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icHJpb3JpdHkiIHYtbW9kZWw9Im5ld19zdWJfdGFzay5wcmlvcml0eSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRvZG8tYWRkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4iIHR5cGU9InN1Ym1pdCI+KyBBZGQ8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9iLWNvbGxhcHNlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvYi1jYXJkPgogICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyICIgdi1pZj0idGFza3MubGVuZ3RoPD0wICYmIGlzX3N0YXJ0Ij4KICAgICAgICAgIDxwIGNsYXNzPSJweS01Ij5ObyB0YXNrcyBmb3VuZCE8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgIiB2LWlmPSJ0YXNrcy5sZW5ndGg8PTAgJiYgIWlzX3N0YXJ0Ij4KICAgICAgICAgIDxwIGNsYXNzPSJwLTMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZV9sb2FkaW5nIj48L2Rpdj4KICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8IS0tIHJpZ2h0IHNpZGViYXIgLS0+CiAgICA8ZGl2IGNsYXNzPSJ0b2RvLXNpZGViYXIgcC0xIiBzdHlsZT0iaGVpZ2h0Ojgwdmg7b3ZlcmZsb3cteTphdXRvIj4KICAgICAgPGItY2FyZCBib2R5LWNsYXNzPSJwcmV2aWV3LWNhcmQgcC0wIj4KICAgICAgICA8Zm9ybSAgcmVmPSJkYXRhRm9ybSIgQHN1Ym1pdC5wcmV2ZW50PSJ1cGRhdGVGb3JtZGF0YSgpIiBjbGFzcz0iIiB2LWlmPSJjdXJyZW50X3Rhc2suaWQiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciBweC0zIHB0LTMgcGItMSIgc3R5bGU9ImdhcDoxMHB4OyI+CiAgICAgICAgICAgIDxiIGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGN1cnNvci1wb2ludGVyIHctMTAwIj4KICAgICAgICAgICAgICA8IS0tPGRpdiBAY2xpY2s9ImNvbXBsZXRlVGFzayhjdXJyZW50X3Rhc2spIj4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL2NoZWNrLnBuZyIgd2lkdGg9IjIwIiBjbGFzcz0ibXItMyIgdi1pZj0iY3VycmVudF90YXNrLnN0YXR1cz09J0NvbXBsZXRlZCciPgogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvcGx1cy1lbS5wbmciIHdpZHRoPSIyMCIgY2xhc3M9Im1yLTMiIHYtZWxzZT4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iaXNfY29tcGxldGVkIiB2LW1vZGVsPSJjdXJyZW50X3Rhc2suaXNfY29tcGxldGVkIiB2LXNob3c9ImZhbHNlIj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InN0YXR1cyIgdi1tb2RlbD0iY3VycmVudF90YXNrLnN0YXR1cyIgdi1zaG93PSJmYWxzZSI+CiAgICAgICAgICAgICAgPC9kaXY+LS0+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InctMTAwIj4KICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0idGV4dC0xNCBmb250LXdlaWdodC02MDAgbWItMCIgOmNsYXNzPSJjdXJyZW50X3Rhc2suc3RhdHVzPT0nQ29tcGxldGVkJyAmJiBjdXJyZW50X3Rhc2suaXNfY29tcGxldGVkPydmaW5pc2gtdGFzayc6JyciPnt7Y3VycmVudF90YXNrLnRhc2t9fTwvaDY+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ0YXNrIiB2LW1vZGVsPSJjdXJyZW50X3Rhc2sudGFzayI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIHRleHQtcmlnaHQiIHYtaWY9ImN1cnJlbnRfdGFzay51c2VyPT11c2VySWQgJiYgY3VycmVudF90YXNrLmFzc2lnbl90YXNrLmluY2x1ZGVzKHVzZXJJZCkiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1pbmZvIiB0eXBlPSJidXR0b24iIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOmRhcmtibHVlIWltcG9ydGFudDtjb2xvcjp3aGl0ZTtwYWRkaW5nOjNweCA4cHghaW1wb3J0YW50OyIgdi1pZj0iY3VycmVudF90YXNrLnN0YXR1cz09J0NvbXBsZXRlZCcgJiYgY3VycmVudF90YXNrLmlzX2NvbXBsZXRlZCI+e3tjdXJyZW50X3Rhc2suc3RhdHVzfX08L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tc3VjY2VzcyIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IzRjYWY1MCAhaW1wb3J0YW50O3BhZGRpbmc6M3B4IDhweCFpbXBvcnRhbnQ7IiB0eXBlPSJidXR0b24iIEBjbGljaz0iY29tcGxldGVUYXNrKGN1cnJlbnRfdGFzaykiIHYtZWxzZS1pZj0iY3VycmVudF90YXNrLnN0YXR1cyE9J0NvbXBsZXRlZCcgfHwgY3VycmVudF90YXNrLmlzX2NvbXBsZXRlZCI+PGkgY2xhc3M9ImZhIGZhLWNoZWNrLWNpcmNsZSI+PC9pPiBDb21wbGV0ZSBUYXNrPC9idXR0b24+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojNGNhZjUwICFpbXBvcnRhbnQ7cGFkZGluZzozcHggOHB4IWltcG9ydGFudDsiIHR5cGU9ImJ1dHRvbiIgQGNsaWNrPSJmaW5pc2hUYXNrKCkiIHYtZWxzZT48aSBjbGFzcz0iZmEgZmEtY2hlY2stY2lyY2xlIj48L2k+IE1hcmsgYXMgQ29tcGxldGU8L2J1dHRvbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgdGV4dC1yaWdodCIgdi1lbHNlLWlmPSJjdXJyZW50X3Rhc2sudXNlcj09dXNlcklkIj4KICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4taW5mbyIgdHlwZT0iYnV0dG9uIiBzdHlsZT0iY29sb3I6d2hpdGU7cGFkZGluZzozcHggOHB4IWltcG9ydGFudDsiIDpzdHlsZT0iY3VycmVudF90YXNrLmlzX2NvbXBsZXRlZD8nYmFja2dyb3VuZC1jb2xvcjpncmVlbiFpbXBvcnRhbnQnOidiYWNrZ3JvdW5kLWNvbG9yOm9yYW5nZSFpbXBvcnRhbnQnIiB2LWlmPSJjdXJyZW50X3Rhc2suc3RhdHVzIT0nQ29tcGxldGVkJyB8fCBjdXJyZW50X3Rhc2suaXNfY29tcGxldGVkIj57e2N1cnJlbnRfdGFzay5zdGF0dXN9fTwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIiAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IzRjYWY1MCAhaW1wb3J0YW50O3BhZGRpbmc6M3B4IDhweCFpbXBvcnRhbnQ7IiB0eXBlPSJidXR0b24iIEBjbGljaz0iZmluaXNoVGFzaygpIiB2LWVsc2U+PGkgY2xhc3M9ImZhIGZhLWNoZWNrLWNpcmNsZSI+PC9pPiBNYXJrIGFzIENvbXBsZXRlPC9idXR0b24+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIHRleHQtcmlnaHQiIHYtZWxzZT4KICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4taW5mbyIgdHlwZT0iYnV0dG9uIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjpkYXJrYmx1ZSFpbXBvcnRhbnQ7Y29sb3I6d2hpdGU7cGFkZGluZzozcHggOHB4IWltcG9ydGFudDsiIHYtaWY9ImN1cnJlbnRfdGFzay5zdGF0dXM9PSdDb21wbGV0ZWQnIHx8IGN1cnJlbnRfdGFzay5pc19jb21wbGV0ZWQiPnt7Y3VycmVudF90YXNrLnN0YXR1c319PC9idXR0b24+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiM0Y2FmNTAgIWltcG9ydGFudDtwYWRkaW5nOjNweCA4cHghaW1wb3J0YW50OyIgdHlwZT0iYnV0dG9uIiBAY2xpY2s9ImNvbXBsZXRlVGFzayhjdXJyZW50X3Rhc2spIiB2LWVsc2U+PGkgY2xhc3M9ImZhIGZhLWNoZWNrLWNpcmNsZSI+PC9pPiBDb21wbGV0ZSBUYXNrPC9idXR0b24+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvYj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3Vyc29yLXBvaW50ZXIiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0ibm90X2RlbGV0ZWQiIHYtbW9kZWw9ImN1cnJlbnRfdGFzay5ub3RfZGVsZXRlZCIgdi1zaG93PSJmYWxzZSI+CiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJpc19jb21wbGV0ZWQiIHYtbW9kZWw9ImN1cnJlbnRfdGFzay5pc19jb21wbGV0ZWQiIHYtc2hvdz0iZmFsc2UiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InN0YXR1cyIgdi1tb2RlbD0iY3VycmVudF90YXNrLnN0YXR1cyIgdi1zaG93PSJmYWxzZSI+CiAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXRyYXNoLW8iIHN0eWxlPSJmb250LXNpemU6MTZweDsiIEBjbGljaz0iZGVsZXRlVGFzaygpIiB2LWlmPSJjdXJyZW50X3Rhc2sudXNlcj09dXNlcklkICYmIGN1cnJlbnRfdGFzay5zdGF0dXMhPSdDb21wbGV0ZWQnIj48L2k+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8aHIgY2xhc3M9Im0tMiI+CiAgICAgICAgICA8ZGl2IHYtc2hvdz0iY3VycmVudF90YXNrLnN0YXR1cz09J0NvbXBsZXRlZCciPgogICAgICAgICAgICA8IS0tIDxkaXYgY2xhc3M9InNpZGViYXItdGFiIiB2LWlmPSJjdXJyZW50X3Rhc2subm90ZSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGFsaWduLWl0ZW1zLXN0YXJ0IiBzdHlsZT0iZ2FwOjEwcHg7Ij4KICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1wZW5jaWwiPjwvaT4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InctMTAwIHRleHQtYXJlYSBwLTEiIHYtaHRtbD0iY3VycmVudF90YXNrLm5vdGUiIHN0eWxlPSJib3JkZXI6IG5vbmU7YmFja2dyb3VuZDogI2U4ZThlODsiPjwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2lkZWJhci10YWIiIHYtaWY9ImN1cnJlbnRfdGFzay5pbWFnZSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciIgc3R5bGU9ImdhcDoxMHB4OyI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtcGFwZXJjbGlwIj48L2k+CiAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTAgZm9udC13ZWlnaHQtNjAwIj5BdHRhY2hlZCBJbWFnZTwvaDU+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC0yIj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0iY3VycmVudF90YXNrLmltYWdlIiBjbGFzcz0idy0xMDAiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgdi1zaG93PSJjdXJyZW50X3Rhc2sudXNlcj09dXNlcklkIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2lkZWJhci10YWIiPgogICAgICAgICAgICAgIDxkaXYgaWQ9ImFwcDQiPgogICAgICAgICAgICAgICAgPGItZHJvcGRvd24gIG5vLWNhcmV0IHJlZj0iYXNzaWduX3Rhc2tfZHJwZHduIj4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNidXR0b24tY29udGVudD4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCIgc3R5bGU9ImdhcDoxMHB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS10YXNrcyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMCBmb250LXdlaWdodC02MDAiPkFzc2lnbiB0byB0YXNrPC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWxpZ2h0IHRleHQtMTAiIHN0eWxlPSJtYXJnaW4tbGVmdDoxcHgiIHYtZm9yPSIoYXNzaWduX3N1Yl91c2VyLGFzdWtleSkgaW4gY3VycmVudF90YXNrLmFzc2lnbl91c2VycyIgdi1pZj0iY3VycmVudF90YXNrLnVzZXI9PXVzZXJJZCI+QHt7YXNzaWduX3N1Yl91c2VyLnVzZXJuYW1lfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LWNlbnRlciB0ZXh0LWRhcmsgbWItMCBwLTMgcGItMCI+QXNzaWduIHRvIHRhc2s8L2g2PgogICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1kaXZpZGVyPjwvYi1kcm9wZG93bi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIHYtZm9yPSIodXNlcix1a2V5KSBpbiB1c2VycyIgOmFjdGl2ZT0iY3VycmVudF90YXNrLmFzc2lnbl90YXNrLmluY2x1ZGVzKHVzZXIuaWQpIiBAY2xpY2s9InNlbGVjdFVzZXIodXNlcix1a2V5KSIgdi1pZj0idXNlci5lbXBsb3llZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiIgc3R5bGU9ImdhcDoyNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAiPjxpIGNsYXNzPSJmYSBmYS11c2VyIj48L2k+IHt7dXNlci5maXJzdF9uYW1lfX08L2g2PgogICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIHRleHQtZGFya2xpZ2h0IHRleHQtMTAiPkB7e3VzZXIudXNlcm5hbWV9fTwvaDY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpZGViYXItdGFiIGZsZXgtYWxpZ24yIj4KICAgICAgICAgICAgICA8ZGl2IGlkPSJhcHA1Ij4KICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duICBuby1jYXJldD4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNidXR0b24tY29udGVudD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgiIHN0eWxlPSJnYXA6MTBweDsiPgogICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWNhbGVuZGFyLW8iPjwvaT4KICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMCBmb250LXdlaWdodC02MDAiPkFkZCBEdWUgRGF0ZTwvaDU+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtbGVmdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLW91dGxpbmUtaW5mbyI+e3tkYXRlRm9ybWF0ZShjdXJyZW50X3Rhc2suZHVlX2RhdGUpfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtY2VudGVyIHRleHQtZGFyayBtYi0wIHAtMyBwYi0wIj5EdWUgRGF0ZTwvaDY+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gQGNsaWNrPSJjdXJyZW50X3Rhc2suZHVlX2RhdGUgPSBnZXREYXRlSXMoJ1RvZGF5JywnY2xpY2snKTt1cGRhdGVGb3JtZGF0YTIoKSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiBjdXJzb3ItcG9pbnRlciIgc3R5bGU9ImdhcDoyNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAiPlRvZGF5PC9oNj4KICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCB0ZXh0LWRhcmtsaWdodCB0ZXh0LTEwIj57e2dldERhdGVJcygnVG9kYXknKX19PC9oNj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gQGNsaWNrPSJjdXJyZW50X3Rhc2suZHVlX2RhdGUgPSBnZXREYXRlSXMoJ1RvbW9ycm93JywnY2xpY2snKTt1cGRhdGVGb3JtZGF0YTIoKSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiIgc3R5bGU9ImdhcDoyNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAiPlRvbW9ycm93PC9oNj4KICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCB0ZXh0LWRhcmtsaWdodCB0ZXh0LTEwIj57e2dldERhdGVJcygnVG9tb3Jyb3cnKX19PC9oNj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gQGNsaWNrPSJjdXJyZW50X3Rhc2suZHVlX2RhdGUgPSBnZXREYXRlSXMoJ05leHQgV2VlaycsJ2NsaWNrJyk7dXBkYXRlRm9ybWRhdGEyKCkiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgtYWxpZ24iIHN0eWxlPSJnYXA6MjVweDsiPgogICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIj5OZXh0IFdlZWs8L2g2PgogICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIHRleHQtZGFya2xpZ2h0IHRleHQtMTAiPnt7Z2V0RGF0ZUlzKCdOZXh0IFdlZWsnKX19PC9oNj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCBweS0yIHB4LTMiPgogICAgICAgICAgICAgICAgICAgIDxoNj5QaWNrIGEgZGF0ZTwvaDY+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImRhdGUiIDpuYW1lPSInZHVlX2RhdGUnIiB2LW1vZGVsPSJjdXJyZW50X3Rhc2suZHVlX2RhdGUiIEBjaGFuZ2U9InVwZGF0ZUZvcm1kYXRhMigpIj4KICAgICAgICAgICAgICAgICAgPC9oNj4KICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24tZGl2aWRlcj48L2ItZHJvcGRvd24tZGl2aWRlcj4KICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24taXRlbSA+CiAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LWRhbmdlciBtYi0wIGN1cnNvci1wb2ludGVyIiBAY2xpY2s9ImN1cnJlbnRfdGFzay5kdWVfZGF0ZT0nJzt1cGRhdGVGb3JtZGF0YTIoKSI+UmVtb3ZlIER1ZSBkYXRlPC9oNj4KICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBpZD0iYXBwNyI+CiAgICAgICAgICAgICAgICA8Yi1kcm9wZG93biAgbm8tY2FyZXQ+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjYnV0dG9uLWNvbnRlbnQ+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IiBzdHlsZT0iZ2FwOjEwcHg7Ij4KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1sZXZlbC11cCI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICA8ZGl2ID4KICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0wIGZvbnQtd2VpZ2h0LTYwMCI+UHJpb3JpdHk8L2g1PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UiIHYtaWY9ImN1cnJlbnRfdGFzay5wcmlvcml0eSE9J05vcm1hbCciIDpjbGFzcz0iY3VycmVudF90YXNrLnByaW9yaXR5PT0nVXJnZW50Jz8nYmFkZ2UtZGFuZ2VyJzpjdXJyZW50X3Rhc2sucHJpb3JpdHk9PSdNZWRpdW0nPydiYWRnZS1zdWNjZXNzJzpjdXJyZW50X3Rhc2sucHJpb3JpdHk9PSdOb3JtYWwnPydiYWRnZS1wcmltYXJ5JzonYmFkZ2UtbGlnaHQnIgogICAgICAgICAgICAgICAgICAgICAgICAgID4ge3tjdXJyZW50X3Rhc2sucHJpb3JpdHkhPSdOb3JtYWwnP2N1cnJlbnRfdGFzay5wcmlvcml0eTonJ319PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtY2VudGVyIHRleHQtZGFyayBtYi0wIHAtMyBwYi0wIj5Qcmlvcml0eTwvaDY+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gdi1mb3I9InByaW9yaXR5IGluIHByaW9yaXRpZXMiIEBjbGljaz0iY3VycmVudF90YXNrLnByaW9yaXR5PXByaW9yaXR5O3VwZGF0ZUZvcm1kYXRhMigpIiA6YWN0aXZlPSJjdXJyZW50X3Rhc2sucHJpb3JpdHk9PXByaW9yaXR5Ij4KICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAiPnt7cHJpb3JpdHl9fTwvaDY+CiAgICAgICAgICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1kaXZpZGVyPjwvYi1kcm9wZG93bi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtID4KICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtZGFuZ2VyIG1iLTAgY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0iY3VycmVudF90YXNrLnByaW9yaXR5PSdOb3JtYWwnO3VwZGF0ZUZvcm1kYXRhMigpIj4KICAgICAgICAgICAgICAgICAgICAgIFJlbW92ZSBQcmlvcml0eQogICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icHJpb3JpdHkiIHYtbW9kZWw9ImN1cnJlbnRfdGFzay5wcmlvcml0eSI+CiAgICAgICAgICAgICAgICAgICAgPC9oNj4KICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2lkZWJhci10YWIgZmxleC1hbGlnbjIiPgogICAgICAgICAgICAgIDxkaXYgaWQ9ImFwcDgiIHYtaWY9ImN1cnJlbnRfdGFzay5tYWluX3Rhc2sgfHwgKCFjdXJyZW50X3Rhc2subWFpbl90YXNrICYmIGN1cnJlbnRfdGFzay5zdWJfdGFza3NfY291bnQ8PTApIj4KICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duICBuby1jYXJldCByZWY9ImFzc2lnbl90YXNrX2RycGR3biIgdi1pZj0iIWN1cnJlbnRfdGFzay5pc19jb21wbGV0ZWQiPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2J1dHRvbi1jb250ZW50PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCIgc3R5bGU9ImdhcDoxMHB4OyI+CiAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdGFncyI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0wIGZvbnQtd2VpZ2h0LTYwMCI+U3RhdHVzPC9oNT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1sZWZ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtbGlnaHQgdGV4dC0xMCIgOnN0eWxlPSInYmFja2dyb3VuZC1jb2xvcjonK2N1cnJlbnRfdGFzay50YWcuY29sb3IrJyFpbXBvcnRhbnQ7Y29sb3I6JytiZ1RvVGV4dENvbG9yKGN1cnJlbnRfdGFzay50YWcuY29sb3IpIj57e2N1cnJlbnRfdGFzay50YWcubmFtZX19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtY2VudGVyIHRleHQtZGFyayBtYi0wIHAtMyBwYi0wIj5VcGRhdGUgU3RhdHVzPC9oNj4KICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24tZGl2aWRlcj48L2ItZHJvcGRvd24tZGl2aWRlcj4KICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24taXRlbSB2LWZvcj0iKHRhZyx1a2V5KSBpbiB0YWdzIiA6YWN0aXZlPSJjdXJyZW50X3Rhc2sudGFnLmlkPT10YWcuaWQiIEBjbGljaz0ic2VsZWN0VGFnKHRhZykiIHYtaWY9IihjdXJyZW50X3Rhc2subWFpbl90YWcgJiYgY3VycmVudF90YXNrLm1haW5fdGFnPT10YWcubWFpbl90YWcpIHx8ICghY3VycmVudF90YXNrLm1haW5fdGFnICYmICF0YWcubWFpbl90YWcpIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4LWFsaWduIiBzdHlsZT0iZ2FwOjI1cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibWItMCI+PGkgY2xhc3M9ImZhIGZhLXRhZyI+PC9pPiB7e3RhZy5uYW1lfX08L2g2PgogICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIHRleHQtZGFya2xpZ2h0IHRleHQtMTAiPnRhZzwvaDY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ibWFpbl90YWciIHYtbW9kZWw9ImN1cnJlbnRfdGFzay5tYWluX3RhZyI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBpZD0iYXBwOSI+CiAgICAgICAgICAgICAgICA8Yi1kcm9wZG93biAgbm8tY2FyZXQgcmVmPSJhc3NpZ25fdGFza19kcnBkd24iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2J1dHRvbi1jb250ZW50PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCIgc3R5bGU9ImdhcDoxMHB4OyI+CiAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtaW1hZ2UiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMCBmb250LXdlaWdodC02MDAiPkltYWdlIENvbXB1bHNvcnk8L2g1PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utc3VjY2VzcyIgdi1pZj0iY3VycmVudF90YXNrLmltYWdlX2NvbXB1bHNvcnkiPjxpIGNsYXNzPSJmYSBmYS1jaGVjayIgc3R5bGU9ImNvbG9yOiNmZmY7Zm9udC1zaXplOjEwcHgiPjwvaT5ZZXM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWRhbmdlciIgdi1lbHNlPjxpIGNsYXNzPSJmYSBmYS10aW1lcyIgc3R5bGU9ImNvbG9yOiNmZmY7Zm9udC1zaXplOjEwcHgiPjwvaT5Obzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LWNlbnRlciB0ZXh0LWRhcmsgbWItMCBwLTMgcGItMCI+U2VsZWN0IGFuIG9wdGlvbjwvaDY+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gOmFjdGl2ZT0iY3VycmVudF90YXNrLmltYWdlX2NvbXB1bHNvcnkiIEBjbGljaz0iY3VycmVudF90YXNrLmltYWdlX2NvbXB1bHNvcnk9MTt1cGRhdGVGb3JtZGF0YTIoKSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiIgc3R5bGU9ImdhcDoyNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAiPjxpIGNsYXNzPSJmYSBmYS1jaGVjayI+PC9pPiBZZXM8L2g2PgogICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIHRleHQtZGFya2xpZ2h0IHRleHQtMTAiPmNvbXB1bHNvcnk8L2g2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgICAgPGItZHJvcGRvd24taXRlbSA6YWN0aXZlPSIhY3VycmVudF90YXNrLmltYWdlX2NvbXB1bHNvcnkiIEBjbGljaz0iY3VycmVudF90YXNrLmltYWdlX2NvbXB1bHNvcnk9MDt1cGRhdGVGb3JtZGF0YTIoKSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1hbGlnbiIgc3R5bGU9ImdhcDoyNXB4OyI+CiAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAiPjxpIGNsYXNzPSJmYSBmYS10aW1lcyI+PC9pPiBObzwvaDY+CiAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAgdGV4dC1kYXJrbGlnaHQgdGV4dC0xMCI+bm90IGNvbXB1bHNvcnk8L2g2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICAgICAgICAgIDwvYi1kcm9wZG93bj4KICAgICAgICAgICAgICAgIDxkaXYgdi1zaG93PSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImltYWdlX2NvbXB1bHNvcnkiIHYtbW9kZWw9ImN1cnJlbnRfdGFzay5pbWFnZV9jb21wdWxzb3J5Ij4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPCEtLTxkaXYgY2xhc3M9InNpZGViYXItdGFiIj4KICAgICAgICAgICAgICA8ZGl2IGlkPSJhcHA5Ij4KICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duICBuby1jYXJldCByZWY9ImFzc2lnbl90YXNrX2RycGR3biI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjYnV0dG9uLWNvbnRlbnQ+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciIgc3R5bGU9ImdhcDoxMHB4OyI+CiAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtY2FsZW5kYXIiPjwvaT4KICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMCBmb250LXdlaWdodC02MDAiPjIzLzAxLzIwMjM8L2g1PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtY2VudGVyIHRleHQtZGFyayBtYi0wIHAtMyBwYi0wIj5TZWxlY3QgRGF0ZTwvaDY+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtMiBwdC0wIj4gCiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImRhdGUiPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvYi1kcm9wZG93bj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+LS0+CiAgICAgICAgICAgIDwhLS08ZGl2IGNsYXNzPSJzaWRlYmFyLXRhYiI+CiAgICAgICAgICAgICAgPGRpdiBpZD0iYXBwOSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiB3LTEwMCI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIiBzdHlsZT0iZ2FwOjEwcHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXRhc2tzIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMCBmb250LXdlaWdodC02MDAiPkFjdGl2aXR5PC9oNT4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0wIGZvbnQtd2VpZ2h0LTYwMCI+MjMvMDEvMjAyMzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2Pi0tPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHYtc2hvdz0iY3VycmVudF90YXNrLnN0YXR1cyE9J0NvbXBsZXRlZCcgJiYgY3VycmVudF90YXNrLnVzZXIhPXVzZXJJZCI+CiAgICAgICAgICAgIDwhLS0gPGRpdiBjbGFzcz0ic2lkZWJhci10YWIiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1zdGFydCIgc3R5bGU9ImdhcDoxMHB4OyI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtcGVuY2lsIj48L2k+CiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgcGxhY2Vob2xkZXI9IkFkZCBub3RlIiBjbGFzcz0idy0xMDAgdGV4dC1hcmVhIiBuYW1lPSJub3RlIiB2LW1vZGVsPSJjdXJyZW50X3Rhc2subm90ZSIgc3R5bGU9ImJvcmRlcjogbm9uZTtiYWNrZ3JvdW5kOiAjZThlOGU4OyI+PC90ZXh0YXJlYT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpZGViYXItdGFiIGN1cnNvci1wb2ludGVyIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIiBzdHlsZT0iZ2FwOjEwcHg7Ij4KICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1wYXBlcmNsaXAiPjwvaT4KICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMCBmb250LXdlaWdodC02MDAiPkFkZCBJbWFnZSA8c3VwIGNsYXNzPSJ0ZXh0LWRhbmdlciIgdi1pZj0iY3VycmVudF90YXNrLmltYWdlX2NvbXB1bHNvcnkiPio8L3N1cD48L2g1PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InB4LTUgcHQtMSBwYi0wIiB2LWlmPSJjdXJyZW50X3Rhc2sucHJldmlld19pbWFnZSI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9ImN1cnJlbnRfdGFzay5wcmV2aWV3X2ltYWdlIiBjbGFzcz0idy0xMDAiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InB4LTUgcHQtMSBwYi0wIiB2LWVsc2UtaWY9ImN1cnJlbnRfdGFzay5pbWFnZSI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9ImN1cnJlbnRfdGFzay5pbWFnZSIgY2xhc3M9InctMTAwIj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+IC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzaWRlYmFyLXRhYiBmbGV4LWFsaWduMiIgdi1pZj0iY3VycmVudF90YXNrLmltYWdlX2NvbXB1bHNvcnkiPgogICAgICAgICAgICAgIDxkaXYgaWQ9ImFwcDg1Ij4KICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duICBuby1jYXJldD4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNidXR0b24tY29udGVudD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgiIHN0eWxlPSJnYXA6MTBweDsiIEBjbGljaz0iZ2V0QWN0aXZpdGllcyhjdXJyZW50X3Rhc2spIj4KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1pbWFnZSI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0wIGZvbnQtd2VpZ2h0LTYwMCI+SW1hZ2UgQ29tcHVsc29yeSA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utc3VjY2VzcyI+PGkgY2xhc3M9ImZhIGZhLWNoZWNrIiBzdHlsZT0iY29sb3I6I2ZmZjtmb250LXNpemU6MTBweCI+PC9pPjwvc3Bhbj48L2g1PgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2lkZWJhci10YWIgZmxleC1hbGlnbjIiIHYtaWY9ImN1cnJlbnRfdGFzay5tYWluX3Rhc2sgfHwgKCFjdXJyZW50X3Rhc2subWFpbl90YXNrICYmIGN1cnJlbnRfdGFzay5zdWJfdGFza3NfY291bnQ8PTApIj4KICAgICAgICAgICAgICA8ZGl2IGlkPSJhcHA4IiB2LWlmPSJjdXJyZW50X3Rhc2subWFpbl90YWciPgogICAgICAgICAgICAgICAgPGItZHJvcGRvd24gIG5vLWNhcmV0IHJlZj0iYXNzaWduX3Rhc2tfZHJwZHduIiB2LWlmPSIhY3VycmVudF90YXNrLmlzX2NvbXBsZXRlZCI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjYnV0dG9uLWNvbnRlbnQ+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IiBzdHlsZT0iZ2FwOjEwcHg7Ij4KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS10YWdzIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTAgZm9udC13ZWlnaHQtNjAwIj5TdGF0dXM8L2g1PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWxlZnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1saWdodCB0ZXh0LTEwIiA6c3R5bGU9IidiYWNrZ3JvdW5kLWNvbG9yOicrY3VycmVudF90YXNrLnRhZy5jb2xvcisnIWltcG9ydGFudDtjb2xvcjonK2JnVG9UZXh0Q29sb3IoY3VycmVudF90YXNrLnRhZy5jb2xvcikiPnt7Y3VycmVudF90YXNrLnRhZy5uYW1lfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0idGV4dC1jZW50ZXIgdGV4dC1kYXJrIG1iLTAgcC0zIHBiLTAiPlVwZGF0ZSBTdGF0dXM8L2g2PgogICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1kaXZpZGVyPjwvYi1kcm9wZG93bi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIHYtZm9yPSIodGFnLHVrZXkpIGluIHRhZ3MiIDphY3RpdmU9ImN1cnJlbnRfdGFzay50YWcuaWQ9PXRhZy5pZCIgQGNsaWNrPSJzZWxlY3RUYWcodGFnKSIgdi1pZj0iY3VycmVudF90YXNrLm1haW5fdGFnPT10YWcubWFpbl90YWciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXgtYWxpZ24iIHN0eWxlPSJnYXA6MjVweDsiPgogICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIj48aSBjbGFzcz0iZmEgZmEtdGFnIj48L2k+IHt7dGFnLm5hbWV9fTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im1iLTAgdGV4dC1kYXJrbGlnaHQgdGV4dC0xMCI+dGFnPC9oNj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0iZmFsc2UiPgogICAgICAgICAgICAgIDxzZWxlY3QgbmFtZT0iYXNzaWduX3Rhc2siIG11bHRpcGxlIHYtbW9kZWw9ImN1cnJlbnRfdGFzay5hc3NpZ25fdGFzayI+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHYtZm9yPSJ1c2VyIGluIHVzZXJzIiA6dmFsdWU9InVzZXIuaWQiPnt7dXNlci51c2VybmFtZX19PC9vcHRpb24+CiAgICAgICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJweC0yIiB2LWlmPSIhY3VycmVudF90YXNrLm1haW5fdGFzayI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJnLWxpZ2h0IHAtMCIgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7Ym9yZGVyLXJhZGl1czo1cHg7Ym94LXNoYWRvdzpyZ2IoMCAwIDAgLyAxNCUpIC0xcHggN3B4IDlweCAtNXB4Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJiYWRnZS1zdWNjZXNzIHAtMCIgc3R5bGU9ImJvcmRlci1yYWRpdXM6NXB4IDNweCAzcHggNXB4IiA6c3R5bGU9Iid3aWR0aDonK2N1cnJlbnRfdGFzay50YXNrX2NvbXBsZXRpb24rJyUnIj4KICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0icHgtMSIgc3R5bGU9IndoaXRlLXNwYWNlOm5vd3JhcDsiPkNvbXBsZXRlZCB7e3BhcnNlSW50KGN1cnJlbnRfdGFzay50YXNrX2NvbXBsZXRpb24pfX0lPC9zbWFsbD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InB4LTIgcHktMiI+CiAgICAgICAgICAgIDxiIGNsYXNzPSJ0ZXh0LXByaW1hcnkgY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0idGFnU3RhdHVzKGN1cnJlbnRfdGFzaykiPlZpZXcgTW9yZTwvYj4KICAgICAgICAgICAgPGIgY2xhc3M9InRleHQtMTIgZmxvYXQtcmlnaHQiPjxzbWFsbD5jcmVhdGVkIG9uPC9zbWFsbD4ge3tkYXRlRm9ybWF0ZShjdXJyZW50X3Rhc2suY3JlYXRlZF9vbix0cnVlKX19PC9iPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICAKICAgICAgICA8L2Zvcm0+CiAgICAgICAgPGRpdiBjbGFzcz0iZW1wdHktdGFzayBwLTMiIHYtZWxzZS1pZj0iaXNfbmV3X3Rhc2siPgogICAgICAgICAgPGltZyBzcmM9Ii9pbWcvYWRkLWltZy53ZWJwIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgPGg1PkFkZCBhIHRhc2s8L2g1PgogICAgICAgICAgICA8cD5BZGQgIHRhc2sgZnJvbSB5b3VyIHdlYnNpdGUgbGVmdCB0YWI8L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9iLWNhcmQ+CiAgICA8L2Rpdj4KICAgCiAgPC9kaXY+CiAgPGItbW9kYWwgaWQ9ImFjdGl2aXR5IiB0aXRsZT0iTWVzc2FnZXMiID4KICAgIDxkaXYgY2xhc3M9ImFjdGl2aXR5LWNvbnRhaW5lciIgc3R5bGU9ImhlaWdodDogNjh2aDtvdmVyZmxvdy15OiBhdXRvOyI+CiAgICAgIDxkaXYgY2xhc3M9ImFjdGl2aXR5LWhlYWRlciBtYi0yIj4KICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWRwIj4KICAgICAgICAgIHt7c2x1Z1RvV29yZCgkcm9vdC51c2VySW5mby51c2VybmFtZS5sZW5ndGg+MD8kcm9vdC51c2VySW5mby51c2VybmFtZVswXTonWCcpfX0KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJhY3Rpdml0eS1jb2xsYXBzZSI+CiAgICAgICAgICA8Zm9ybSByZWY9Im1lc3NhZ2VGb3JtIiBAc3VibWl0LnByZXZlbnQ9Im1lc3NhZ2VGb3JtKCkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJweC01IHB5LTIiIHYtaWY9Im5ld19hY3Rpdml0eS5wcmV2aWV3X2ltYWdlIj4KICAgICAgICAgICAgICA8aW1nIDpzcmM9Im5ld19hY3Rpdml0eS5wcmV2aWV3X2ltYWdlIiBjbGFzcz0idy0xMDAiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPSJXcml0ZSBhIENvbW1lbnQiIHYtbW9kZWw9Im5ld19hY3Rpdml0eS5ub3RlIiBuYW1lPSJub3RlIiB2LWItdG9nZ2xlLmNvbGxhcHNlLWFjdGlvbj4KICAgICAgICAgICAgPCEtLSA8dGV4dGFyZWEgcGxhY2Vob2xkZXI9IldyaXRlIGEgQ29tbWVudCIgdi1iLXRvZ2dsZS5jb2xsYXBzZS1hY3Rpb24+PC90ZXh0YXJlYT4gLS0+CiAgICAgICAgICAgIDxiLWNvbGxhcHNlICBjbGFzcz0iYWN0aXZpdHktYm9keSIgaWQ9ImNvbGxhcHNlLWFjdGlvbiI+CiAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLWluZm8iPlNhdmU8L2J1dHRvbj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhY3Rpdml0eS1ib2R5LXJpZ2h0Ij4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGItZHJvcGRvd24gIG5vLWNhcmV0PgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2J1dHRvbi1jb250ZW50PgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0bi1pY29ucyI+PGkgY2xhc3M9ImZhIGZhLXBhcGVyY2xpcCI+PC9pPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJ0ZXh0LWNlbnRlciB0ZXh0LWRhcmsgbWItMCBwLTMgcGItMCI+QXR0YXRjaDwvaDY+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLWRpdmlkZXI+PC9iLWRyb3Bkb3duLWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgIDxiLWRyb3Bkb3duLXRleHQ+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtYi0wIj5JbWFnZTwvaDY+CiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZmlsZSIgOm5hbWU9Im5ld19hY3Rpdml0eS5wcmV2aWV3X2ltYWdlPydpbWFnZSc6J25vX2ltZyciIHN0eWxlPSJvcGFjaXR5OjA7ei1pbmRleDo5OTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtjdXJzb3I6cG9pbnRlciIgQGNoYW5nZT0ic2VsZWN0RmlsZSI+CiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPC9iLWRyb3Bkb3duLXRleHQ+CiAgICAgICAgICAgICAgICA8L2ItZHJvcGRvd24+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2ItY29sbGFwc2U+CiAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8aHIgY2xhc3M9Im15LTIiPgogICAgICA8ZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImFjdGl2aXR5LWhlYWRlciBtYi0xIiB2LWZvcj0idGFza19hY3Rpdml0eSBpbiB0YXNrX2FjdGl2aXRpZXMiPgogICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1kcCIgOnN0eWxlPSJ0YXNrX2FjdGl2aXR5LnVzZXI9PXVzZXJJZD8nJzonYmFja2dyb3VuZC1jb2xvcjojNjY2ZmIzJyI+CiAgICAgICAgICAgIHt7c2x1Z1RvV29yZCh0YXNrX2FjdGl2aXR5LnVzZXJuYW1lLmxlbmd0aD4wP3Rhc2tfYWN0aXZpdHkudXNlcm5hbWVbMF06J1gnKX19CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im14LTEgdy0xMDAiPgogICAgICAgICAgICA8Yj5Ae3t0YXNrX2FjdGl2aXR5LnVzZXJuYW1lfX08L2I+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InB4LTIgY3Vyc29yLXBvaW50ZXIiIHYtaWY9InRhc2tfYWN0aXZpdHkuaW1hZ2UiPgogICAgICAgICAgICAgIDxpbWcgOnNyYz0idGFza19hY3Rpdml0eS5pbWFnZSIgc3R5bGU9Im1heC1oZWlnaHQ6MTAwcHg7bWF4LXdpZHRoOjEwMCUiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHAgY2xhc3M9InctMTAwIj57e3Rhc2tfYWN0aXZpdHkubm90ZX19IDxzbWFsbCBjbGFzcz0idGV4dC1pbmZvIHB0LTEiIHN0eWxlPSJmbG9hdDpyaWdodCI+e3t0aW1lQWdvKHRhc2tfYWN0aXZpdHkuY3JlYXRlZF9vbil9fTwvc21hbGw+PC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9iLW1vZGFsPgogIDxiLW1vZGFsIGlkPSJ0YXNrLXRhZ3MiIHRpdGxlPSJBY3Rpdml0aWVzIiA+CiAgICA8ZGl2IGNsYXNzPSJhY3Rpdml0eS1jb250YWluZXIgcC0yIiBzdHlsZT0iaGVpZ2h0OiA2OHZoO292ZXJmbG93LXk6IGF1dG87Ij4KICAgICAgPGRpdiBjbGFzcz0icm93IG14LTAiPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgcC0yIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbGVmdCI+CiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIHAtMSI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdGFza3MiPjwvaT4gVGFzayBDcmVhdGVkCiAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtMTIgZC1ibG9jayBtdC0xIj5jcmVhdGVkIGJ5IEB7e2N1cnJlbnRfdGFzay51c2VybmFtZX19PC9zcGFuPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJmbG9hdDpyaWdodCI+CiAgICAgICAgICAgICAgPHNtYWxsPnt7dGltZUFnbyhjdXJyZW50X3Rhc2suY3JlYXRlZF9vbil9fTwvc21hbGw+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIiB2LWZvcj0idGFnX3N0YSBpbiB0YWdfc3RhdHVzIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgcC0yIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtbGVmdCI+CiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1saWdodCBwLTEiIDpzdHlsZT0iJ2JhY2tncm91bmQtY29sb3I6Jyt0YWdfc3RhLmNvbG9yKychaW1wb3J0YW50O2NvbG9yOicrYmdUb1RleHRDb2xvcih0YWdfc3RhLmNvbG9yKSI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdGFncyI+PC9pPnt7dGFnX3N0YS5uYW1lfX0KICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC0xMiBkLWJsb2NrIG10LTEiPnVwZGF0ZWQgYnkgQHt7dGFnX3N0YS51c2VybmFtZX19PC9zcGFuPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJmbG9hdDpyaWdodCI+CiAgICAgICAgICAgICAgPHNtYWxsPnt7dGltZUFnbyh0YWdfc3RhLmNyZWF0ZWRfb24pfX08L3NtYWxsPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMyIgdi1pZj0iY3VycmVudF90YXNrLmlzX2NvbXBsZXRlZCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHAtMiI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LWxlZnQiPgogICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tZGFuZ2VyIHAtMSI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdGFza3MiPjwvaT4gVGFzayBDb21wbGV0ZWQKICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC0xMiBkLWJsb2NrIG10LTEiPnt7ZGF0ZUZvcm1hdGUoY3VycmVudF90YXNrLnVwZGF0ZWRfb24pfX08L3NwYW4+CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImZsb2F0OnJpZ2h0Ij4KICAgICAgICAgICAgICA8c21hbGw+e3t0aW1lQWdvKGN1cnJlbnRfdGFzay51cGRhdGVkX29uKX19PC9zbWFsbD4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9iLW1vZGFsPgo8L2Rpdj4gIAo="},null]}