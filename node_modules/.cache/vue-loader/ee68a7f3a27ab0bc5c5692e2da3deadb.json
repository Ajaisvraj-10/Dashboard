{"remainingRequest":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Downloads\\Archive (3)\\src\\containers\\layouts\\verticalSidebar\\verticalTopbar.vue?vue&type=template&id=44ecce37&scoped=true&","dependencies":[{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\src\\containers\\layouts\\verticalSidebar\\verticalTopbar.vue","mtime":1696426944802},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1691816392152},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\index.js","mtime":1691816392152}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}