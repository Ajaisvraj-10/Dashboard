{"remainingRequest":"/Users/muhammed/Documents/vue_projects/biowin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/biowin/src/views/app/oodo/qc/workers-test-form.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/biowin/src/views/app/oodo/qc/workers-test-form.vue","mtime":1676048494000},{"path":"/Users/muhammed/Documents/vue_projects/biowin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/biowin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/biowin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/biowin/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/muhammed/Documents/vue_projects/biowin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/biowin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcuLi9zdHlsZXMvc3R5bGUuY3NzJzsKCgo="},{"version":3,"sources":["workers-test-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA","file":"workers-test-form.vue","sourceRoot":"src/views/app/oodo/qc","sourcesContent":["<template>\r\n  <div class=\"main-content main-content2\">\r\n    <div>\r\n      <div class=\"d-flex mb-2 align-items-center justify-content-between\">\r\n        <slot name=\"header\">\r\n           <h5 class=\"mb-0\">\r\n             {{slugToWord('labours_test')}} {{dateFormate(current_date)}} (shift {{shift}})\r\n           </h5>\r\n        </slot>\r\n        <div class=\"d-flex\">\r\n          <span class=\"mx-2\" v-if=\"department=='yard'\">\r\n            <small>{{'Yard'}}</small>\r\n            <b>{{department_name}}</b>\r\n          </span>\r\n          <span class=\"mx-2\" v-else>\r\n            <small>{{'Department'}}</small>\r\n            <b>{{department_name}} Department</b>\r\n          </span>\r\n          <span class=\"mx-2\" v-if=\"department=='department'\">\r\n            <small>Warehouse</small>\r\n            <b>{{warehouse_name}}</b>\r\n          </span>\r\n        </div>\r\n        <div class=\"d-flex\">\r\n          <!-- <small>{{workers_attendances.length}}Labour{{checkMult(workers_attendances.length)}}</small> -->\r\n          <b-button type=\"button\" variant=\"success\" class=\" px-3 py-1  d-sm-block mx-1\"\r\n             @click=\"form_data={shift:shift,hours:8, overtime_double_hours:0, overtime_single_hours:0, workers:form_data.workers};$bvModal.show('worker-modal')\" v-if=\"form_data.workers.length>0 && current_date==today\"> Save\r\n          </b-button>\r\n          <router-link to=\"/app/qc/workers-test\">\r\n            <b-button type=\"button\" variant=\"danger\" class=\" px-3 py-1  d-sm-block mx-1\">\r\n              Discard\r\n            </b-button>\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n      <div class=\"my-3 border-top\"></div>\r\n    </div>\r\n\r\n    <b-row class=\"main-scroll pt-2\">\r\n      <b-col lg=\"12\" xl=\"12\">\r\n        <b-card>\r\n          <div>\r\n            <div class=\"main-scroll\" style=\"height:73vh\">\r\n              <table class=\"table table-striped\"> \r\n                <thead class=\"\">\r\n                  <tr >\r\n                    <th>\r\n                       <!-- <b-form-checkbox v-model=\"select_all\" @change=\"selectAll()\">\r\n                        <b>#Selct All</b>\r\n                      </b-form-checkbox> -->\r\n                      Labour\r\n                    </th>\r\n                    <th>Gender</th>\r\n                    <th>Work Type</th>\r\n                    <th v-for=\"physical_parameter in physical_parameters\">{{physical_parameter.name}}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"attendance in workers_attendances\">\r\n                    <th>\r\n                       <!-- <b-form-checkbox name=\"workers\" v-model=\"form_data.workers\" :value=\"attendance.id\">\r\n                        <b>#{{attendance.worker_detail.id}}/{{attendance.worker_detail.name}}</b>\r\n                      </b-form-checkbox> -->\r\n                      #{{attendance.worker_detail.id}}/{{attendance.worker_detail.name}}\r\n                    </th>\r\n                    <th>{{attendance.worker_detail.gender}}</th>\r\n                    <th>\r\n                      <span class=\"text-primary\">{{attendance.worker_detail.work_type}}</span>\r\n                    </th>\r\n                    <td v-for=\"param in attendance.physical_parameter\">\r\n                      <span>\r\n                        <input type=\"hidden\" value=\"1\" :name=\"param.name+attendance.id\" :id=\"param.name+attendance.id\">\r\n                        <input :placeholder=\"param.limit_type\" type=\"number\" step=\"0.1\" class=\"ui-autocomplete-input w-100\" autocomplete=\"off\" v-model=\"param.limit\" :name=\"param.name+'limit'+attendance.id\" v-if=\"param.limit_type=='%' || param.limit_type=='<' || param.limit_type=='>'\" @input=\"checkParam(param)\" @change=\"dataForm(attendance)\" required>\r\n                        <input :placeholder=\"'Type here..'\" type=\"text\" step=\"0.1\" class=\"ui-autocomplete-input w-100\" autocomplete=\"off\" :name=\"param.name+'limit'+attendance.id\" v-else-if=\"param.limit_type=='Typing'\" v-model=\"param.limit\" @change=\"dataForm(attendance)\" required>\r\n                        <select class=\"ui-autocomplete-input w-100\" :name=\"param.name+'limit'+attendance.id\" v-else-if=\"param.limit_type=='YES/NO'\" v-model=\"param.limit\" @change=\"dataForm(attendance)\">\r\n                          <option value=\"YES\">YES</option>\r\n                          <option value=\"NO\">NO</option>\r\n                        </select>\r\n                        <select class=\"ui-autocomplete-input w-100\" :name=\"param.name+'limit'+attendance.id\" v-else-if=\"param.limit_type=='Options'\" v-model=\"param.limit\" @change=\"dataForm(attendance)\">\r\n                          <option v-for=\"option in param.options\" :value=\"option.id\">{{option.name}}</option>\r\n                        </select>\r\n                      </span>\r\n                      <div class=\"px-2\" v-if=\"param.limit\">\r\n                        <span v-if=\"param.limit_type=='%' || param.limit_type=='<' || param.limit_type=='>'\">\r\n                          {{param.limit}}{{param.limit_type}}\r\n                        </span>\r\n                        <span v-else-if=\"param.limit_type=='Typing'\">\r\n                          {{param.limit}}\r\n                        </span>\r\n                        <span v-else-if=\"param.limit_type=='YES/NO'\" class=\"badge\" :class=\"param.limit=='YES'?'badge-success':'badge-danger'\">\r\n                          {{param.limit}}\r\n                        </span>\r\n                        <span v-else-if=\"param.limit_type=='Options'\" class=\"badge badge-light p-1\" :style=\"'background-color:'+param.color+'!important;color:'+bgToTextColor(param.color)\">\r\n                          {{param.limit}}\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div v-show=\"false\">\r\n                <form v-for=\"attendance in workers_attendances\" :id=\"'dataForm'+attendance.id\">\r\n                  <div v-for=\"param in attendance.physical_parameter\">\r\n                    <input type=\"hidden\" value=\"1\" :name=\"'physical_parameter'+param.id+'name'+attendance.id\">\r\n                    <input v-model=\"param.limit\" :name=\"'physical_parameter'+param.id+'limit'+attendance.id\">\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <div>\r\n      <b-modal id=\"worker-modal\" hide-header  hide-footer :no-close-on-backdrop=\"true\">\r\n        <form ref=\"dataForm\" @submit.prevent=\"dataForm()\">\r\n          <div>\r\n             <div class=\"d-flex mb-2 align-items-center  justify-content-between\">\r\n                <slot name=\"header\">\r\n                   <h5 class=\"mb-0\"><span class=\"text-success\">Set</span>/Time</h5>\r\n                </slot>\r\n                <div class=\"d-flex\">\r\n                  <b-button type=\"submit\" variant=\"success\" class=\" px-3 py-1 d-sm-block mx-1\">Submit</b-button>\r\n                  <b-button type=\"button\" variant=\"danger\" class=\" px-3 py-1 d-sm-block mx-1\" @click=\"$bvModal.hide('worker-modal')\">Close</b-button>\r\n                </div>\r\n              </div>\r\n              <div class=\" my-3 border-top\"></div>\r\n          </div>\r\n          <b-row class=\"main-scroll\">\r\n            <b-col lg=\"12\" xl=\"12\" class=\"\">\r\n              <b-card header-bg-variant=\"transparent\" class=\"mt-2 pt-0\">\r\n                <div class=\"o_thread_search_input\">\r\n                  <span style=\"width:120px;\">Workig time(Hr) : </span>\r\n                  <input type=\"number\" min=\"0\" v-model=\"form_data.hours\" name=\"hours\">\r\n                </div>\r\n                <div class=\"o_thread_search_input\">\r\n                  <span style=\"width:120px;\">Double over time(Hr) : </span>\r\n                  <input type=\"number\" min=\"0\" v-model=\"form_data.overtime_double_hours\" name=\"overtime_double_hours\">\r\n                </div>\r\n                <div class=\"o_thread_search_input\">\r\n                  <span style=\"width:120px;\">Single over time(Hr) : </span>\r\n                  <input type=\"number\" min=\"0\" v-model=\"form_data.overtime_single_hours\" name=\"overtime_single_hours\">\r\n                </div>\r\n                <div class=\"o_thread_search_input mx-1 mt-2\">\r\n                  <span style=\"width:120px;\">Workers ({{form_data.workers.length}}): </span>\r\n                  <select v-model=\"form_data.workers\" multiple name=\"workers\" v-show=\"false\">\r\n                    <option v-for=\"w in form_data.workers\" :value=\"w\">{{w}}</option>\r\n                  </select>\r\n                  <input type=\"hidden\" name=\"shift\" :value=\"form_data.shift\">\r\n                  <table>\r\n                    <tr v-for=\"attendance in workers_attendances\">\r\n                      <th>\r\n                        <b>#{{attendance.worker_detail.id}}/{{attendance.worker_detail.name}}</b>\r\n                      </th>\r\n                      <th>({{attendance.worker_detail.gender}})</th>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n                <hr class=\"my-2\">\r\n              </b-card>\r\n            </b-col>\r\n          </b-row>\r\n        </form>\r\n      </b-modal>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Fields from '@/data/Fields'\r\nimport contacts from '@/data/list_grid'\r\nimport TableHeader from '/src/views/app/oodo/components/table_header'\r\nexport default {\r\n  metaInfo: {\r\n    // if no subcomponents specify a metaInfo.title, this title will be used\r\n    title: \"States\"\r\n  },\r\n  components:{\r\n    TableHeader\r\n  },\r\n  data() {\r\n    return {\r\n      form_data:{hours:8, overtime_double_hours:0, overtime_single_hours:0, date:'', shift:'DAY',workers:[],},\r\n      workers_attendances:[],\r\n      select_all:false,\r\n      shift: this.$route.params.shift,\r\n      department: this.$route.params.department,\r\n      department_id: this.$route.params.department_id,\r\n      department_name:'',\r\n      current_date: this.$route.query.date,\r\n      warehouse_id:null,\r\n      warehouse_name:'',\r\n      select_all:false,\r\n      physical_parameters:[],\r\n      today:this.currentDate(),\r\n    };\r\n  },\r\n  mounted(){\r\n    this.$root.current_section = 'qc'\r\n    if(this.$route.params.warehouse){\r\n      this.warehouse_id=this.$route.params.warehouse\r\n    }\r\n    this.getPlanAccess()\r\n    this.getPhysicalParameters()\r\n  },\r\n  methods: {\r\n    getRows() {\r\n      var param = '?date='+this.current_date+'&department='+this.department+'&department_id='+this.department_id+'&shift='+this.shift\r\n      if(this.department=='department' && this.warehouse_id){\r\n        param += '&warehouse='+this.warehouse_id\r\n      }\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/employee/workers_attendance/'+param, {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        var workers = jsonData.data\r\n        for(var w=0;w<workers.length;w++){\r\n          if(!workers[w].physical_parameter){\r\n            var pp = JSON.parse(JSON.stringify(this.physical_parameters))\r\n            workers[w].physical_parameter = pp\r\n          }\r\n        }\r\n        this.workers_attendances = workers\r\n        this.department_name = jsonData.department_name\r\n        this.warehouse_name = jsonData.warehouse_name\r\n      })\r\n    },\r\n    getPhysicalParameters() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/qc/physical_parameters/?parameter_for=labours', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.physical_parameters = jsonData\r\n        this.getRows()\r\n      })\r\n    },\r\n    selectAll(){\r\n      var self = this\r\n      this.form_data.workers = []\r\n      if(!this.select_all){\r\n        this.workers_attendances.forEach(function(attendance){\r\n          self.form_data.workers.push(attendance.id)\r\n        })\r\n      }\r\n    },\r\n    dataForm(attendance) {\r\n      var self = this\r\n      setTimeout(function(){\r\n        self.updateForm(attendance)\r\n      },50)\r\n    },\r\n    updateForm(attendance) {\r\n      var formdata = new FormData(document.getElementById('dataForm'+attendance.id))\r\n      formdata.append('workers_attendance', attendance.id)\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/employee/workers_attendance_mult/', {\r\n          method : 'PUT',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        if(jsonData.success){\r\n          this.getRows()\r\n          this.showAlert('Done!')\r\n        }else{\r\n          this.showAlert('Something Wrong!')\r\n        }\r\n      })\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style >\r\n  @import '../styles/style.css';\r\n\r\n  \r\n</style>\r\n"]}]}