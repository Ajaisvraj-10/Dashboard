{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\src\\views\\app\\videoot\\plan.vue?vue&type=template&id=4bf7c300&scoped=true&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\src\\views\\app\\videoot\\plan.vue","mtime":1694766817624},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1691816392152},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\vue-loader\\lib\\index.js","mtime":1691816392152}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}