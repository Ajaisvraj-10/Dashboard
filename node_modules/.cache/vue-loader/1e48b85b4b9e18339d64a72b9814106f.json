{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\processing-charges.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\processing-charges.vue","mtime":1671368756665},{"path":"E:\\vue_projects\\biowin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4uL3N0eWxlcy9zdHlsZS5jc3MnOwoKCg=="},{"version":3,"sources":["processing-charges.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA","file":"processing-charges.vue","sourceRoot":"src/views/app/oodo/production","sourcesContent":["<template>\r\n  <div class=\"main-content main-content2\">\r\n    <div>\r\n       <div class=\"d-flex mb-2 align-items-center justify-content-between\">\r\n            <slot name=\"header\">\r\n               <h5 class=\"mb-0\">{{slugToWord('workers-attendance')}}</h5>\r\n            </slot>\r\n              <div class=\"d-flex\">\r\n              <!--   <router-link to=\"/app/production/direct-machine-out-packing\">\r\n                  <b-button variant=\"danger\" class=\" px-3 py-1  d-sm-block mx-1\"\r\n                    >Discard\r\n                  </b-button>\r\n                </router-link> -->\r\n              </div>\r\n           \r\n        </div>\r\n        <div class=\"my-3 border-top\"></div>\r\n    </div>\r\n    <!-- <div class=\"wrapper\"> -->\r\n    <b-card class=\"main-scroll\">\r\n      <table class=\"table table-striped\"> \r\n        <thead class=\"bg-info text-light\">\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Process</th>\r\n            <th>Labour Charge</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody v-for=\"(main,key) in processes\">\r\n          <tr>\r\n            <th>#{{key+1}})</th>\r\n            <th>{{main.name}}</th>\r\n            <th>\r\n            </th>\r\n            <th>\r\n            </th>\r\n          </tr>\r\n          <tr v-for=\"(process,key2) in main.production_processes\">\r\n            <th></th>\r\n            <th>#{{key2+1}}) {{process.name}}</th>\r\n            <th>\r\n              <input type=\"number\" v-model=\"process.labour_charge\">\r\n            </th>\r\n            <th>\r\n              <b-button variant=\"success\" type=\"button\" @click=\"updateFormdata(process)\" class=\" px-3 py-1  d-sm-block mx-1\">\r\n                Save\r\n              </b-button>\r\n            </th>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </b-card>\r\n\r\n    <div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Fields from '@/data/Fields'\r\nimport contacts from '@/data/list_grid'\r\nimport TableHeader from '/src/views/app/oodo/components/table_header'\r\nexport default {\r\n  metaInfo: {\r\n    // if no subcomponents specify a metaInfo.title, this title will be used\r\n    title: \"States\"\r\n  },\r\n  components:{\r\n    TableHeader\r\n  },\r\n  data() {\r\n    return {\r\n      form_data:{date:''},\r\n      processes:[],\r\n      current_date:this.dateFormate(new Date()),\r\n    };\r\n  },\r\n  mounted(){\r\n    this.$root.current_section = 'production'\r\n    this.getProcesses()\r\n  },\r\n  methods: {\r\n    getProcesses() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/production_process/?is_main=true', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.processes = jsonData\r\n      })\r\n    },\r\n    updateFormdata(process_) {\r\n      if(!process_.labour_charge){\r\n        return false\r\n      }\r\n      var formdata = new FormData()\r\n      formdata.append('labour_charge', process_.labour_charge)\r\n      formdata.append('name', process_.name)\r\n      for(var p=0;p<process_.product.length;p++){\r\n        formdata.append('product', process_.product[p])\r\n      }\r\n      formdata.append('is_packing', process_.is_packing)\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/production_process/'+process_.id+'/', {\r\n          method : 'PUT',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        if(jsonData.id>0){\r\n          this.showAlert('Saved Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!')\r\n        }\r\n      })\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style >\r\n  @import '../styles/style.css';\r\n\r\n  \r\n</style>\r\n"]}]}