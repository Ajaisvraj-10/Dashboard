{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\processing-form.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\processing-form.vue","mtime":1654256246767},{"path":"E:\\vue_projects\\biowin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KDQpAaW1wb3J0ICcuLi9zdHlsZXMvc3R5bGUuY3NzJzsNCg0KDQo="},{"version":3,"sources":["processing-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwZA","file":"processing-form.vue","sourceRoot":"src/views/app/oodo/production","sourcesContent":["<template>\r\n  <div class=\"main-content create-main\">\r\n    <form ref=\"dataForm\" @submit.prevent=\"dataForm()\">\r\n      <div>\r\n         <div class=\"d-flex mb-2 align-items-center  justify-content-between\">\r\n              <slot name=\"header\">\r\n                 <h5 class=\"mb-0\"><span class=\"text-success\">Processing</span> / {{slugToWord(action)}}</h5>\r\n                    \r\n              </slot>\r\n              <div class=\"d-flex\">\r\n                <b-button variant=\"primary\" type=\"button\" class=\" px-3 py-1  d-sm-block mx-1\" @click=\"show_edit=!show_edit\" v-if=\"form_data.status=='Stop'\">\r\n                  <span v-if=\"!show_edit\">View</span><span v-else>Hide</span> Edit\r\n                </b-button>\r\n                 <b-button variant=\"success\" type=\"submit\" class=\" px-3 py-1  d-sm-block mx-1\"\r\n                  >Save\r\n                </b-button>\r\n                <router-link to=\"/app/production/processing/coffee\">\r\n                  <b-button variant=\"danger\" class=\" px-3 py-1  d-sm-block mx-1\"\r\n                    >Discard\r\n                  </b-button>\r\n                </router-link>\r\n                <b-dropdown id=\"dropdown-right\" right text=\"Action\" variant=\"default\" class=\"action-button mx-1\">\r\n                  <b-dropdown-header id=\"dropdown-header-label\">\r\n                      <h6 class=\"cursor-pointer my-2\">Delete</h6>\r\n                      <h6 class=\"cursor-pointer my-2\">Duplicate</h6>\r\n\r\n\r\n                      \r\n                     \r\n                  </b-dropdown-header>\r\n                </b-dropdown>\r\n              </div>\r\n             \r\n          </div>\r\n          <div class=\" my-3 border-top\"></div>\r\n      </div>\r\n      \r\n      <b-row class=\"main-scroll\">\r\n        <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-show=\"show_edit || form_data.status=='Draft' || form_data.status=='Starting'\">\r\n          <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n            <div class=\"row mt-5\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div class=\"user-info mb-5 pt-2\">\r\n                  <div class=\"o_thread_search_input\">\r\n                    <span style=\"width:120px;\"> Date : </span>\r\n                    <input placeholder=\"Date\" type=\"date\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"form_data.date\" name=\"date\" required>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"o_thread_search_input\">\r\n                  <span style=\"width:120px;\"> Shift: </span>\r\n                  <select class=\"ui-autocomplete-input w-100 mx-1\" name=\"shift\" v-model=\"form_data.shift\">\r\n                    <option v-for=\"shift in shifts\" :value=\"shift\"> {{shift}}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"o_thread_search_input\">\r\n                  <span style=\"width:120px;\"> Start Time: </span>\r\n                  <input placeholder=\"00:01\" type=\"time\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.start_time\" name=\"start_time\" required style=\"padding-right:20px\">\r\n                  <span style=\"width:120px;padding-left:20px\"> End Time: </span>\r\n                  <input placeholder=\"00:10\" type=\"time\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.end_time\" name=\"end_time\">\r\n                </div>\r\n                <div class=\"o_thread_search_input\">\r\n                  <span style=\"width:120px\"> Workers: </span>\r\n                  <select class=\"ui-autocomplete-input w-100 mx-1\" name=\"workers\" v-model=\"form_data.workers\" multiple>\r\n                    <option v-for=\"worker in workers\" :value=\"worker.id\" v-if=\"worker.job_position==5\"> #{{worker.id}}/{{worker.name}}</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"o_thread_search_input my-5\" v-if=\"form_data.status!='Stop'\">\r\n                  <span style=\"width:120px;\">  Status: </span>\r\n                  <b-button @click=\"dataForm('Starting')\" variant=\"success\" class=\" px-3 py-1  mx-1\" v-if=\"form_data.status=='Draft'\">Start</b-button>\r\n                  <b-button @click=\"dataForm('Stop')\" variant=\"danger\" class=\" px-3 py-1  mx-1\" v-if=\"form_data.status=='Starting'\">Stop</b-button>\r\n                  <input type=\"hidden\" name=\"product\" :value=\"form_data.product\">\r\n                  <input type=\"hidden\" name=\"lot\" :value=\"form_data.lot\">\r\n                  <input type=\"hidden\" name=\"process_type\" value=\"Hulling\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-card>\r\n        </b-col>\r\n\r\n        <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"form_data.status=='Stop'\">\r\n          <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n            <div class=\"row mt-2\">\r\n              <div class=\"col-md-12 text-center\">\r\n                <h5>OUT PUTS</h5>\r\n                <hr class=\"mt-2 w-25\">\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"user-info mb-5\">\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Parameter</th>\r\n                        <th>Quantity</th>\r\n                        <th>Quantity (%)</th>\r\n                        <th>Packing Method</th>\r\n                        <th style=\"width:10%\">Indent</th>\r\n                        <th>Packing Material</th>\r\n                        <th>Bags</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"parameter in parameters\">\r\n                        <td>{{parameter.name}}</td>\r\n                        <td>\r\n                          <input :placeholder=\"parameter.name\" type=\"number\" step=\"0.1\" class=\"ui-autocomplete-input ops\" autocomplete=\"off\" v-model=\"parameter.quantity\" @input=\"calculation(parameter)\" :name=\"parameter.name\" required>\r\n                        </td>\r\n                        <td>\r\n                          <input :placeholder=\"parameter.name\" type=\"text\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"parameter.quantity_persentage\" readonly>\r\n                        </td>\r\n                        <td>\r\n                          <select class=\"ui-autocomplete-input w-100 mx-1\" name=\"packing_method\" v-model=\"parameter.packing_method\">\r\n                            <option v-for=\"packing_method in packing_methods\" :value=\"packing_method\"> {{packing_method}}</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <select class=\"ui-autocomplete-input w-100 mx-1\" name=\"indent\" v-model=\"parameter.indent\" v-if=\"parameter.packing_method=='Stock deserved bags'\" @change=\"selectIndent(parameter)\">\r\n                            <option v-for=\"indent in indents\" :value=\"indent.id\"> {{indent.indent_number}}</option>\r\n                          </select>\r\n                          <hr v-else class=\"mb-0 mt-3\" />\r\n                        </td>\r\n                        <td>\r\n                          <select class=\"ui-autocomplete-input w-100 mx-1\" name=\"packing_material\" v-model=\"parameter.packing_material\" >\r\n                            <option value=\"1\">Plastick Bag (60Kg)</option>\r\n                            <option v-for=\"packing_material in packing_materials\" :value=\"packing_material.id\"> {{packing_material.name}}</option>\r\n                          </select>\r\n                        </td>\r\n                        <td>\r\n                          <input placeholder=\"Bags\" type=\"number\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"parameter.bags\" required>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          Stones\r\n                        </td>\r\n                        <td>\r\n                          <input placeholder=\"Stones\" type=\"number\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.stones\" name=\"stones\" required>\r\n                        </td>\r\n                        <td>\r\n                          <input placeholder=\"Stones\" type=\"text\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"CalculatePersentage(form_data.stones)\" readonly>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style=\"font-weight:600\">\r\n                          Total Output\r\n                        </td>\r\n                        <td>\r\n                          <input placeholder=\"Total Output\" type=\"number\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.total_output\" name=\"total_output\" readonly>\r\n                        </td>\r\n                        <td>\r\n                          <input placeholder=\"Total Output\" type=\"text\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"CalculatePersentage(form_data.total_output)\" readonly>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </b-card>\r\n        </b-col>\r\n\r\n      </b-row>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport ProductFields from '/src/views/app/oodo/components/product_fields'\r\nexport default {\r\n  metaInfo: {\r\n    title: \"FPO - ICS\"\r\n  },\r\n  components:{\r\n    ProductFields\r\n  },\r\n  data() {\r\n    return {\r\n      form_data:{date:null,product:null,lot:null,status:'Draft',workers:[],packing_method:'Stock deserved bags'},\r\n      id:null,\r\n      lot_id:null,\r\n      product_id:null,\r\n      action:'create',\r\n      user_id:6,\r\n      workers:[],\r\n      total_weight:0,\r\n      show_edit:false,\r\n      parameters:[],\r\n      indents:[],\r\n      packing_methods:['Direct machine out','Stock deserved bags'],\r\n      packing_materials:[],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$root.current_section = 'production'\r\n    this.lot_id = this.$route.params.id\r\n    this.getForm()\r\n    this.getEmployees()\r\n    if(this.$route.query.process){\r\n      this.id = this.$route.query.process\r\n      this.action = 'edit'\r\n      this.getProcess()\r\n    }\r\n    this.getParameters()\r\n    this.getIndents()\r\n  },\r\n  methods: {\r\n    getForm() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/qc/create_lots/'+this.lot_id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.form_data.date = this.currentDate()\r\n        this.form_data.product = jsonData.product\r\n        this.form_data.lot = this.lot_id\r\n        this.total_weight = jsonData.total_weight\r\n      })\r\n    },\r\n    getParameters() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/parameters/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.parameters = jsonData\r\n        var self=this\r\n        this.parameters.forEach(function(val,key){\r\n          self.parameters[key].bags = 0\r\n          self.parameters[key].quantity = 0\r\n          self.parameters[key].quantity_persentage = '0%'\r\n          self.parameters[key].packing_material = 1\r\n        })\r\n      })\r\n    },\r\n    getIndents() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/indent/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.indents = jsonData\r\n      })\r\n    },\r\n    selectIndent(parameter){\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/indent/'+parameter.indent+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.packing_materials = jsonData\r\n      })\r\n    },\r\n    calculation(parameter){\r\n      var self=this;\r\n      var total = 0;\r\n      this.parameters.forEach(function(val,key){\r\n        if(val.quantity){\r\n          if(self.total_weight!=0){\r\n            var persentage = (val.quantity/self.total_weight)*100\r\n            self.parameters[key].quantity_persentage = persentage+'%'\r\n          }\r\n          total = total+parseFloat(val.quantity)\r\n        }\r\n      })\r\n      parameter.bags = Math.round(parameter.quantity/60)\r\n      this.form_data.total_output = total\r\n    },\r\n    CalculatePersentage(value){\r\n      if(value){\r\n        if(this.total_weight!=0){\r\n          var persentage = (value/this.total_weight)*100\r\n          return persentage+'%'\r\n        }\r\n      }\r\n      return '0%'\r\n    },\r\n    getProcess() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/processing/'+this.id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n          this.form_data = jsonData\r\n      })\r\n    },\r\n    productId(id){\r\n      this.product_id = id\r\n      this.form_data.product = id\r\n    },\r\n    getEmployees() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/employee/employees/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.workers = jsonData\r\n      })\r\n    },\r\n    dataForm(status='') {\r\n      if(status!=''){\r\n        this.form_data.status= status\r\n      }\r\n      if(this.action == 'create'){\r\n        this.createFormdata()\r\n      }else{\r\n        this.updateFormdata()\r\n      }\r\n      this.updateBatchStatus('Processing Started')\r\n    },\r\n    createFormdata() {\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('supervisor',this.user_id)\r\n      formdata.append('status',this.form_data.status)\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/processing/', {\r\n          method : 'POST',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        if(jsonData.id>0){\r\n          this.showAlert('Saved Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!')\r\n        }\r\n      })\r\n    },\r\n    updateFormdata() {\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('supervisor',this.user_id)\r\n      formdata.append('status',this.form_data.status)\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/processing/'+this.id+'/', {\r\n          method : 'PUT',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        if(jsonData.id>0){\r\n          this.showAlert('Updated Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!')\r\n        }\r\n      })\r\n    },\r\n    updateBatchStatus(status) {\r\n      var formdata = new FormData()\r\n      formdata.append('status',status)\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/update_lot_creation/'+this.lot_id+'/', {\r\n          method : 'post',\r\n          headers: headers,\r\n          body : formdata,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n\r\n      })\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style >\r\n\r\n@import '../styles/style.css';\r\n\r\n\r\n</style>\r\n"]}]}