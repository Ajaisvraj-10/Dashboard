{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\security-gate\\workers-book.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\security-gate\\workers-book.vue","mtime":1671430022541},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRmllbGRzIGZyb20gJ0AvZGF0YS9GaWVsZHMnDQppbXBvcnQgY29udGFjdHMgZnJvbSAnQC9kYXRhL2xpc3RfZ3JpZCcNCmltcG9ydCBUYWJsZUhlYWRlciBmcm9tICcvc3JjL3ZpZXdzL2FwcC9vb2RvL2NvbXBvbmVudHMvdGFibGVfaGVhZGVyJw0KZXhwb3J0IGRlZmF1bHQgew0KICBtZXRhSW5mbzogew0KICAgIC8vIGlmIG5vIHN1YmNvbXBvbmVudHMgc3BlY2lmeSBhIG1ldGFJbmZvLnRpdGxlLCB0aGlzIHRpdGxlIHdpbGwgYmUgdXNlZA0KICAgIHRpdGxlOiAiU3RhdGVzIg0KICB9LA0KICBjb21wb25lbnRzOnsNCiAgICBUYWJsZUhlYWRlcg0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBjb2x1bW5zOiBbDQogICAgICAgIHsNCiAgICAgICAgICBsYWJlbDogIk5hbWUiLA0KICAgICAgICAgIGZpZWxkOiAibmFtZSINCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIGxhYmVsOiAiQ29udGFjdCIsDQogICAgICAgICAgZmllbGQ6ICJjb250YWN0Ig0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgbGFiZWw6ICJEZXBhcnRtZW50IiwNCiAgICAgICAgICBmaWVsZDogImRlcGFydG1lbnQiDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBsYWJlbDogIkdlbmRlciIsDQogICAgICAgICAgZmllbGQ6ICJnZW5kZXIiDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBsYWJlbDogIkFjdGlvbiIsDQogICAgICAgICAgZmllbGQ6ICJpZCINCiAgICAgICAgfSwNCiAgICAgICANCiAgICAgIF0sDQogICAgICByb3dzOiBbXSwNCiAgICAgIGZvcm1fZGF0YTp7ZGF0ZTonJyx2ZWhpY2xlX2ZvcjonT3RoZXInLCBhX2lkOm51bGwsIG5hbWU6JycsIGNvbnRhY3Q6JycsIHNlYXJjaDonJywgc2VlX2ZvcjonJ30sDQogICAgICB3b3JrZXJzOltdLA0KICAgICAgY3VycmVudF90aW1lOnRoaXMuZGF0ZUZvcm1hdGUobmV3IERhdGUoKSwgdHJ1ZSksDQogICAgfTsNCiAgfSwNCiAgbW91bnRlZCgpew0KICAgIHRoaXMuJHJvb3QuY3VycmVudF9zZWN0aW9uID0gJ3NlY3VyaXR5LWdhdGUnDQogICAgdGhpcy5jaGVja1dvcmtlcnMoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgY2hlY2tXb3JrZXJzKCkgew0KICAgICAgdmFyIGhlYWRlcnMgPSBuZXcgSGVhZGVycygpOw0KICAgICAgaGVhZGVycy5hcHBlbmQoIkF1dGhvcml6YXRpb24iLCAiVG9rZW4gIit0aGlzLiRyb290LnRva2VuKTsNCiAgICAgIGZldGNoKHRoaXMuYXBpX3VybCsnL3NlY3VyaXR5L3NlYXJjaF9zZWN1cml0eV9ib29rLz9jaGVjaz13b3JrZXJzJywgew0KICAgICAgICAgIG1ldGhvZCA6ICdQVVQnLA0KICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsDQogICAgICB9KQ0KICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKQ0KICAgICAgfSkNCiAgICAgIC50aGVuKChqc29uRGF0YSkgPT4gew0KICAgICAgICBpZihqc29uRGF0YS5zdWNjZXNzKXsNCiAgICAgICAgICB0aGlzLmdldFJvd3MoKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgZ2V0Um93cygpIHsNCiAgICAgIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTsNCiAgICAgIGhlYWRlcnMuYXBwZW5kKCJBdXRob3JpemF0aW9uIiwgIlRva2VuICIrdGhpcy4kcm9vdC50b2tlbik7DQogICAgICBmZXRjaCh0aGlzLmFwaV91cmwrJy9zZWN1cml0eS9zZWN1cml0eV9ib29rLz92ZWhpY2xlX2Zvcj13b3JrZXJzJywgew0KICAgICAgICAgIG1ldGhvZCA6ICdnZXQnLA0KICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsDQogICAgICB9KQ0KICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKQ0KICAgICAgfSkNCiAgICAgIC50aGVuKChqc29uRGF0YSkgPT4gew0KICAgICAgICB0aGlzLnJvd3MgPSBqc29uRGF0YQ0KICAgICAgfSkNCiAgICB9LA0KICAgIHNlYWNoQm9vaygpIHsNCiAgICAgIHRoaXMuc2VjdXJpdHlfYm9va3MgPSBbXQ0KICAgICAgaWYoIXRoaXMuZm9ybV9kYXRhLnNlYXJjaCl7DQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgICAgdmFyIGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKCkNCiAgICAgIGZvcm1kYXRhLmFwcGVuZCgnbmFtZScsdGhpcy5mb3JtX2RhdGEuc2VhcmNoKQ0KICAgICAgZm9ybWRhdGEuYXBwZW5kKCd2ZWhpY2xlX2ZvcicsJ1dvcmtlcnMgVmVoaWNsZScpDQogICAgICB2YXIgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7DQogICAgICBoZWFkZXJzLmFwcGVuZCgiQXV0aG9yaXphdGlvbiIsICJUb2tlbiAiK3RoaXMuJHJvb3QudG9rZW4pOw0KICAgICAgZmV0Y2godGhpcy5hcGlfdXJsKycvc2VjdXJpdHkvc2VhcmNoX3NlY3VyaXR5X2Jvb2svJywgew0KICAgICAgICAgIG1ldGhvZCA6ICdwb3N0JywNCiAgICAgICAgICBib2R5IDogZm9ybWRhdGEsDQogICAgICAgICAgaGVhZGVyczogaGVhZGVycywNCiAgICAgIH0pDQogICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpDQogICAgICB9KQ0KICAgICAgLnRoZW4oKGpzb25EYXRhKSA9PiB7DQogICAgICAgIHRoaXMud29ya2VycyA9IGpzb25EYXRhDQogICAgICB9KQ0KICAgIH0sDQogICAgc2VsZWN0V29ya2VyKHdvcmtlcil7DQogICAgICB0aGlzLmZvcm1fZGF0YS5hX2lkPXdvcmtlci5pZDsNCiAgICAgIHRoaXMuZm9ybV9kYXRhLm5hbWU9d29ya2VyLm5hbWU7DQogICAgICB0aGlzLmZvcm1fZGF0YS5jb250YWN0PXdvcmtlci5jb250YWN0Ow0KICAgICAgdGhpcy5jdXJyZW50X3RpbWU9dGhpcy5kYXRlRm9ybWF0ZShuZXcgRGF0ZSgpLCB0cnVlKQ0KICAgIH0sDQogICAgZGF0YUZvcm0oKSB7DQogICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7DQogICAgICB2YXIgY3VycmVudF90aW1lID0gdGhpcy5jdXJyZW50RGF0ZSgpKycgJytkLmdldEhvdXJzKCkrJzonK2QuZ2V0TWludXRlcygpOw0KICAgICAgdmFyIGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10pDQogICAgICBmb3JtZGF0YS5hcHBlbmQoJ2dhdGVfaW4nLCAxKQ0KICAgICAgZm9ybWRhdGEuYXBwZW5kKCdnYXRlX2luX3RpbWUnLCBjdXJyZW50X3RpbWUpDQogICAgICBmb3JtZGF0YS5hcHBlbmQoJ3ZlaGljbGVfZm9yJywgdGhpcy5mb3JtX2RhdGEudmVoaWNsZV9mb3IpDQogICAgICB2YXIgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7DQogICAgICBoZWFkZXJzLmFwcGVuZCgiQXV0aG9yaXphdGlvbiIsICJUb2tlbiAiK3RoaXMuJHJvb3QudG9rZW4pOw0KICAgICAgZmV0Y2godGhpcy5hcGlfdXJsKycvc2VjdXJpdHkvc2VjdXJpdHlfYm9vay8nLCB7DQogICAgICAgICAgbWV0aG9kIDogJ1BPU1QnLA0KICAgICAgICAgIGJvZHkgOiBmb3JtZGF0YSwNCiAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLA0KICAgICAgfSkNCiAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gew0KICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkNCiAgICAgIH0pDQogICAgICAudGhlbigoanNvbkRhdGEpID0+IHsNCiAgICAgICAgaWYoanNvbkRhdGEuaWQ+MCl7DQogICAgICAgICAgdGhpcy5hZGRBdHRlZGVuY2UoanNvbkRhdGEud29ya2VyKQ0KICAgICAgICAgIHRoaXMuJGJ2TW9kYWwuaGlkZSgnd29ya2VyLW1vZGFsJykNCiAgICAgICAgfWVsc2V7DQogICAgICAgICAgdGhpcy5zaG93QWxlcnQoJ1NvbWV0aGluZyBXcm9uZyEnKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgYWRkQXR0ZWRlbmNlKHdvcmtlcikgew0KICAgICAgdmFyIGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKCkNCiAgICAgIGZvcm1kYXRhLmFwcGVuZCgnd29ya2VyJywgd29ya2VyKQ0KICAgICAgdmFyIGhlYWRlcnMgPSBuZXcgSGVhZGVycygpOw0KICAgICAgaGVhZGVycy5hcHBlbmQoIkF1dGhvcml6YXRpb24iLCAiVG9rZW4gIit0aGlzLiRyb290LnRva2VuKTsNCiAgICAgIGZldGNoKHRoaXMuYXBpX3VybCsnL2VtcGxveWVlL3dvcmtlcnNfYXR0ZW5kYW5jZS8nLCB7DQogICAgICAgICAgbWV0aG9kIDogJ1BPU1QnLA0KICAgICAgICAgIGJvZHkgOiBmb3JtZGF0YSwNCiAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLA0KICAgICAgfSkNCiAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gew0KICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkNCiAgICAgIH0pDQogICAgICAudGhlbigoanNvbkRhdGEpID0+IHsNCiAgICAgICAgaWYoanNvbkRhdGEuaWQ+MCl7DQogICAgICAgICAgdGhpcy5nZXRSb3dzKCkNCiAgICAgICAgICB0aGlzLnNob3dBbGVydCgnU2F2ZWQgU3VjY2Vzc2Z1bGx5IScpDQogICAgICAgIH1lbHNlew0KICAgICAgICAgIHRoaXMuc2hvd0FsZXJ0KCdTb21ldGhpbmcgV3JvbmchJykNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KICAgIGNoYW5nZVN0YXR1cyhyb3cpew0KICAgICAgdmFyIGhlYWRlcnMgPSBuZXcgSGVhZGVycygpOw0KICAgICAgdmFyIGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKCk7DQogICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7DQogICAgICB2YXIgY3VycmVudF90aW1lID0gdGhpcy5jdXJyZW50RGF0ZSgpKycgJytkLmdldEhvdXJzKCkrJzonK2QuZ2V0TWludXRlcygpOw0KICAgICAgZm9ybWRhdGEuYXBwZW5kKCduYW1lJywgcm93Lm5hbWUpDQogICAgICBmb3JtZGF0YS5hcHBlbmQoJ3ZlaGljbGVfZm9yJywgcm93LnZlaGljbGVfZm9yKQ0KICAgICAgaWYoIXJvdy5nYXRlX2luICYmICFyb3cuZ2F0ZV9vdXQpew0KICAgICAgICBmb3JtZGF0YS5hcHBlbmQoJ2dhdGVfaW4nLCAxKQ0KICAgICAgICBmb3JtZGF0YS5hcHBlbmQoJ2dhdGVfaW5fdGltZScsIGN1cnJlbnRfdGltZSkNCiAgICAgIH1lbHNlIGlmKHJvdy5nYXRlX2luICYmICFyb3cuZ2F0ZV9vdXQpew0KICAgICAgICBmb3JtZGF0YS5hcHBlbmQoJ2dhdGVfb3V0JywgMSkNCiAgICAgICAgZm9ybWRhdGEuYXBwZW5kKCdnYXRlX291dF90aW1lJywgY3VycmVudF90aW1lKQ0KICAgICAgICBmb3JtZGF0YS5hcHBlbmQoJ2dhdGVfaW4nLCByb3cuZ2F0ZV9pbikNCiAgICAgICAgZm9ybWRhdGEuYXBwZW5kKCdnYXRlX2luX3RpbWUnLCByb3cuZ2F0ZV9pbl90aW1lKQ0KICAgICAgfWVsc2V7DQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgICAgaGVhZGVycy5hcHBlbmQoIkF1dGhvcml6YXRpb24iLCAiVG9rZW4gIit0aGlzLiRyb290LnRva2VuKTsNCiAgICAgIGZldGNoKHRoaXMuYXBpX3VybCsnL3NlY3VyaXR5L3NlY3VyaXR5X2Jvb2svJytyb3cuaWQrJy8nLCB7DQogICAgICAgICAgbWV0aG9kIDogJ3B1dCcsDQogICAgICAgICAgaGVhZGVyczogaGVhZGVycywNCiAgICAgICAgICBib2R5OiBmb3JtZGF0YSwNCiAgICAgIH0pDQogICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpDQogICAgICB9KQ0KICAgICAgLnRoZW4oKGpzb25EYXRhKSA9PiB7DQogICAgICAgIHRoaXMuZ2V0Um93cygpDQogICAgICB9KQ0KICAgIH0sDQogIH0sDQp9Ow0K"},null]}