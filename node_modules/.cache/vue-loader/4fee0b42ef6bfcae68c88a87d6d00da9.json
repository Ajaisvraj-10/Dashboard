{"remainingRequest":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/ott-frontent/src/views/app/m1/search.vue?vue&type=style&index=0&id=7b036fca&scoped=true&lang=css&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/src/views/app/m1/search.vue","mtime":1690352090000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy9tMS9zdHlsZS9zdHlsZS5jc3MnOwpAaW1wb3J0ICcvbTEvc3R5bGUvc3R5bGUtMi5jc3MnOwpAaW1wb3J0ICcvbTEvc3R5bGUvbG9hZC1zdHlsZS5jc3MnOwoKCg=="},{"version":3,"sources":["search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA","file":"search.vue","sourceRoot":"src/views/app/m1","sourcesContent":["\r\n<template>\r\n  <div class=\"main-content main-content-2\">\r\n    \r\n        <div class=\"site-wrapper2\" :class=\"menu_click?'nav-active':''\">\r\n\r\n            <MainHeader :edit=\"edit\" :blocks=\"blocks\" :current_block=\"current_block\"></MainHeader>\r\n\r\n            <div class=\"position-relative second-section p-5\" style=\"margin-top:50px;\" v-if=\"is_start\">\r\n                <input placeholder=\"Search for movies, shows and more...\" style=\"border: 1px solid #8E9099;width: 100%; height: 60px;background: initial;padding: 15px 40px;color: #C7C6CA;border-radius:4px;\">\r\n\r\n                <div class=\"favourites\">\r\n                    <div class=\"fav-btn active\"><img src=\"/m1/images/check.png\"> Movies</div>\r\n                    <div class=\"fav-btn\"><img src=\"/m1/images/check.png\"> Tv Shows</div>\r\n                    <div class=\"fav-btn\"><img src=\"/m1/images/check.png\"> Added last week</div>\r\n                    <div class=\"fav-btn\"><img src=\"/m1/images/check.png\"> Availble in 4k</div>\r\n                </div>\r\n\r\n                <div style=\"position:relative;z-index:99;\">\r\n                    <h6 class=\"pl-2 text-16 mb-2 mt-4 pt-4 font-weight-400\" v-if=\"type=='search'\">Search results ({{$route.query.tag}})</h6>\r\n                    <h6 class=\"pl-2 text-16 mb-2 mt-4 pt-4 font-weight-400\" v-else>Documentaries</h6>\r\n                    <div class=\"row mx-0\">\r\n                        <div class=\"col-md-2 col-3\" style=\"padding:0 5px;\" v-for=\"movie in movies\">\r\n                            <div class=\"image-row\" >\r\n                                \r\n                                    <router-link :to=\"edit?'':{name:'video',params: { type: slugify(movie.type), category: slugify(movie.category_detail.name), slug: movie.slug }, query: {language:movie.language_detail.name}}\" class=\"hover-modal image w-100\" >\r\n                                        <div class=\"position-relative\" >\r\n                                            <div class=\"focus-img\">\r\n                                                <img :src=\"movie.thumbnail\">\r\n                                            </div>\r\n                                            <div class=\"hover-modal-div\">\r\n                                                <div class=\"small-details\">\r\n                                                    <h5 class=\"text-14 font-weight-600 mt-1 text-white\">{{movie.name}}</h5>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </router-link>\r\n                                \r\n                                            \r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n               \r\n\r\n            </div>\r\n\r\n\r\n            <!--<MainFooter :edit=\"edit\" :blocks=\"blocks\" :current_block=\"current_block\"></MainFooter>-->\r\n        </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport MainHeader from '/src/views/app/m1/header'\r\nimport MainFooter from '/src/views/app/m1/footer'\r\nexport default {\r\n  props: ['edit','blocks','current_block'],\r\n  metaInfo: {\r\n    title: \"Movies\"\r\n  },\r\n  components:{\r\n    MainHeader,\r\n    MainFooter,\r\n  },\r\n  data() {\r\n    return {\r\n        edit:false,\r\n        menu_click:false,\r\n        movies:[],\r\n        mode:\"dark\",\r\n        type:'',\r\n        category:'',\r\n        is_start:false,\r\n    };\r\n  },\r\n  mounted(){\r\n    this.changeRoute()\r\n  },\r\n  watch: {\r\n    '$route': 'changeRoute',\r\n  },\r\n  methods: {\r\n    changeRoute(){\r\n        this.movies = []\r\n        this.type = this.$route.params.type\r\n        if(this.$route.params.category){\r\n            this.category = this.$route.params.category\r\n        }\r\n        var filter = ''\r\n        if(this.type=='category'){\r\n            filter = '?category='+this.slugToWord(this.category)\r\n        }else if(this.type=='genre'){\r\n            filter = '?type='+this.slugToWord(this.category)\r\n        }else if(this.type=='block'){\r\n            filter = '?block='+this.$route.query.block\r\n        }else if(this.type=='search'){\r\n            filter = '?search='+this.$route.query.tag\r\n        }\r\n        this.getMovies(filter)\r\n    },\r\n    getMovies(filter='') {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Bearer \"+(this.$root.token?this.$root.token:this.$root.admin_token));\r\n      fetch(this.api_url+'/customer/movies/'+filter, {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.is_start = true\r\n        this.movies = jsonData\r\n      })\r\n    },\r\n  }\r\n\r\n};\r\n</script>\r\n<style scoped>\r\n  @import '/m1/style/style.css';\r\n  @import '/m1/style/style-2.css';\r\n  @import '/m1/style/load-style.css';\r\n\r\n\r\n</style>\r\n"]}]}