{"remainingRequest":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/ott-frontent/src/views/app/hotstar/plan.vue?vue&type=template&id=3ccdfe3e&scoped=true&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/src/views/app/hotstar/plan.vue","mtime":1671201604000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}