{"remainingRequest":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/ott-frontent/src/views/app/youtube/sign-in.vue?vue&type=template&id=15a8a8b1&scoped=true&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/src/views/app/youtube/sign-in.vue","mtime":1671274416000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWFpbi1jb250ZW50IGNhcGNlZS1sb2dpbiIgfSwgWwogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzaXRlLXdyYXBwZXIiIH0sIFsKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJwLTMgdy0xMDAiLAogICAgICAgICAgc3RhdGljU3R5bGU6IHsgZGlzcGxheTogImZsZXgiLCAianVzdGlmeS1jb250ZW50IjogImZsZXgtZW5kIiB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZmxvYXQtbGVmdCIsCiAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgIHdpZHRoOiAiMzVweCIsCiAgICAgICAgICAgICAgICBoZWlnaHQ6ICIzNXB4IiwKICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiMzZjNmM2YiLAogICAgICAgICAgICAgICAgImJvcmRlci1yYWRpdXMiOiAiNTAlIiwKICAgICAgICAgICAgICAgIGRpc3BsYXk6ICJmbGV4IiwKICAgICAgICAgICAgICAgICJhbGlnbi1pdGVtcyI6ICJjZW50ZXIiLAogICAgICAgICAgICAgICAgImp1c3RpZnktY29udGVudCI6ICJjZW50ZXIiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBhdHRyczogeyB0bzogIi8iIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjE1cHgiIH0sCiAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6ICIveW91dHViZS9pbWFnZXMvY2xvc2UyLnBuZyIgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0KICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX3ZtLmNybnRfdGFiID09ICJsb2dpbiIKICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibG9naW4tYW0iIH0sIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInNpZ25pbi0yIiwgYXR0cnM6IHsgaWQ6ICJzaWduSW5Cb3JkZXIiIH0gfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImg1IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgInRleHQtMjAgdGV4dC1jZW50ZXIgZm9udC13ZWlnaHQtNDAwIHRleHQtd2hpdGUiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIldlbGNvbWUgYmFjayEiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImg1IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgInRleHQtMjAgdGV4dC1jZW50ZXIgZm9udC13ZWlnaHQtNDAwIHRleHQtd2hpdGUiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkxvZ2luIGJlbG93LiIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImg0IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIiB0ZXh0LTI0IGZvbnQtd2VpZ2h0LTUwMCBteS0zIHRleHQtd2hpdGUiLAogICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgImxpbmUtaGVpZ2h0IjogIjMwcHgiIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBDYXBjZWUgIildCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF92bS5fbSgwKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyZWdpc3Rlci10YWIgbXktMyIgfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm5vdC1hY3RpdmUtcmVnaXN0ZXIiLAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5jcm50X3RhYiA9ICJyZWdpc3RlciIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJTaWduIFVwIildCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJhY3RpdmUtcmVnaXN0ZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiTG9naW4iKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm15LTUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiZm9ybSIsIHsgcmVmOiAibG9naW5Vc2VyIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oMSksCiAgICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5fbSgyKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9tKDMpLAogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9tKDQpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIDogX3ZtLl9lKCksCiAgICAgIF92bS5jcm50X3RhYiA9PSAicmVnaXN0ZXIiCiAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNpZ25pbi1hbSIgfSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAic2lnbmluLTIiLCBhdHRyczogeyBpZDogInNpZ25JbkJvcmRlciIgfSB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiaDUiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAidGV4dC0yMCB0ZXh0LWNlbnRlciBmb250LXdlaWdodC00MDAgdGV4dC13aGl0ZSIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiV2VsY29tZSEiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImg1IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgInRleHQtMjAgdGV4dC1jZW50ZXIgZm9udC13ZWlnaHQtNDAwIHRleHQtd2hpdGUiCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkNyZWF0ZSBhIG5ldyBhY2NvdW50IildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyZWdpc3Rlci10YWIgcHQtNSIgfSwgWwogICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJhY3RpdmUtcmVnaXN0ZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIlNpZ24gVXAiKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibm90LWFjdGl2ZS1yZWdpc3RlciIsCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmNybnRfdGFiID0gImxvZ2luIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJMb2dpbiIpXQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibXktNSIgfSwgWwogICAgICAgICAgICAgICAgICBfYygiZm9ybSIsIHsgcmVmOiAicmVnaXN0ZXJVc2VyIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9tKDUpLAogICAgICAgICAgICAgICAgICAgIF92bS5fbSg2KSwKICAgICAgICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICAgICAgICBfdm0uX20oNyksCiAgICAgICAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9tKDgpLAogICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgIF92bS5fbSg5KSwKICAgICAgICAgICAgICAgICAgICBfdm0uX20oMTApCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICA6IF92bS5fZSgpCiAgICBdKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiZGl2IiwKICAgICAgewogICAgICAgIHN0YXRpY0NsYXNzOiAicHktMyIsCiAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgIGRpc3BsYXk6ICJmbGV4IiwKICAgICAgICAgIGdhcDogIjIwcHgiLAogICAgICAgICAgImZsZXgtd3JhcCI6ICJ3cmFwIiwKICAgICAgICAgICJqdXN0aWZ5LWNvbnRlbnQiOiAiY2VudGVyIgogICAgICAgIH0KICAgICAgfSwKICAgICAgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZmFjZWJvb2stbG9naW4iIH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogIi95b3V0dWJlL2ltYWdlcy9mYi5wbmciIH0gfSksCiAgICAgICAgICBfdm0uX3YoIiBDb250aW51ZSB3aXRoIEZhY2Vib29rICIpCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJnb29nbGUtbG9naW4iIH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogIi95b3V0dWJlL2ltYWdlcy9nb29nbGUucG5nIiB9IH0pLAogICAgICAgICAgX3ZtLl92KCIgTG9naW4gd2l0aCBHb29nbGUgIikKICAgICAgICBdKQogICAgICBdCiAgICApCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJsYWJlbCIsIFsKICAgICAgX2MoImlucHV0IiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICB0eXBlOiAiZW1haWwiLAogICAgICAgICAgcGxhY2Vob2xkZXI6ICJFbWFpbG8gSUQgb3IgTW9iaWxlIE51bWJlciIsCiAgICAgICAgICBuYW1lOiAiZW1haWwiLAogICAgICAgICAgdmFsdWU6ICIiLAogICAgICAgICAgcmVxdWlyZWQ6ICIiCiAgICAgICAgfQogICAgICB9KQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImxhYmVsIiwgWwogICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHR5cGU6ICJwYXNzd29yZCIsCiAgICAgICAgICBwbGFjZWhvbGRlcjogIlBhc3N3b3JkIiwKICAgICAgICAgIG5hbWU6ICJwYXNzd29yZCIsCiAgICAgICAgICByZXF1aXJlZDogIiIKICAgICAgICB9CiAgICAgIH0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgWwogICAgICBfYygiYnV0dG9uIiwgeyBhdHRyczogeyB0eXBlOiAic3VibWl0IiwgaWQ6ICJjYXBjZWUiIH0gfSwgWwogICAgICAgIF92bS5fdigiTG9naW4iKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBteS0zIiB9LCBbCiAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNTdHlsZTogeyBjb2xvcjogIiNhNzg1ZmYiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCJGb3Jnb3QgcGFzc3dvcmQ/IikKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImxhYmVsIiwgWwogICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwKICAgICAgICAgIHBsYWNlaG9sZGVyOiAiWW91ciBOYW1lIiwKICAgICAgICAgIG5hbWU6ICJ1c2VybmFtZSIsCiAgICAgICAgICB2YWx1ZTogIiIsCiAgICAgICAgICByZXF1aXJlZDogIiIKICAgICAgICB9CiAgICAgIH0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygibGFiZWwiLCBbCiAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgdHlwZTogImVtYWlsIiwKICAgICAgICAgIHBsYWNlaG9sZGVyOiAiRW1haWwgSUQiLAogICAgICAgICAgbmFtZTogImVtYWlsIiwKICAgICAgICAgIHZhbHVlOiAiIiwKICAgICAgICAgIHJlcXVpcmVkOiAiIgogICAgICAgIH0KICAgICAgfSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJsYWJlbCIsIFsKICAgICAgX2MoImlucHV0IiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICB0eXBlOiAicGFzc3dvcmQiLAogICAgICAgICAgcGxhY2Vob2xkZXI6ICJQYXNzd29yZCIsCiAgICAgICAgICBuYW1lOiAicGFzc3dvcmQxIiwKICAgICAgICAgIHJlcXVpcmVkOiAiIgogICAgICAgIH0KICAgICAgfSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJsYWJlbCIsIFsKICAgICAgX2MoImlucHV0IiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICB0eXBlOiAicGFzc3dvcmQiLAogICAgICAgICAgcGxhY2Vob2xkZXI6ICJDb25maXJtIFBhc3N3b3JkIiwKICAgICAgICAgIG5hbWU6ICJwYXNzd29yZCIsCiAgICAgICAgICByZXF1aXJlZDogIiIKICAgICAgICB9CiAgICAgIH0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgWwogICAgICBfYygiYnV0dG9uIiwgeyBhdHRyczogeyBpZDogImNhcGNlZSIsIHR5cGU6ICJzdWJtaXQiIH0gfSwgWwogICAgICAgIF92bS5fdigiUmVnaXN0ZXIiKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciAgbXktMyIgfSwgWwogICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZXh0LTEzIHRleHQtd2hpdGUiIH0sIFsKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogImF1dG8iLCBtYXJnaW46ICIwIiwgaGVpZ2h0OiAiYXV0byIgfSwKICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJjaGVja2JveCIgfQogICAgICAgIH0pLAogICAgICAgIF92bS5fdigiIEJ5IHByb2NlZWRpbmcgeW91IGFncmVlIHRvIG91ciAiKSwKICAgICAgICBfYygiYSIsIHsgc3RhdGljU3R5bGU6IHsgY29sb3I6ICIjMDA4MmU5IiB9IH0sIFsKICAgICAgICAgIF92bS5fdigiVGVybXMgb2Ygc2VydmljZSAmIHByaXZhY3kgcG9saWN5ICIpCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}