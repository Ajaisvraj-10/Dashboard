{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\process\\processing-component.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\process\\processing-component.vue","mtime":1676396180228},{"path":"E:\\vue_projects\\biowin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KQGltcG9ydCAnLi4vLi4vc3R5bGVzL3N0eWxlLmNzcyc7DQoNCi53b3JrX3R5cGVfb3B0aW9uIC5idG4uYnRuLW91dGxpbmUtcHJpbWFyeXsNCiAgcGFkZGluZzo1cHggMTBweDsNCn0NCi5wYWNraW5nLWZvcm0gLm1vZGFsLnNob3cgLm1vZGFsLWRpYWxvZyB7DQogICAgbWluLXdpZHRoOiA5MCUhaW1wb3J0YW50Ow0KfQ0K"},{"version":3,"sources":["processing-component.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA05BA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"processing-component.vue","sourceRoot":"src/views/app/oodo/production/process","sourcesContent":["<template>\r\n  <div class=\"main-content create-main\">\r\n    <form ref=\"dataForm\" @submit.prevent=\"dataForm()\" v-if=\"is_start\">\r\n      <div class=\"d-flex mb-2 align-items-center  justify-content-between\">\r\n        <slot name=\"header\">\r\n          <h5 class=\"mb-0\"><span class=\"text-success\">{{process_detail.name}}</span> / {{slugToWord(action=='attribute'?'cut shape':action)}}</h5>\r\n        </slot>\r\n        <div class=\"d-flex\">\r\n          <div class=\"d-flex\" v-if=\"action=='input'\">\r\n            <b-button variant=\"success\" type=\"button\" class=\" px-3 py-1  d-sm-block mx-1\" @click=\"dataForm()\">Start Process\r\n            </b-button>\r\n          </div>\r\n          <div class=\"d-flex\" v-else>\r\n            <b-button variant=\"success\" type=\"button\" class=\" px-3 py-1  d-sm-block mx-1\" @click=\"dataForm()\" v-if=\"!is_view && action!='stop'\">Save\r\n            </b-button>\r\n          </div>\r\n          <b-button variant=\"danger\" class=\" px-3 py-1  d-sm-block mx-1\" @click=\"closePopup()\"\r\n            >Discard\r\n          </b-button>\r\n        </div>\r\n      </div>\r\n      <div class=\" my-3 border-top\" v-if=\"action!='stop'\"></div>\r\n      <fieldset :disabled=\"is_view\">\r\n        <b-row class=\"main-scroll\">\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='input'\">\r\n            <div>\r\n              <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n                <div class=\"\">\r\n                  <table class=\"table mt-2 w-100\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Input</th>\r\n                        <th>Lot</th>\r\n                        <th>Available Qty(KG)</th>\r\n                        <th>Quantity(KG)</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr v-for=\"(stock_parameter,key) in stock_parameters\">\r\n                        <td :style=\"stock_parameter.is_added?'opacity:1':'opacity:0.5'\">\r\n                          {{stock_parameter.parameter_detail.name}}\r\n                        </td>\r\n                        <td :style=\"stock_parameter.is_added?'opacity:1':'opacity:0.5'\">\r\n                          #{{stock_parameter.lot}}/Lot\r\n                          <input type=\"hidden\" :name=\"'lot'+stock_parameter.id\" :value=\"stock_parameter.lot\">\r\n                        </td>\r\n                        <td :style=\"stock_parameter.is_added?'opacity:1':'opacity:0.5'\">\r\n                          {{stock_parameter.stock_quantity}}\r\n                        </td>\r\n                        <td :style=\"stock_parameter.is_added?'opacity:1':'opacity:0.5'\">\r\n                          <input type=\"number\" class=\"ui-autocomplete-input w-100\" :max=\"stock_parameter.stock_quantity\" v-model=\"stock_parameter.quantity\" :name=\"'quantity'+stock_parameter.id\" :disabled=\"!stock_parameter.is_added\">\r\n                          <input type=\"hidden\" :name=\"'is_added'+stock_parameter.id+'lot'\" :value=\"stock_parameter.is_added?'yes':'no'\" min=\"0\">\r\n                        </td>\r\n                        <td>\r\n                          <button type=\"button\" class=\"btn btn-primary btn-sm px-3 py-1 ml-4\" @click=\"addProduct(stock_parameter)\" v-if=\"!stock_parameter.is_added\">Add</button>\r\n                          <button type=\"button\" class=\"btn btn-danger btn-sm px-3 py-1 ml-4\" @click=\"removeProduct(stock_parameter)\" v-else>Remove</button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </b-card>\r\n            </div>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-show=\"action=='batch'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"o_thread_search_input\" v-for=\"(process_product,key) in form_data.start_process_detail.process_products\">\r\n                      <span style=\"width:90px;\"> {{key==0?'Input :':''}} </span>\r\n                      <input placeholder=\"Product\" type=\"text\" class=\"ui-autocomplete-input\" :value=\"process_product.parameter_detail.name\" readonly style=\"width:120px\">\r\n                      <button class=\"btn btn-white append_btn_left\" type=\"button\">Lot</button>\r\n                      <input placeholder=\"Lot\" type=\"number\" class=\"ui-autocomplete-input append_btn_input_left\" autocomplete=\"off\" v-model=\"process_product.lot\" name=\"lot\" min=\"0\" readonly>\r\n                      <button class=\"btn btn-white append_btn_left\" type=\"button\" v-show=\"!process_detail.is_dryer\">Qty(KG)</button>\r\n                      <input placeholder=\"Quantity\" type=\"number\" min=\"0\" class=\"ui-autocomplete-input append_btn_input_right\" :value=\"process_product.quantity\" :max=\"process_product.quantity\" name=\"quantity\" v-show=\"!process_detail.is_dryer\" readonly>\r\n                    </div>\r\n                    <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:90px;\"> Shift: </span>\r\n                      <select class=\"ui-autocomplete-input w-100 ml-1\" name=\"shift\" v-model=\"form_data.shift\">\r\n                        <option v-for=\"shift in shifts\" :value=\"shift\"> {{shift}}</option>\r\n                      </select>\r\n                    </div>\r\n                    <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:90px;\"> Date : </span>\r\n                      <input placeholder=\"Date\" type=\"date\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.date\" name=\"date\" required>\r\n                    </div>\r\n                    <div class=\"o_thread_search_input\">\r\n                      <input type=\"hidden\" name=\"lot\" v-model=\"form_data.lot\">\r\n                      <select name=\"other_lots\" v-model=\"form_data.other_lots\" multiple v-show=\"false\">\r\n                        <option v-for=\"lot in form_data.other_lots\" :value=\"lot\">{{lot}}</option>\r\n                      </select>\r\n                    </div>\r\n                    <input type=\"hidden\" name=\"status\" value=\"Starting\">\r\n                    <input type=\"hidden\" name=\"is_organic\" v-model=\"form_data.is_organic\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-show=\"action=='machine'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"\" v-if=\"process_detail.is_machine\">\r\n                      <div class=\"o_thread_search_input mt-3\">\r\n                        <b> Machine Details </b>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input\">\r\n                        <span style=\"width:90px;\"> Run Time: </span>\r\n                        <button class=\"btn btn-white append_btn_left\" type=\"button\">Start</button>\r\n                        <input placeholder=\"00:01\" type=\"time\" class=\"ui-autocomplete-input append_btn_input_left\" autocomplete=\"off\" v-model=\"form_data.start_time\" name=\"start_time\" style=\"margin-right:10px\">\r\n                        <button class=\"btn btn-white append_btn_left\" type=\"button\">End</button>\r\n                        <input placeholder=\"00:10\" type=\"time\" class=\"ui-autocomplete-input append_btn_input_left\" autocomplete=\"off\" v-model=\"form_data.end_time\" name=\"end_time\">\r\n                      </div>\r\n                      <div class=\"o_thread_search_input mt-2\">\r\n                        <span style=\"width:90px\"> Machines: </span>\r\n                        <div class=\"ui-autocomplete-input w-100 ml-1\">\r\n                          <span v-for=\"machine in form_data.machines\">\r\n                            <span class=\"badge badge-success p-1 mr-1\"> {{machine.name}}</span>\r\n                          </span>\r\n                        </div>\r\n                        <select name=\"machines\" multiple v-show=\"false\">\r\n                          <option v-for=\"machine in form_data.machines\" :value=\"machine.id\" selected> {{machine.name}}</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-show=\"action=='dryer'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"\" v-if=\"process_detail.is_dryer\">\r\n                      <div class=\"o_thread_search_input mt-3\">\r\n                        <b> Dryer Details </b>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input\">\r\n                        <span style=\"width:90px;\"> Date: </span>\r\n                        <input placeholder=\"\" type=\"text\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"dateFormate(form_data.start_process_detail.dryer_details.dryer_start_date)\" readonly>\r\n                        <input placeholder=\"\" type=\"text\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"dateFormate(form_data.start_process_detail.dryer_details.dryer_end_date)\" style=\"margin-left:14px\" readonly>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input\">\r\n                        <span style=\"width:90px;\"> Run Time: </span>\r\n                        <button class=\"btn btn-white append_btn_left\" type=\"button\">Start</button>\r\n                        <input placeholder=\"00:01\" type=\"time\" class=\"ui-autocomplete-input append_btn_input_left\" autocomplete=\"off\" v-model=\"form_data.start_process_detail.dryer_details.dryer_start_time\" name=\"dryer_start_time\" style=\"margin-right:10px\">\r\n                        <button class=\"btn btn-white append_btn_left\" type=\"button\">End</button>\r\n                        <input placeholder=\"00:10\" type=\"time\" class=\"ui-autocomplete-input append_btn_input_left\" autocomplete=\"off\" v-model=\"form_data.start_process_detail.dryer_details.dryer_end_time\" name=\"dryer_end_time\">\r\n                      </div>\r\n                      <div>\r\n                        <div class=\"o_thread_search_input w-50 mt-3\">\r\n                          <span style=\"width:90px;\"> Dryer stock : </span>\r\n                          <b class=\"mx-2\">{{form_data.start_process_detail.dryer_details.total_quantity}}KG</b>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input mt-2\">\r\n                        <span style=\"width:90px\"> Dryer: </span>\r\n                        <div class=\"ui-autocomplete-input w-100 ml-1\">\r\n                          <span v-for=\"machine in form_data.machines\" v-if=\"machine.note_stock\">\r\n                            <span class=\"badge badge-success p-1 mr-1\"> {{machine.name}}</span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-show=\"action=='firewood'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"\" v-if=\"process_detail.is_dryer\">\r\n                      <div class=\"o_thread_search_input mt-3\">\r\n                        <b> Firewood Details </b>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input\">\r\n                        <span style=\"width:90px;\"> Date: </span>\r\n                        <input placeholder=\"\" type=\"text\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"dateFormate(form_data.start_process_detail.firewood_details.firewood_start_date)\" readonly>\r\n                        <input placeholder=\"\" type=\"text\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"dateFormate(form_data.start_process_detail.firewood_details.firewood_end_date)\" style=\"margin-left:14px\" readonly>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input\">\r\n                        <span style=\"width:100px;\"> Run Time: </span>\r\n                        <button class=\"btn btn-white append_btn_left\" type=\"button\">Start</button>\r\n                        <input placeholder=\"00:01\" type=\"time\" class=\"ui-autocomplete-input append_btn_input_left\" autocomplete=\"off\" v-model=\"form_data.start_process_detail.firewood_details.firewood_start_time\" name=\"firewood_start_time\" style=\"margin-right:10px\">\r\n                        <button class=\"btn btn-white append_btn_left\" type=\"button\">End</button>\r\n                        <input placeholder=\"00:10\" type=\"time\" class=\"ui-autocomplete-input append_btn_input_left\" autocomplete=\"off\" v-model=\"form_data.start_process_detail.firewood_details.firewood_end_time\" name=\"firewood_end_time\">\r\n                      </div>\r\n                      <div>\r\n                        <div class=\"o_thread_search_input w-50 mt-3\">\r\n                          <span style=\"width:100px;\"> Total firewood : </span>\r\n                          <b class=\"mx-2\">{{form_data.start_process_detail.firewood_details.total_quantity}}KG</b>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input mt-2\">\r\n                        <span style=\"width:100px\"> Dryer: </span>\r\n                        <div class=\"ui-autocomplete-input w-100 ml-1\">\r\n                          <span v-for=\"machine in form_data.machines\" v-if=\"machine.note_stock\">\r\n                            <span class=\"badge badge-success p-1 mr-1\"> {{machine.name}}</span>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='boiler'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"o_thread_search_input\" v-if=\"!is_view\">\r\n                      <span style=\"width:90px;\"> Select Boiler : </span>\r\n                      <select name=\"boilers\" v-model=\"form_data.start_process_detail.boilers\" multiple>\r\n                        <option v-for=\"boiler in boilers\" :value=\"boiler.id\">{{boiler.name}}</option>\r\n                      </select>\r\n                    </div>\r\n                    <div class=\"o_thread_search_input\" v-if=\"form_data.start_process_detail.boilers.length>0 && is_view\">\r\n                      <span style=\"width:90px;\"> Boiler : </span>\r\n                      <input placeholder=\"Date\" type=\"date\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.date\" name=\"date\" required>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='cut_shape'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div :class=\"add_new_shape?'col-md-7':'col-md-12'\">\r\n                  <b> Select Cut Shape </b>\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:120px;\"> Cut Shape : </span>\r\n                      <select v-model=\"form_data.start_process_detail.attribute_detail.cut_shape_detail\" @change=\"form_data.start_process_detail.attribute_detail.cut_shape_detail.id?setShapeName():add_new_shape=true\">\r\n                        <option :value=\"{id:null}\" class=\"text-success\">Create New Shape</option>\r\n                        <option v-for=\"cut_shape in cut_shapes\" :value=\"cut_shape\">{{cut_shape.name}}</option>\r\n                      </select>\r\n                      <select class=\"ui-autocomplete-input\" placeholder=\"Unit\" name=\"unit\" v-model=\"form_data.start_process_detail.attribute_detail.unit\" @change=\"form_data.start_process_detail.attribute_detail.cut_shape_detail.id?setShapeName():add_new_shape=true\">\r\n                        <option v-for=\"unit in units\" :value=\"unit\">{{unit}}</option>\r\n                      </select>\r\n                    </div>\r\n                    <div v-if=\"form_data.start_process_detail.attribute_detail.cut_shape_detail.id && form_data.start_process_detail.attribute_detail.cut_shape_detail.dimension && form_data.start_process_detail.attribute_detail.unit\">\r\n                      <div class=\"o_thread_search_input\" style=\"margin-right:10px\" v-for=\"(dimension,key) in parseInt(form_data.start_process_detail.attribute_detail.cut_shape_detail.dimension)\">\r\n                        <span style=\"width:120px;\" v-if=\"key==0\"> Cut Dimension: </span>\r\n                        <span style=\"width:120px;\" v-else> </span>\r\n                        <input placeholder=\"Dimension\" type=\"number\" class=\"ui-autocomplete-input append_btn_input_right\" autocomplete=\"off\" value=\"\" :id=\"'dimension'+key\" @input=\"setShapeName()\">\r\n                        <button class=\"btn btn-white append_btn_right\" type=\"button\">{{form_data.start_process_detail.attribute_detail.unit}}</button>\r\n                        <span style=\"width:40%;\"> </span>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input mt-3\">\r\n                        <span style=\"width:120px;\"> Shape : </span>\r\n                        <input placeholder=\"Size\" type=\"text\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.start_process_detail.attribute_detail.size\" name=\"size\" readonly>\r\n                        <input type=\"hidden\" name=\"cut_shape\" v-model=\"form_data.start_process_detail.attribute_detail.cut_shape_detail.id\"/>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-5 border-left\" v-if=\"add_new_shape\">\r\n                  <b> Create New Shape </b>\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:90px;\"> Name: </span>\r\n                      <input placeholder=\"Name\" type=\"text\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"new_shape.name\">\r\n                    </div>\r\n                    <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:90px;\"> Dimension: </span>\r\n                      <input placeholder=\"Dimension\" type=\"number\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"new_shape.dimension\">\r\n                    </div>\r\n                    <!-- <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:90px;\"> Operation: </span>\r\n                      <select class=\"ui-autocomplete-input\" name=\"operation\" v-model=\"new_shape.operation\">\r\n                        <option v-for=\"operation in ['',' ','x']\" :value=\"operation\">{{operation}}</option>\r\n                      </select>\r\n                    </div> -->\r\n                    <div class=\"text-right px-2 mt-2\">\r\n                      <input type=\"hidden\" name=\"operation\" value=\"x\">\r\n                      <b-button variant=\"success\" class=\"px-2 py-1 w-25\" :disabled=\"!new_shape.name || !new_shape.dimension\" @click=\"createShape()\">Create</b-button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='sieving'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:120px;\"> Select Siev : </span>\r\n                      <select name=\"siev\" v-model=\"form_data.start_process_detail.siev\">\r\n                        <optgroup v-for=\"machine in form_data.machines\" :label=\"machine.name\">\r\n                          <option v-for=\"spare in machine.spares\" :value=\"spare.id\">{{spare.spare_name}}</option>\r\n                        </optgroup>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='vesels'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-2\"></div>\r\n                <div class=\"col-md-8\">\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n                    <div class=\"text-center mb-4\">\r\n                      <img src=\"/img/chemp.png\" style=\"height:200px\">\r\n                    </div>\r\n                    <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:120px;\"> {{slugToWord('number_of_vesels')}} : </span>\r\n                      <input placeholder=\"Vesels\" type=\"number\" class=\"ui-autocomplete-input append_btn_input_right\" autocomplete=\"off\" v-model=\"form_data.start_process_detail.number_of_vesels\" name=\"number_of_vesels\">\r\n                      <button class=\"btn btn-white append_btn_right\" type=\"button\">Number</button>\r\n                    </div>\r\n                    <div class=\"o_thread_search_input\">\r\n                      <span style=\"width:120px;\"> {{slugToWord('total_uses')}} : </span>\r\n                      <input placeholder=\"Uses\" type=\"number\" class=\"ui-autocomplete-input append_btn_input_right\" autocomplete=\"off\" v-model=\"form_data.start_process_detail.uses_of_vesels\" name=\"uses_of_vesels\">\r\n                      <button class=\"btn btn-white append_btn_right\" type=\"button\">Number</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='employee_participate'\">\r\n            <WorkersForm :worker_data=\"form_data.labour_detail\" :work_type=\"'wages'\"></WorkersForm>\r\n            <div class=\"o_thread_search_input mt-2\">\r\n              <input type=\"hidden\" name=\"labour_type\" value=\"Labours\">\r\n            </div>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='unloading'\">\r\n            <WorkersForm :worker_data=\"form_data.unloading\" :work_type=\"'contract'\"></WorkersForm>\r\n            <div class=\"o_thread_search_input mt-2\">\r\n              <input type=\"hidden\" name=\"labour_type\" value=\"Unloading Labours\">\r\n            </div>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='packing_labours'\">\r\n            <WorkersForm :worker_data=\"form_data.unloading\" :work_type=\"'contract'\"></WorkersForm>\r\n            <div class=\"o_thread_search_input mt-2\">\r\n              <input type=\"hidden\" name=\"labour_type\" value=\"Packing Labours\">\r\n            </div>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='stop'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"text-center mb-5\">\r\n                    <img src=\"/img/quality.png\" style=\"height:200px\">\r\n                    <h5 class=\"my-3\"><span class=\"text-success\">{{process_detail.name}}</span> Complete Process</h5>\r\n                    <div class=\"mb-3\" v-if=\"process_detail.next_process_details.length>0\">\r\n                      <div> Next Process: </div>\r\n                      <div class=\"mt-2\">\r\n                        <b-button type=\"button\" variant=\"outline-success\" class=\"mx-1 py-2\" v-for=\"next in next_processes\" @click=\"form_data.next_process=next.id;form_data.complete_process=true;dataForm()\">#{{next.sort_order}}/{{next.name}}</b-button>\r\n                      </div>\r\n                      <!-- <select class=\"ui-autocomplete-input w-25 p-2 mx-1\" name=\"next_process\" v-model=\"form_data.next_process\">\r\n                        <option v-for=\"next in next_processes\" :value=\"next.id\"> #{{next.sort_order}}/{{next.name}}</option>\r\n                        <option value=\"\">Complete & Finish Process</option>\r\n                      </select> -->\r\n                    </div>\r\n                    <div class=\"mt-2\">\r\n                      <b-button variant=\"outline-danger\" class=\"mx-1 py-2\" @click=\"form_data.next_process='';form_data.complete_process=true;dataForm()\"> Finish & Complete Process</b-button>\r\n                    </div>\r\n                    <!-- <div>\r\n                      <input type=\"checkbox\" name=\"complete_process\" v-model=\"form_data.complete_process\" v-show=\"false\">\r\n                      <button type=\"button\" class=\"btn\" :class=\"form_data.complete_process?'btn-success':'btn-outline-success'\" @click=\"form_data.complete_process=true;dataForm()\">YES</button>\r\n                      <button type=\"button\" class=\"btn ml-2\" :class=\"!form_data.complete_process?'btn-danger':'btn-outline-danger'\" @click=\"form_data.complete_process=false;closePopup()\">NO</button>\r\n                    </div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n      </fieldset>\r\n    </form>\r\n    <div style=\"height:84vh\" v-else>\r\n      <div>\r\n        <div class=\"loader_logo\">\r\n          <img src=\"/img/logo.png\" class=\"\" alt=\"logo\">\r\n        </div>\r\n\r\n        <div class=\"loading\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport WorkersForm from '/src/views/app/oodo/components/workers-form'\r\nexport default {\r\n  props: ['process_detail_id','start_process_id','processing_id','action','is_view'],\r\n  components:{\r\n    WorkersForm\r\n  },\r\n  data() {\r\n    return {\r\n      form_data:{\r\n        id:null,\r\n        date:null,\r\n        product:null,\r\n        status:'Draft',\r\n        shift:'DAY',\r\n        next_process:null,\r\n        machines:[],\r\n        start_process_detail:{process_products_list:[],main_process_detail:{},firewood_details:{},dryer_details:{},attribute_detail:{id:null,cut_shape_detail:{id:null, name:'', dimension:1}}, siev:null},\r\n        other_lots:[],\r\n        lot:null,\r\n        is_organic:false,\r\n        process_outputs:[],\r\n        barrel_detail:{},\r\n        next_process:null,\r\n        consumable_items_list:[],\r\n        labour_detail:{\r\n          workers:[],\r\n          wage_workers:[],\r\n          work_type:'wages',\r\n          overtime_hourse_st1:2,\r\n        },\r\n        unloading:{\r\n          workers:[],\r\n          wage_workers:[],\r\n          work_type:'wages',\r\n          overtime_hourse_st1:2,\r\n        },\r\n        packing_labours:{\r\n          workers:[],\r\n          wage_workers:[],\r\n          work_type:'wages',\r\n          overtime_hourse_st1:2,\r\n        },\r\n      },\r\n      process_detail:{outputs:[],consumable_items_list:[],inputs:[]},\r\n      packing_materials:[],\r\n      indent_packings:[],\r\n      barrel_id:null,\r\n      id:null,\r\n      product_name : '',\r\n      total_weight:0,\r\n      total_output:0,\r\n      barrels:[],\r\n      next_processes:[],\r\n      stock_parameters:[],\r\n      is_start:false,\r\n      filter_material:{specifications:[]},\r\n      materials:[],\r\n      specifications:[],\r\n      boilers:[],\r\n      cut_shapes:[],\r\n      new_shape:{id:null, name:'', dimension:1},\r\n      add_new_shape:false,\r\n      packing_note:'',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.form_data.date = this.currentDate()\r\n    if(this.processing_id){\r\n      this.getProcess()\r\n    }else{\r\n      this.getProcessDetails()\r\n    }\r\n  },\r\n  methods: {\r\n    getProcess() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/processing/'+this.processing_id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.form_data = jsonData\r\n        this.getProcessDetails()\r\n      })\r\n    },\r\n    getProcessDetails() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/process_details/'+this.process_detail_id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.process_detail = jsonData\r\n        this.form_data.machines = jsonData.machines\r\n        var self = this\r\n        if(!this.form_data.contract_labour_charge){\r\n          this.form_data.contract_labour_charge = jsonData.production_process_detail.labour_charge\r\n        }\r\n        if(this.action=='stop'){\r\n          this.nextProcesses()\r\n        }\r\n        this.getStartProcess()\r\n      })\r\n    },\r\n    getStartProcess() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/start_process/'+this.start_process_id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        if(!jsonData.attribute){\r\n          jsonData.attribute_detail = {id:null, size:'', unit:'', cut_shape_detail:{id:null, name:'', operation:'', dimension:1}}\r\n        }\r\n        this.form_data.start_process_detail = jsonData\r\n        var last_process_id = null \r\n        jsonData.processes.forEach(function(val,key){\r\n          last_process_id = val.id\r\n        })\r\n        if(!this.process_detail.barrel_input && jsonData.process_products.length<=0){\r\n          this.stockParameter()\r\n        }else{\r\n          if(this.action=='input')this.action = 'batch';\r\n        }\r\n        var lots = [];\r\n        var lot = null;\r\n        var total = 0;\r\n        var is_organic = true\r\n        jsonData.process_products.forEach(function(val,key){\r\n          if(!val.is_organic){\r\n            is_organic = false\r\n          }\r\n          if(key==0)lot=val.lot\r\n          lots.push(val.lot)\r\n        })\r\n        this.total_weight = jsonData.total_weight\r\n        this.form_data.lot = lot\r\n        this.form_data.is_organic = is_organic\r\n        this.form_data.other_lots = lots\r\n        if(this.action=='boiler'){\r\n          this.getBoilers()\r\n        }if(this.action=='cut_shape'){\r\n          this.getCutShapes()\r\n        }\r\n        this.is_start = true\r\n      })\r\n    },\r\n    getBoilers() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/security/boiler/?status=On', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.boilers = jsonData\r\n      })\r\n    },\r\n    setShapeName() {\r\n      var name =''\r\n      this.add_new_shape = false\r\n      var dimensions = parseInt(this.form_data.start_process_detail.attribute_detail.cut_shape_detail.dimension)\r\n      for (var d=0; d<dimensions; d++){\r\n        var value = document.getElementById('dimension'+d)\r\n        if(value && value.value){\r\n          name += value.value+this.form_data.start_process_detail.attribute_detail.unit\r\n          if(this.form_data.start_process_detail.attribute_detail.cut_shape_detail.operation && dimensions>1 && d<(dimensions-1)){\r\n            name += this.form_data.start_process_detail.attribute_detail.cut_shape_detail.operation\r\n          }else{\r\n            name += ' '\r\n          }\r\n        }\r\n      }\r\n      this.form_data.start_process_detail.attribute_detail.size = this.form_data.start_process_detail.attribute_detail.cut_shape_detail.name+', '+name\r\n    },\r\n    getCutShapes() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/cut_shapes/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.cut_shapes = jsonData\r\n      })\r\n    },\r\n    createShape() {\r\n      if(!this.new_shape.name || !this.new_shape.dimension){\r\n        this.showAlert('Please fill form data!','red')\r\n        return false\r\n      }\r\n      var formdata = new FormData()\r\n      formdata.append('name',this.new_shape.name)\r\n      formdata.append('dimension',this.new_shape.dimension)\r\n      if(this.new_shape.operation)formdata.append('operation',this.new_shape.operation);\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/cut_shapes/', {\r\n          method : 'POST',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        if(jsonData.id>0){\r\n          this.add_new_shape = false\r\n          this.getCutShapes()\r\n          this.form_data.start_process_detail.attribute_detail.cut_shape_detail = jsonData\r\n          this.showAlert('Saved Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!','red')\r\n        }\r\n      })\r\n    },\r\n    dataForm() {\r\n      if(this.action=='input'){\r\n        this.createNextProcess()\r\n      }\r\n      if(this.action == 'batch'){\r\n        this.form_data.status = 'Starting'\r\n        this.processForm()\r\n      }else if(this.action == 'machine'){\r\n        this.form_data.status = 'Running'\r\n        this.processForm()\r\n      }else if(this.action == 'firewood' || this.action == 'dryer'){\r\n        this.form_data.status = 'Starting'\r\n        this.processForm()\r\n      }else if(this.action == 'boiler' || this.action == 'cut_shape' || this.action == 'sieving' || this.action == 'vesels'){\r\n        this.startProcessForm()\r\n      }else if(this.action == 'unloading' || this.action == 'employee_participate' || this.action == 'packing_labours'){\r\n        if(this.action == 'employee_participate' && (this.process_detail.is_restacking || this.process_detail.auto_output)){\r\n          this.form_data.status = 'Completed'\r\n        }\r\n        if(this.action == 'unloading'){\r\n          this.form_data.status = 'Completed'\r\n        }\r\n        this.processLaboursForm()\r\n      }else if(this.action == 'stop'){\r\n        this.completeProcess()\r\n      }\r\n    },\r\n    startProcessForm() {\r\n      var formdata = new FormData()\r\n      formdata.append('main_process',this.form_data.start_process_detail.main_process)\r\n      formdata.append('process_detail',this.form_data.start_process_detail.process_detail)\r\n      formdata.append('supervisor',this.form_data.start_process_detail.supervisor)\r\n      if(this.form_data.start_process_detail.boilers.length>0){\r\n        formdata.append('boilers',this.form_data.start_process_detail.boilers)\r\n      }\r\n      if(this.form_data.start_process_detail.attribute_detail.size && this.form_data.start_process_detail.attribute_detail.cut_shape_detail.id){\r\n        formdata.append('cut_shape',this.form_data.start_process_detail.attribute_detail.cut_shape_detail.id)\r\n        formdata.append('size',this.form_data.start_process_detail.attribute_detail.size)\r\n        formdata.append('unit',this.form_data.start_process_detail.attribute_detail.unit)\r\n      }\r\n      if(this.form_data.start_process_detail.siev){\r\n        formdata.append('siev',this.form_data.start_process_detail.siev)\r\n      }\r\n      if(this.form_data.start_process_detail.number_of_vesels){\r\n        formdata.append('number_of_vesels',this.form_data.start_process_detail.number_of_vesels)\r\n        formdata.append('uses_of_vesels',this.form_data.start_process_detail.uses_of_vesels)\r\n      }\r\n      formdata.append('status',this.form_data.start_process_detail.status)\r\n\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/start_process/'+this.start_process_id+'/', {\r\n          method : 'PUT',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        if(jsonData.id>0){\r\n          this.closePopup()\r\n          this.showAlert('Saved Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!','red')\r\n        }\r\n      })\r\n    },\r\n    processForm(method='POST') {\r\n      if(this.$root.user_type!='supervisor'){\r\n        this.showAlert('You cannot add to this process!','red')\r\n        // return false\r\n      }\r\n      var param = ''\r\n      if(this.form_data.id){\r\n        method = 'PUT'\r\n        param = this.form_data.id+'/'\r\n      }\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('supervisor',this.employeeId)\r\n      formdata.append('status',this.form_data.status)\r\n      formdata.append('start_process',this.start_process_id)\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/processing/'+param, {\r\n          method : method,\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        if(jsonData.id>0){\r\n          this.form_data.id = jsonData.id\r\n          this.closePopup()\r\n          this.showAlert('Saved Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!','red')\r\n        }\r\n      })\r\n    },\r\n    processLaboursForm(method='POST') {\r\n      var param = ''\r\n      if(this.action == 'unloading' && this.form_data.unloading.id){\r\n        method = 'PUT'\r\n        param = this.form_data.unloading.id+'/'\r\n      }else if(this.action == 'packing_labours' && this.form_data.packing_labours.id){\r\n        method = 'PUT'\r\n        param = this.form_data.packing_labours.id+'/'\r\n      }else if(this.action == 'employee_participate' && this.form_data.labour_detail.id){\r\n        method = 'PUT'\r\n        param = this.form_data.labour_detail.id+'/'\r\n      }\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('process',this.form_data.id)\r\n      formdata.append('status','Completed')\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/process_labours/'+param, {\r\n          method : method,\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        if(jsonData.id>0){\r\n          this.form_data.unloading = jsonData\r\n          this.closePopup()\r\n          this.showAlert('Saved Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!','red')\r\n        }\r\n      })\r\n    },\r\n    getIndents() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/indent/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.indent_packings = jsonData\r\n      })\r\n    },\r\n    nextProcesses() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/process_details/?next_process_detail='+this.process_detail.id, {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.next_processes = jsonData\r\n        if(jsonData.length>0){\r\n          this.form_data.next_process = this.next_processes[0].id\r\n        }\r\n      })\r\n    },\r\n    completeProcess() {\r\n      if(this.$root.user_type!='supervisor'){\r\n        this.showAlert('You cannot complete to this process!','red')\r\n        // return false\r\n      }\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('supervisor',this.employeeId)\r\n      formdata.append('process_detail',this.process_detail.id)\r\n      formdata.append('start_process',this.start_process_id)\r\n      formdata.append('process',this.form_data.id)\r\n      formdata.append('next_process', this.form_data.next_process)\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/complete_process/', {\r\n          method : 'POST',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        if(jsonData.success){\r\n          this.showAlert('Saved Successfully!')\r\n          this.closePopup()\r\n        }else{\r\n          this.showAlert('Something Wrong!','red')\r\n        }\r\n      })\r\n    },\r\n    closePopup(){\r\n      this.$emit('closePopup', true)\r\n    },\r\n    stockParameter() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/products_stock/?process_detail='+this.process_detail.id+'&warehouse='+this.form_data.start_process_detail.main_process_detail.warehouse, {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.stock_parameters = jsonData\r\n      })\r\n    },\r\n    addProduct(stock_parameter){\r\n      stock_parameter.is_added = true\r\n      stock_parameter.quantity = stock_parameter.stock_quantity\r\n    },\r\n    removeProduct(stock_parameter){\r\n      stock_parameter.is_added = false\r\n      stock_parameter.quantity = ''\r\n    },\r\n    createNextProcess() {\r\n      if(this.$root.user_type!='supervisor'){\r\n        this.showAlert('You cannot add to this process!','red')\r\n        // return false\r\n      }\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('inputs',this.process_detail.inputs)\r\n      formdata.append('start_process',this.start_process_id)\r\n      formdata.append('supervisor',this.employeeId)\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/process_products/', {\r\n          method : 'POST',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        if(jsonData.id>0){\r\n          this.getProcessDetails()\r\n          this.showAlert('Saved Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!','red')\r\n        }\r\n      })\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style >\r\n\r\n@import '../../styles/style.css';\r\n\r\n.work_type_option .btn.btn-outline-primary{\r\n  padding:5px 10px;\r\n}\r\n.packing-form .modal.show .modal-dialog {\r\n    min-width: 90%!important;\r\n}\r\n</style>\r\n"]}]}