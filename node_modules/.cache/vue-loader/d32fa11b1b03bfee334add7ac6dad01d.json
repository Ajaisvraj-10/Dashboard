{"remainingRequest":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Downloads\\Archive (3)\\src\\views\\app\\pages\\users.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\src\\views\\app\\pages\\users.vue","mtime":1697120917862},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\babel-loader\\lib\\index.js","mtime":1691816383919},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\Downloads\\Archive (3)\\node_modules\\vue-loader\\lib\\index.js","mtime":1691816392152}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}