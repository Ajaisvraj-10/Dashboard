{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js??ref--17-0!E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\pages\\themes.vue?vue&type=template&id=1580b83d&scoped=true&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\pages\\themes.vue","mtime":1649749738000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWFpbi1jb250ZW50IiB9LCBbCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lci1jb250ZW50ICIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTYgY29sLWxnLTggdGhlbWVzICBob21lLXNjcm9sbCIgfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAiZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciBwYi1tZC0yIG1iLTMiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiaDQiLCB7IHN0YXRpY0NsYXNzOiAibS0wIGZvbnQtd2VpZ2h0LTYwMCIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJUaGVtZXMiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJidG4iLCB7IHN0YXRpY0NsYXNzOiAiYnRuIHB5LTEgcHgtMiBidG4tZGFyayIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJDdXN0b21pemUiKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJyb3cgbWItNCIgfSwKICAgICAgICAgICAgX3ZtLl9sKF92bS50aGVtZXMsIGZ1bmN0aW9uKHRoZW1lKSB7CiAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29sLWxnLTMgY29sLW1kLTYgY29sLXNtLTMgY29sLTQiLAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2VsZWN0QmcoX3ZtLmN1cnJlbnRfYmcsIHRoZW1lKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICJwdC0zIHBiLTMgY3Vyc29yLXBvaW50ZXIgdGhlbWUtcHJldmlldyBjYXJkIiwKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB0aGVtZS5jbGFzcwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fbSgwLCB0cnVlKV0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICkKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIDAKICAgICAgICAgICksCiAgICAgICAgICBfYygiaDQiLCB7IHN0YXRpY0NsYXNzOiAicHktMiBmb250LXdlaWdodC02MDAiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJCYWNrZ3JvdW5kIikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAicm93IG1iLTQiIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfdm0uX2woX3ZtLmJncywgZnVuY3Rpb24oYmcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbC1sZy0zIGNvbC1tZC02IGNvbC1zbS0zIGNvbC00IiwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNlbGVjdEJnKGJnLCBfdm0uY3VycmVudF90aGVtZSkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIiBjdXJzb3ItcG9pbnRlciB0aGVtZS1wcmV2aWV3ICBjYXJkIiB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGhlbWUtcHJldmlldyBpbWctY292ZXIgY3Vyc29yLXBvaW50ZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogYmcuYmFja2dyb3VuZCwgd2lkdGg6ICIxMjAiIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJiIiwgeyBzdGF0aWNDbGFzczogInAtMiIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoYmcubmFtZSkpCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX3ZtLl9tKDEpLAogICAgICAgICAgICAgIF9jKCJmb3JtIiwgeyByZWY6ICJhZGROZXdJbWciIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgZGlzcGxheTogIm5vbmUiIH0sCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogImZpbGUiLAogICAgICAgICAgICAgICAgICAgIG5hbWU6ICJiYWNrZ3JvdW5kIiwKICAgICAgICAgICAgICAgICAgICBpZDogImFkZF9iYWNrZ3JvdW5kIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBvbjogeyBjaGFuZ2U6IF92bS5hZGROZXdJbWcgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdLAogICAgICAgICAgICAyCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNiBjb2wtbGctNCBwcmV2aWV3LXJvdyIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJtb2JpbGUtcHJldmlldzIiIH0sIFsKICAgICAgICAgICAgX2MoImlmcmFtZSIsIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1vYmlsZS1wcmV2aWV3IiwKICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogIjM1MCIsIHNyYzogX3ZtLmlmcmFtZV91cmwgfQogICAgICAgICAgICB9KQogICAgICAgICAgXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInAtMiAgbXgtYXV0byBkLWZsZXggcHJldmlldy1idXR0b24iLAogICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJidXR0b24iIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kYnZNb2RhbC5zaG93KCJwcmV2aWV3TW9kYWwiKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjI1cHgiLCBoZWlnaHQ6ICIyNXB4IiB9LAogICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiAiL2ltZy9wcmV2aWV3LnBuZyIgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJoNSIsIHt9LCBbX3ZtLl92KCJQcmV2aWV3IildKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJwci0yIHBsLTIgY2FyZC1ib2R5IiB9LCBbCiAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgX2MoImJ1dHRvbiIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYmxvY2stYnV0dG9uIG1iLTIgbXQtMiBwLTIgYnRuIGJ0bi1zZWNvbmRhcnkgYnRuLWJsb2NrIgogICAgICAgIH0pLAogICAgICAgIF9jKCJidXR0b24iLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImJsb2NrLWJ1dHRvbiBtYi0yIG10LTIgcC0yIGJ0biBidG4tc2Vjb25kYXJ5IGJ0bi1ibG9jayIKICAgICAgICB9KSwKICAgICAgICBfYygiYnV0dG9uIiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJibG9jay1idXR0b24gbWItMiBtdC0yIHAtMiBidG4gYnRuLXNlY29uZGFyeSBidG4tYmxvY2siCiAgICAgICAgfSkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAibGFiZWwiLAogICAgICB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJjb2wtbGctMyBjb2wtbWQtNiBjb2wtc20tMyBjb2wtNCIsCiAgICAgICAgYXR0cnM6IHsgZm9yOiAiYWRkX2JhY2tncm91bmQiIH0KICAgICAgfSwKICAgICAgWwogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY3Vyc29yLXBvaW50ZXIgdGhlbWUtcHJldmlldyB0aGVtZS1saWdodCBjYXJkIiwKICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgZGlzcGxheTogImZsZXgiLCAidGV4dC1hbGlnbiI6ICJjZW50ZXIiIH0sCiAgICAgICAgICAgIGF0dHJzOiB7ICJkYXRhLXRoZW1lIjogIlZlbm9tIiB9CiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIiBpbWctY292ZXIgY3Vyc29yLXBvaW50ZXIiLAogICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgaGVpZ2h0OiAiMTQwcHgiIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiaDEiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LXdoaXRlIHRleHQtNzAiLAogICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJsaW5lLWhlaWdodCI6ICIxNDBweCIgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCIrICIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoImIiLCB7IHN0YXRpY0NsYXNzOiAicC0yIHRleHQtd2hpdGUiIH0sIFtfdm0uX3YoImFkZCIpXSkKICAgICAgICAgIF0KICAgICAgICApCiAgICAgIF0KICAgICkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}