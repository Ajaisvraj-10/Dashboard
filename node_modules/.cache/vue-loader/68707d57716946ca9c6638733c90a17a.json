{"remainingRequest":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/src/views/app/pages/inspections.vue?vue&type=template&id=275fd69c&scoped=true&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/src/views/app/pages/inspections.vue","mtime":1675279442000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}