{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\qc\\lot-creation-form.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\qc\\lot-creation-form.vue","mtime":1676365400823},{"path":"E:\\vue_projects\\biowin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoNCkBpbXBvcnQgJy4uL3N0eWxlcy9zdHlsZS5jc3MnOw0KDQoNCg=="},{"version":3,"sources":["lot-creation-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6ZA","file":"lot-creation-form.vue","sourceRoot":"src/views/app/oodo/qc","sourcesContent":["<template>\r\n  <div class=\"main-content create-main\">\r\n    <form ref=\"dataForm\" @submit.prevent=\"dataForm()\">\r\n      <div>\r\n        <div class=\"d-flex mb-2 align-items-center  justify-content-between\">\r\n          <slot name=\"header\">\r\n             <h5 class=\"mb-0\"><span class=\"text-success\">Lot Creation</span> / {{slugToWord(action)}}</h5>\r\n          </slot>\r\n          <div class=\"d-flex\">\r\n             <b-button variant=\"success\" type=\"submit\" class=\" px-3 py-1  d-sm-block mx-1\"\r\n              >Save\r\n            </b-button>\r\n            <router-link to=\"/app/qc/lot-creation\">\r\n              <b-button variant=\"danger\" class=\" px-3 py-1  d-sm-block mx-1\"\r\n                >Discard\r\n              </b-button>\r\n            </router-link>\r\n          </div>\r\n        </div>\r\n        <div class=\" my-3 border-top\"></div>\r\n      </div>\r\n      <!-- <div class=\"wrapper\"> -->\r\n      <b-row class=\"main-scroll pt-2\">\r\n        <b-col lg=\"4\" xl=\"4\" class=\"\">\r\n          <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n            <div>\r\n              <h5>Select Product</h5>\r\n              <div class=\"ul-contact-detail__timeline\">\r\n                <div class=\"row\">\r\n                  <div class=\" col-md-12\">\r\n                    <div class=\"user-info pt-2\">\r\n                      <div class=\"o_thread_search_input\">\r\n                        <span style=\"width:120px;\">WareHouse  : </span>\r\n                        <select class=\"ui-autocomplete-input w-100 mx-1\" name=\"warehouse\" v-model=\"form_data.warehouse\" @change=\"getNormalProcurements()\">>\r\n                          <option value=\"\" disabled>Select WareHouse</option>\r\n                          <option v-for=\"warehouse in warehouses\" :value=\"warehouse.id\">{{warehouse.name}}</option>\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input\">\r\n                        <span style=\"width:120px;\">Purchase Type  : </span>\r\n                        <select class=\"ui-autocomplete-input w-100 mx-1\" name=\"purchase_type\" v-model=\"form_data.purchase_type\" @change=\"getNormalProcurements()\">\r\n                            <option v-for=\"purchase_type in purchase_types\" :value=\"purchase_type.id\">{{purchase_type.name}}</option>\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input\">\r\n                        <span style=\"width:120px;\">Farmer Status : </span>\r\n                        <select class=\"ui-autocomplete-input w-100 mx-1\" name=\"farmer_status\" v-model=\"form_data.farmer_status\" @change=\"getNormalProcurements()\">\r\n                            <option v-for=\"farmer_status in farmer_statuses\" :value=\"farmer_status\">{{farmer_status}}</option>\r\n                        </select>\r\n                      </div>\r\n                      <ProductFields :product_id=\"product_id\" :readonly=\"action=='edit'?true:false\" v-if=\"load_products\" @productId=\"productId\"></ProductFields>\r\n                      \r\n                      <div class=\"o_thread_search_input mt-2\">\r\n                        <span style=\"width:120px;\"> Send to lab: </span>\r\n                        <div>\r\n                          <input type=\"checkbox\" name=\"send_to_lab\" value=\"1\" v-model=\"form_data.send_to_lab\" v-show=\"false\">\r\n                          <button type=\"button\" class=\"btn ml-2 py-1\" :class=\"form_data.send_to_lab?'btn-success':'btn-outline-success'\" @click=\"form_data.send_to_lab=true\">Yes</button>\r\n                          <button type=\"button\" class=\"btn ml-2 py-1\" :class=\"form_data.send_to_lab==false?'btn-danger':'btn-outline-danger'\" @click=\"form_data.send_to_lab=false\">No</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <select name=\"normal_procurement\" v-model=\"form_data.normal_procurement\" multiple v-show=\"false\">\r\n                        <option v-for=\"new_normal in new_normals\" :value=\"new_normal.id\">{{new_normal.id}}</option>\r\n                      </select>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <hr>\r\n              </div>\r\n            </div>\r\n          </b-card>\r\n        </b-col>\r\n        <b-col lg=\"8\" xl=\"8\" class=\"\">\r\n          <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n            <div>\r\n              <h5 v-if=\"new_normals.length==0 && normals.length==0\">Pending Items</h5>\r\n              <div class=\"row mx-0 border-bottom\" v-else>\r\n                <h5 class=\"col-md-12 px-2\">Create Lot</h5>\r\n                <div class=\"o_thread_search_input col-md-5 mb-0 pb-0\">\r\n                  <span style=\"width:120px;\"> Total Weight (KG): </span>\r\n                  <input placeholder=\"Total Weight\" type=\"text\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.total_weight\" name=\"total_weight\" readonly>\r\n                </div>\r\n                <div class=\"o_thread_search_input col-md-7 mb-0 pb-0\">\r\n                  <span style=\"width:155px;\"> Available Quantity (KG): </span>\r\n                  <input placeholder=\"Available Quantity\" type=\"text\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"form_data.available_quantity\" name=\"available_quantity\" readonly>\r\n                </div>\r\n              </div>\r\n              <div class=\"ul-contact-detail__timeline\">\r\n                <div class=\"\">\r\n                  <div class=\"o_thread_composer row\" v-if=\"new_normals.length==0 && normals.length==0\">\r\n                    <div class=\" col-md-12\">\r\n                       <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Normal Id</th>\r\n                            <th>Product</th>\r\n                            <th>Warehouse</th>\r\n                            <th>Purchase Type</th>\r\n                            <th>Quantity</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr v-for=\"(line,key) in pending_procurments.results\">\r\n                             <td>\r\n                              {{line.raw_number}}\r\n                            </td>\r\n                            <td>\r\n                              {{line.category}}> {{line.product}}{{line.parameter?'> '+line.parameter:''}}\r\n                              <sup>\r\n                                <span class=\"badge badge-success\" v-if=\"line.farmer_status=='Organic'\">ORG</span>\r\n                              </sup>\r\n                            </td>\r\n                            <td>\r\n                              {{line.warehouse}}\r\n                            </td>\r\n                            <td>\r\n                              {{line.purchase_type}}\r\n                            </td>\r\n                            <td>\r\n                              {{line.total_quantity}}KG\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"o_thread_composer row mx-1\" v-else>\r\n                    <div class=\"col-md-6 mt-4 border-right\" v-if=\"form_data.purchase_type\">\r\n                      <h6>Pending Raws</h6>\r\n                      <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Raw Id</th>\r\n                            <th>Quantity</th>\r\n                            <th>Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody v-if=\"product_id\">\r\n                          <tr v-for=\"(line,key) in normals\">\r\n                             <td>\r\n                              {{line.raw_number}}\r\n                            </td>\r\n                            <td>\r\n                              {{line.total_quantity}}KG\r\n                            </td>\r\n                            <td>\r\n                              <button type=\"button\" class=\"btn btn-primary btn-sm px-3 py-1 ml-4\" @click=\"lineOperation('+',key,line)\">Add-></button>\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <div class=\"col-md-6 mt-4\" v-if=\"form_data.purchase_type\">\r\n                      <h6>Added Raws</h6>\r\n                      <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Raw Id</th>\r\n                            <th>Quantity</th>\r\n                            <th>Action</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr v-for=\"(line,key) in new_normals\">\r\n                             <td>\r\n                              {{line.raw_number}}\r\n                            </td>\r\n                            <td>\r\n                              {{line.total_quantity}}KG\r\n                            </td>\r\n                            <td>\r\n                              <button type=\"button\" class=\"btn btn-danger btn-sm px-3 py-1 ml-4\" @click=\"lineOperation('-',key,line)\" v-if=\"line.is_new\">Remove</button>\r\n                              <button type=\"button\" class=\"btn btn-success btn-sm px-3 py-1 ml-4\" v-else>Added</button>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Total Qty</th>\r\n                            <td>{{form_data.total_weight}}KG</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <hr>\r\n              </div>\r\n            </div>\r\n          </b-card>\r\n        </b-col>\r\n\r\n      </b-row>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport ProductFields from '/src/views/app/oodo/components/product_fields'\r\nexport default {\r\n  metaInfo: {\r\n    title: \"FPO - ICS\"\r\n  },\r\n  components:{\r\n    ProductFields\r\n  },\r\n  data() {\r\n    return {\r\n      form_data:{date:new Date(),normal_procurement:[],available_quantity:0,total_weight:0,warehouse:'',farmer_status:'Conventional',send_to_lab:false},\r\n      id:null,\r\n      total_weight:0,\r\n      action:'create',\r\n      load_products:false,\r\n      product_id:null,\r\n      normals:[],\r\n      new_normals:[],\r\n      pending_procurments:{results:[]},\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$root.current_section = 'qc'\r\n    this.form_data.date = this.currentDate()\r\n    this.action = this.$route.params.action\r\n    if(this.action == 'edit'){\r\n      this.id = this.$route.params.id\r\n      this.getForm()\r\n    }else{\r\n      this.load_products=true\r\n    }\r\n    this.getPurchaseTypes()\r\n    this.getWarehouses()\r\n    this.pendingProcurments()\r\n  },\r\n  methods: {\r\n    getForm() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/qc/create_lots/'+this.id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.form_data = jsonData\r\n        this.total_weight = jsonData.total_weight\r\n        this.new_normals = jsonData.normal_procurements\r\n        this.product_id = jsonData.product\r\n        this.form_data.product = jsonData.product\r\n        this.load_products=true\r\n        this.getNormalProcurements()\r\n      })\r\n    },\r\n    productId(id){\r\n      this.product_id = id\r\n      this.form_data.product = id\r\n      if(this.product_id){\r\n        this.getNormalProcurements()\r\n      }else{\r\n        this.new_normals = []\r\n      }\r\n    },\r\n    pendingProcurments(){\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/qc/normal_procured/?status=Qc Approved', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.pending_procurments = jsonData\r\n      })\r\n    },\r\n    getNormalProcurements(){\r\n      if(!this.product_id||!this.form_data.purchase_type||!this.form_data.warehouse||!this.form_data.farmer_status){\r\n        return false\r\n      }\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      var formdata = new FormData();\r\n      formdata.append('product',this.product_id)\r\n      formdata.append('purchase_type',this.form_data.purchase_type)\r\n      formdata.append('warehouse',this.form_data.warehouse)\r\n      formdata.append('farmer_status',this.form_data.farmer_status)\r\n      formdata.append('status', 'Qc Approved')\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/qc/normal_procurements_product/', {\r\n          method : 'post',\r\n          headers: headers,\r\n          body: formdata,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        this.normals = jsonData\r\n        this.totalSumQty()\r\n      })\r\n    },\r\n    totalSumQty(){\r\n      var total_qty = 0\r\n      var available_quantity = 0\r\n      this.new_normals.forEach(function(line,key){\r\n        if(line.is_new!=1){\r\n          line['is_new'] = 0\r\n        }\r\n        available_quantity = available_quantity + line.total_quantity\r\n        if(line.is_new==1){\r\n          total_qty = total_qty + line.total_quantity\r\n        }\r\n      })\r\n      this.form_data.total_weight = this.total_weight+total_qty\r\n      this.form_data.available_quantity = available_quantity\r\n    },\r\n    dataForm() {\r\n      if(this.id){\r\n        this.updateFormdata()\r\n      }else{\r\n        this.createFormdata()\r\n      }\r\n    },\r\n    lineOperation(operation,key,line){\r\n      if(operation=='+'){\r\n        line['is_new'] = 1\r\n        this.new_normals.push(line)\r\n        this.form_data.normal_procurement.push(line.id)\r\n        this.normals.splice(key, 1)\r\n      }else{\r\n        this.normals.push(line)\r\n        this.new_normals.splice(key, 1)\r\n        this.form_data.normal_procurement.splice(key, 1)\r\n      }\r\n      this.totalSumQty()\r\n    },\r\n    createFormdata() {\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('product',this.product_id)\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/qc/create_lots/', {\r\n          method : 'POST',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        if(jsonData.id>0){\r\n          this.id = jsonData.id\r\n          this.updateStockAndNormalStatus()\r\n        }else{\r\n          this.showAlert('Something Wrong!')\r\n        }\r\n      })\r\n    },\r\n    updateFormdata() {\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('product',this.product_id)\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/qc/create_lots/'+this.id+'/', {\r\n          method : 'PUT',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        if(jsonData.id>0){\r\n          this.updateStockAndNormalStatus()\r\n        }else{\r\n          this.showAlert('Something Wrong!')\r\n        }\r\n      })\r\n    },\r\n    updateStockAndNormalStatus() {\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('status','Lot Created')\r\n      formdata.append('warehouse',this.form_data.warehouse)\r\n      formdata.append('lot',this.id)\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/parameter_stock/', {\r\n          method : 'POST',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        if(jsonData.id>0){\r\n          this.showAlert('Saved Successfully')\r\n        }else{\r\n          this.showAlert('Something Wrong!')\r\n        }\r\n      })\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style >\r\n\r\n@import '../styles/style.css';\r\n\r\n\r\n</style>\r\n"]}]}