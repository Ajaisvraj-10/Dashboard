{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\process\\processing-list.vue?vue&type=template&id=f039cfd6&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\process\\processing-list.vue","mtime":1676396202136},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9Im1haW4tY29udGVudCBjcmVhdGUtbWFpbiI+CiAgPGRpdj4KICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggbWItMiBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4iPgogICAgICAgIDxzbG90IG5hbWU9ImhlYWRlciI+CiAgICAgICAgICA8aDUgY2xhc3M9Im1iLTAiPlByb2Nlc3MgLzxzcGFuIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MgY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0iZ2V0TWFpblByb2R1Y3Rpb25Qcm9jZXNzKCkiPnt7cHJvZHVjdGlvbl9wcm9jZXNzLm1haW5fcHJvY2Vzc19uYW1lfX08L3NwYW4+IC8ge3twcm9kdWN0aW9uX3Byb2Nlc3MubmFtZX19PC9oNT4KICAgICAgICAgICAgICAKICAgICAgICA8L3Nsb3Q+CiAgICAgICAgPGRpdj4KCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4Ij4KICAgICAgICAgIDxiLWJ1dHRvbiB2YXJpYW50PSJwcmltYXJ5IiB0eXBlPSJidXR0b24iIGNsYXNzPSIgcHgtMyBweS0xICBkLXNtLWJsb2NrIG14LTEiIEBjbGljaz0ibmV3UHJvY2VzcygpIj5OZXcgUHJvY2VzcwogICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgIDxyb3V0ZXItbGluayA6dG89IicvYXBwL3Byb2R1Y3Rpb24vcHJvY2Vzcy9wcm9jZXNzaW5nP2RlcGFydG1lbnQ9Jytwcm9kdWN0aW9uX3Byb2Nlc3MuZGVwYXJ0bWVudCI+CiAgICAgICAgICAgIDxiLWJ1dHRvbiB2YXJpYW50PSJkYW5nZXIiIGNsYXNzPSIgcHgtMyBweS0xICBkLXNtLWJsb2NrIG14LTEiCiAgICAgICAgICAgICAgPkRpc2NhcmQKICAgICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgIDwvcm91dGVyLWxpbms+CiAgICAgICAgPC9kaXY+CiAgICAgICAgIAogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibXktMiBib3JkZXItdG9wIj48L2Rpdj4KICA8L2Rpdj4KICA8IS0tIDxkaXYgY2xhc3M9IndyYXBwZXIiPiAtLT4KIAogIDxkaXYgY2xhc3M9ImQtZmxleCBtYWluLXNjcm9sbCIgc3R5bGU9Im92ZXJmbG93LXk6aGlkZGVuO21pbi13aWR0aDoxMDElOyI+CgogICAgPGRpdiBjbGFzcz0icC0xIiB2LWZvcj0icHJvY2Vzc19kZXRhaWwgaW4gcHJvY2Vzc19kZXRhaWxzIiA6c3R5bGU9IidtYXgtd2lkdGg6JyttYXhfd2lkdGgrJztmbGV4OiAwIDAgJyttYXhfd2lkdGgiIDpjbGFzcz0iaXNfYWN0aXZlX3Byb2Nlc3M9PXByb2Nlc3NfZGV0YWlsLmlkPydhY3RpdmVfcHJvY2Vzcyc6JyciIHYtaWY9InByb2Nlc3NfZGV0YWlsLmlkIT1kZWZhdWx0X3BhY2tpbmdfaWQiPgogIAogICAgICA8ZGl2IGNsYXNzPSJjYXJkIHAtMCBwYi0yIG15LTEiPgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgcC0yIG0tMCBmbGV4LXJvdyBib3JkZXIiIEBjbGljaz0iaXNfYWN0aXZlX3Byb2Nlc3M9cHJvY2Vzc19kZXRhaWwuaWQiPgogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBjb2wtbWQtMiBhbGlnbi1zZWxmLWNlbnRlciBwLTEiPgogICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9wcm9jZWVzLnBuZyIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcCI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9IiBjb2wtbWQtMTAgYWxpZ24tc2VsZi1jZW50ZXIiPgogICAgICAgICAgICA8Yj57e3Byb2Nlc3NfZGV0YWlsLm5hbWV9fSAgPC9iPgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgIDxiLWJ1dHRvbiB0eXBlPSJidXR0b24iIHZhcmlhbnQ9InByaW1hcnkiIGNsYXNzPSIgcHgtMSBweS0wIiBzdHlsZT0iZm9udC1zaXplOjEycHgiIEBjbGljaz0ibmV3UHJvY2Vzcyhwcm9jZXNzX2RldGFpbCkiPk5ldzwvYi1idXR0b24+CiAgICAgICAgICAgICAgPGItYnV0dG9uIHR5cGU9ImJ1dHRvbiIgIHZhcmlhbnQ9ImRhbmdlciIgY2xhc3M9Im1sLTEgcHgtMSBweS0wIiBzdHlsZT0iZm9udC1zaXplOjEycHgiIEBjbGljaz0iYnJlYWtEb3duKHByb2Nlc3NfZGV0YWlsKSI+QnJlYWs8L2ItYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InByb2Nlc3Nfa2FuYmFuIj4KICAgICAgICAgIDxiIGNsYXNzPSJteC0xIiB2LWlmPSJwcm9kdWN0aW9uX3Byb2Nlc3MuaWQ9PTI1Ij5CYXRjaHM8L2I+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtLTEiIHYtZm9yPSIoc3RhcnRfcHJvY2VzcyxrZXkpIGluIHByb2Nlc3NfZGV0YWlsLnN0YXJ0X3Byb2Nlc3NlcyIgdi1pZj0ic3RhcnRfcHJvY2Vzcy5tYWluX3Byb2Nlc3NfZGV0YWlsLmN1cnJlbnRfcHJvY2Vzc19kZXRhaWw9PXN0YXJ0X3Byb2Nlc3MucHJvY2Vzc19kZXRhaWwiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJweC0yIGNhcmQgcHktMiI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXgtMSBtYi0yIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idy0xMDAiIHYtaWY9InByb2Nlc3NfZGV0YWlsLmJhcnJlbF9pbnB1dCAmJiAhcHJvY2Vzc19kZXRhaWwuaXNfc29ydGluZyI+CiAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iIj4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcHJpbWFyeSI+I3t7c3RhcnRfcHJvY2Vzcy5tYWluX3Byb2Nlc3N9fS9QUk9DRVNTPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQgcHItMyI+CiAgICAgICAgICAgICAgICAgICAgICBMT1QKICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtZm9yPSIoYmFycmVsX3dhc2hpbmdfcHJvZHVjdCxrZXkpIGluIHN0YXJ0X3Byb2Nlc3MuYmFycmVsX3dhc2hpbmdfcHJvZHVjdHMiPgogICAgICAgICAgICAgICAgICAgICAgICB7e2tleT09MD8nJzonLCAnfX17e2JhcnJlbF93YXNoaW5nX3Byb2R1Y3QubG90fX0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8dHIgdi1mb3I9IihiYXJyZWxfd2FzaGluZ19wcm9kdWN0LGtleSkgaW4gc3RhcnRfcHJvY2Vzcy5iYXJyZWxfd2FzaGluZ19wcm9kdWN0cyI+CiAgICAgICAgICAgICAgICAgICAgPHRoPnt7a2V5PT0wPydCQVJSRUwnK3NsdWdUb1dvcmQoY2hlY2tNdWx0KHN0YXJ0X3Byb2Nlc3MuYmFycmVsX3dhc2hpbmdfcHJvZHVjdHMubGVuZ3RoKSk6Jyd9fTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgIHt7a2V5PT0wPycnOicsICd9fXt7YmFycmVsX3dhc2hpbmdfcHJvZHVjdC5uYW1lfX0gPHN1cCB2LWlmPSJiYXJyZWxfd2FzaGluZ19wcm9kdWN0LmlzX29yZ2FuaWMiPjxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1zdWNjZXNzIj5PUkc8L3NwYW4+PC9zdXA+IDxzcGFuPih7e2JhcnJlbF93YXNoaW5nX3Byb2R1Y3QuYXZhaWxhYmxlX3F1YW50aXR5fX1LRyk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InctMTAwIiB2LWVsc2U+CiAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iIj4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcHJpbWFyeSI+I3t7c3RhcnRfcHJvY2Vzcy5tYWluX3Byb2Nlc3N9fS9QUk9DRVNTPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQgcHItMyI+CiAgICAgICAgICAgICAgICAgICAgICBMT1QKICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtZm9yPSIocHJvY2Vzc19wcm9kdWN0LGtleSkgaW4gc3RhcnRfcHJvY2Vzcy5wcm9jZXNzX3Byb2R1Y3RzIj4KICAgICAgICAgICAgICAgICAgICAgICAge3trZXk9PTA/Jyc6JywgJ319e3twcm9jZXNzX3Byb2R1Y3QubG90fX0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8dHIgdi1mb3I9Iihwcm9jZXNzX3Byb2R1Y3Qsa2V5KSBpbiBzdGFydF9wcm9jZXNzLnByb2Nlc3NfcHJvZHVjdHMiPgogICAgICAgICAgICAgICAgICAgIDx0aD57e2tleT09MD8nSU5QVVQnK3NsdWdUb1dvcmQoY2hlY2tNdWx0KHN0YXJ0X3Byb2Nlc3MucHJvY2Vzc19wcm9kdWN0cy5sZW5ndGgpKTonJ319PC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAge3trZXk9PTA/Jyc6JywgJ319e3twcm9jZXNzX3Byb2R1Y3QucGFyYW1ldGVyX2RldGFpbC5uYW1lfX0gPHN1cCB2LWlmPSJwcm9jZXNzX3Byb2R1Y3QuaXNfb3JnYW5pYyI+PHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLXN1Y2Nlc3MiPk9SRzwvc3Bhbj48L3N1cD48c3BhbiB2LXNob3c9IiFwcm9jZXNzX2RldGFpbC5pc19kcnllciI+KHt7cHJvY2Vzc19wcm9kdWN0LnF1YW50aXR5fX1LRyk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InctMTAwIj4KICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPSIyIj5TVEFUVVM8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPnt7c3RhcnRfcHJvY2Vzcy5zdGF0dXN9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtZGFuZ2VyIHAtMSBjdXJzb3ItcG9pbnRlciIgdi1pZj0ic3RhcnRfcHJvY2Vzcy5wcm9jZXNzZXMubGVuZ3RoPjAiIEBjbGljaz0ic3RhcnRQcm9jZXNzKCdzdG9wJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzKSIgPkNvbXBsZXRlIFByb2Nlc3M8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utc3VjY2VzcyBwLTEgY3Vyc29yLXBvaW50ZXIiIHYtZWxzZSBAY2xpY2s9InN0YXJ0UHJvY2VzcygnaW5wdXQnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MpIiA+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9Iihwcm9jZXNzX2RldGFpbC5pc19hdHRyaWJ1dGUgJiYgc3RhcnRfcHJvY2Vzcy5hdHRyaWJ1dGUpIHx8IChwcm9jZXNzX2RldGFpbC5pc19zaWV2aW5nICYmIHN0YXJ0X3Byb2Nlc3Muc2lldikgfHwgKCFwcm9jZXNzX2RldGFpbC5pc19hdHRyaWJ1dGUgJiYgIXByb2Nlc3NfZGV0YWlsLmlzX3NpZXZpbmcpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICBTdGFydCBQcm9jZXNzCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1zZWNvbmRhcnkgY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0ic3RhcnRQcm9jZXNzQ29sKHN0YXJ0X3Byb2Nlc3MpIiBzdHlsZT0ibWFyZ2luLWxlZnQ6NXB4O21hcmdpbi1yaWdodDotMnB4O3BhZGRpbmc6MC4yNXJlbSA2cHgiPjxiPnt7c3RhcnRfcHJvY2Vzcy5pc19zaG93IHx8IHN0YXJ0X3Byb2Nlc3Nfc2VsZWN0ZWRfaWRzLmluY2x1ZGVzKHN0YXJ0X3Byb2Nlc3MuaWQpPyctJzonKyd9fTwvYj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9InByb2Nlc3NfZGV0YWlsLmlzX2RyeWVyICYmIHN0YXJ0X3Byb2Nlc3MucHJvY2Vzc2VzLmxlbmd0aD4wICYmIChzdGFydF9wcm9jZXNzLmlzX3Nob3cgfHwgc3RhcnRfcHJvY2Vzc19zZWxlY3RlZF9pZHMuaW5jbHVkZXMoc3RhcnRfcHJvY2Vzcy5pZCkpIj4KICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICB7e3N0YXJ0X3Byb2Nlc3MuZHJ5ZXJfZGV0YWlscy5kcnllcl9lbmRfdGltZT8nRHJ5ZXIgcnVubmluZyB0aW1lJzpzdGFydF9wcm9jZXNzLmRyeWVyX2RldGFpbHMuZHJ5ZXJfc3RhcnRfdGltZT8nRHJ5ZXIgc3RhcnRpbmcgdGltZSc6J0RyeWVyJ319CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggOmNvbHNwYW49InN0YXJ0X3Byb2Nlc3MuZHJ5ZXJfZGV0YWlscy5kcnllcl9lbmRfdGltZT8nMic6JyciPgogICAgICAgICAgICAgICAgICAgICAge3tzdGFydF9wcm9jZXNzLmRyeWVyX2RldGFpbHMuZHJ5ZXJfZW5kX3RpbWU/dGltZUZvcm1hdGUoc3RhcnRfcHJvY2Vzcy5kcnllcl9kZXRhaWxzLmRyeWVyX3N0YXJ0X3RpbWUpKycgdG8gJyt0aW1lRm9ybWF0ZShzdGFydF9wcm9jZXNzLmRyeWVyX2RldGFpbHMuZHJ5ZXJfZW5kX3RpbWUpOnN0YXJ0X3Byb2Nlc3MuZHJ5ZXJfZGV0YWlscy5kcnllcl9zdGFydF90aW1lP3RpbWVGb3JtYXRlKHN0YXJ0X3Byb2Nlc3MuZHJ5ZXJfZGV0YWlscy5kcnllcl9zdGFydF90aW1lKTonTm90IHN0YXJ0J319CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQiIHYtaWY9IiFzdGFydF9wcm9jZXNzLmRyeWVyX2RldGFpbHMuZHJ5ZXJfZW5kX3RpbWUiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLWRhbmdlciBjdXJzb3ItcG9pbnRlciIgdi1pZj0ic3RhcnRfcHJvY2Vzcy5kcnllcl9kZXRhaWxzLmRyeWVyX3N0YXJ0X3RpbWUiIEBjbGljaz0ic3RhcnRQcm9jZXNzKCdkcnllcicscHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2VzcykiID5FbmQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utc3VjY2VzcyBjdXJzb3ItcG9pbnRlciIgdi1lbHNlIEBjbGljaz0ic3RhcnRQcm9jZXNzKCdkcnllcicscHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2VzcykiID5TdGFydDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8dHIgdi1pZj0icHJvY2Vzc19kZXRhaWwuaXNfZHJ5ZXIgJiYgc3RhcnRfcHJvY2Vzcy5wcm9jZXNzZXMubGVuZ3RoPjAgJiYgcHJvY2Vzc19kZXRhaWwuY29uc3VtYWJsZV9pdGVtcy5sZW5ndGg+MCAmJiAoc3RhcnRfcHJvY2Vzcy5pc19zaG93IHx8IHN0YXJ0X3Byb2Nlc3Nfc2VsZWN0ZWRfaWRzLmluY2x1ZGVzKHN0YXJ0X3Byb2Nlc3MuaWQpKSI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49IjIiPgogICAgICAgICAgICAgICAgICAgICAge3tzdGFydF9wcm9jZXNzLmZpcmV3b29kX2RldGFpbHMuZmlyZXdvb2RfZW5kX3RpbWU/J0Z1cm5hY2UgcmVjb21tZW5kYXRpb24nOnN0YXJ0X3Byb2Nlc3MuZmlyZXdvb2RfZGV0YWlscy5maXJld29vZF9zdGFydF90aW1lPydGdXJuYWNlIHJlY29tbWVuZGF0aW9uJzonRnVybmFjZSByZWNvbW1lbmRhdGlvbid9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIDpjb2xzcGFuPSJzdGFydF9wcm9jZXNzLmZpcmV3b29kX2RldGFpbHMuZmlyZXdvb2RfZW5kX3RpbWU/JzInOicnIj4KICAgICAgICAgICAgICAgICAgICAgIHt7c3RhcnRfcHJvY2Vzcy5maXJld29vZF9kZXRhaWxzLmZpcmV3b29kX2VuZF90aW1lP3RpbWVGb3JtYXRlKHN0YXJ0X3Byb2Nlc3MuZmlyZXdvb2RfZGV0YWlscy5maXJld29vZF9zdGFydF90aW1lKSsnIHRvICcrdGltZUZvcm1hdGUoc3RhcnRfcHJvY2Vzcy5maXJld29vZF9kZXRhaWxzLmZpcmV3b29kX2VuZF90aW1lKTpzdGFydF9wcm9jZXNzLmZpcmV3b29kX2RldGFpbHMuZmlyZXdvb2Rfc3RhcnRfdGltZT90aW1lRm9ybWF0ZShzdGFydF9wcm9jZXNzLmZpcmV3b29kX2RldGFpbHMuZmlyZXdvb2Rfc3RhcnRfdGltZSk6J05vdCBzdGFydCd9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0IiB2LWlmPSIhc3RhcnRfcHJvY2Vzcy5maXJld29vZF9kZXRhaWxzLmZpcmV3b29kX2VuZF90aW1lIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1kYW5nZXIgY3Vyc29yLXBvaW50ZXIiIHYtaWY9InN0YXJ0X3Byb2Nlc3MuZmlyZXdvb2RfZGV0YWlscy5maXJld29vZF9zdGFydF90aW1lIiBAY2xpY2s9InN0YXJ0UHJvY2VzcygnZmlyZXdvb2QnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MpIiA+RW5kPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLXN1Y2Nlc3MgY3Vyc29yLXBvaW50ZXIiIHYtZWxzZSBAY2xpY2s9InN0YXJ0UHJvY2VzcygnZmlyZXdvb2QnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MpIiA+U3RhcnQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9InByb2Nlc3NfZGV0YWlsLmlzX2JvaWxlciI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49IjIiPgogICAgICAgICAgICAgICAgICAgICAgVGhlcm1hbCBFcXVpcG1lbnQKICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCA6Y29sc3Bhbj0ic3RhcnRfcHJvY2Vzcy5ib2lsZXJzLmxlbmd0aD4wPycyJzonJyI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1pbmZvIiB2LWlmPSJzdGFydF9wcm9jZXNzLmJvaWxlcnMubGVuZ3RoPjAiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWZvcj0iYm9pbGVyIGluIHN0YXJ0X3Byb2Nlc3MuYm9pbGVyX2RldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7Ym9pbGVyLm5hbWV9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDxiIGNsYXNzPSJwbC0yIiA6Y2xhc3M9ImJvaWxlci5zdGF0dXM9PSdPbic/J3RleHQtc3VjY2Vzcyc6J3RleHQtZGFuZ2VyJyIgPnt7Ym9pbGVyLnN0YXR1c319PC9iPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWVsc2U+Tm90IFNlbGVjdGVkPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0IiB2LWlmPSIhc3RhcnRfcHJvY2Vzcy5ib2lsZXJzLmxlbmd0aD4wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1wcmltYXJ5IGN1cnNvci1wb2ludGVyIiBAY2xpY2s9InN0YXJ0UHJvY2VzcygnYm9pbGVyJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzKSIgPlNlbGVjdDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8dHIgdi1pZj0icHJvY2Vzc19kZXRhaWwuaXNfYmxhbmNoaW5nIj4KICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICBOdW1iZXIgb2YgdmVzZWxzCiAgICAgICAgICAgICAgICAgICAgICA8YiBjbGFzcz0idGV4dC1pbmZvIiB2LWlmPSJzdGFydF9wcm9jZXNzLm51bWJlcl9vZl92ZXNlbHM+MCI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7c3RhcnRfcHJvY2Vzcy5udW1iZXJfb2ZfdmVzZWxzfX0KICAgICAgICAgICAgICAgICAgICAgIDwvYj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCA6Y29sc3Bhbj0ic3RhcnRfcHJvY2Vzcy5udW1iZXJfb2ZfdmVzZWxzPjA/JzInOicnIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9InN0YXJ0X3Byb2Nlc3MubnVtYmVyX29mX3Zlc2Vscz4wIj4KICAgICAgICAgICAgICAgICAgICAgICAgVG90YWwgdXNlcyAodmVzZWxzKTogPGIgY2xhc3M9InRleHQtaW5mbyI+e3tzdGFydF9wcm9jZXNzLnVzZXNfb2ZfdmVzZWxzfX08L2I+CiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWVsc2U+Tm90IEVudGVyZWQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQiIHYtaWY9InN0YXJ0X3Byb2Nlc3MubnVtYmVyX29mX3Zlc2Vsczw9MCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtcHJpbWFyeSBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ3Zlc2VscycscHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2VzcykiID5FbnRlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8dHIgdi1pZj0icHJvY2Vzc19kZXRhaWwuaXNfYXR0cmlidXRlIj4KICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICB7e3N0YXJ0X3Byb2Nlc3MuYXR0cmlidXRlPydTZWxlY3RlZCBDdXQgU2hhcGUnOidDdXQgU2hhcGUnfX0KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCA6Y29sc3Bhbj0ic3RhcnRfcHJvY2Vzcy5hdHRyaWJ1dGU/JzInOicnIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LWluZm8iIHYtaWY9InN0YXJ0X3Byb2Nlc3MuYXR0cmlidXRlIj4KICAgICAgICAgICAgICAgICAgICAgIHt7c3RhcnRfcHJvY2Vzcy5hdHRyaWJ1dGVfZGV0YWlsLnNpemV9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtZWxzZT5Ob3QgU2VsZWN0ZWQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQiIHYtaWY9IiFzdGFydF9wcm9jZXNzLmF0dHJpYnV0ZSI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtcHJpbWFyeSBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ2N1dF9zaGFwZScscHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2VzcykiID5TZWxlY3Q8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9InByb2Nlc3NfZGV0YWlsLmlzX3NpZXZpbmciPgogICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPSIyIj4KICAgICAgICAgICAgICAgICAgICAgIHt7c3RhcnRfcHJvY2Vzcy5zaWV2PydTZWxlY3RlZCBTaWV2ZSc6J1NlbGVjdCBTaWV2ZSd9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIDpjb2xzcGFuPSJzdGFydF9wcm9jZXNzLnNpZXY/JzInOicnIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LWluZm8iIHYtaWY9InN0YXJ0X3Byb2Nlc3Muc2lldiI+CiAgICAgICAgICAgICAgICAgICAgICB7e3N0YXJ0X3Byb2Nlc3Muc2lldl9uYW1lfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWVsc2U+Tm90IFNlbGVjdGVkPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0IiB2LWlmPSIhc3RhcnRfcHJvY2Vzcy5zaWV2Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1wcmltYXJ5IGN1cnNvci1wb2ludGVyIiBAY2xpY2s9InN0YXJ0UHJvY2Vzcygnc2lldmluZycscHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2VzcykiID5TZWxlY3Q8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9InN0YXJ0X3Byb2Nlc3MucHJvY2Vzc2VzLmxlbmd0aD4wICYmIHN0YXJ0X3Byb2Nlc3MuYnJlYWtfZGV0YWlscy5icmVha19jb3VudD4wICYmIChzdGFydF9wcm9jZXNzLmlzX3Nob3cgfHwgc3RhcnRfcHJvY2Vzc19zZWxlY3RlZF9pZHMuaW5jbHVkZXMoc3RhcnRfcHJvY2Vzcy5pZCkpIj4KICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICBCcmVhayBUaW1lCiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1kYW5nZXIiPnt7c3RhcnRfcHJvY2Vzcy5icmVha19kZXRhaWxzLnRvdGFsX3RpbWV9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utd2FybmluZyBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJnZXRCcmVha3MocHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2VzcykiID5WaWV3PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyIgdi1pZj0ic3RhcnRfcHJvY2Vzcy5wcm9jZXNzZXMubGVuZ3RoPjAgJiYgKHN0YXJ0X3Byb2Nlc3MuaXNfc2hvdyB8fCBzdGFydF9wcm9jZXNzX3NlbGVjdGVkX2lkcy5pbmNsdWRlcyhzdGFydF9wcm9jZXNzLmlkKSkgJiYgKCFwcm9jZXNzX2RldGFpbC5pc19zb3J0aW5nICYmICFwcm9jZXNzX2RldGFpbC5pc19wb3dkZXJpbmcpIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgICAgICAgICAgPGIgY2xhc3M9Im14LTEiPlNoaWZ0cyAoe3tzdGFydF9wcm9jZXNzLnByb2Nlc3Nlcy5sZW5ndGh9fSk8L2I+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02IHRleHQtcmlnaHQiIHYtaWY9InN0YXJ0X3Byb2Nlc3MuY3VycmVudF9zdXBlcnZpc29yIT1lbXBsb3llZUlkIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLXByaW1hcnkgbXgtMSBwLTEgY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0ic3RhcnRQcm9jZXNzKCdiYXRjaCcscHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2VzcykiPkNvbnRpbnVlIEJhdGNoICgje3tzdGFydF9wcm9jZXNzLm1haW5fcHJvY2Vzc319L1Byb2Nlc3MpPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBwbC0yIHB5LTIgbXQtMSAiIHYtZm9yPSJwcm9jZXNzIGluIHN0YXJ0X3Byb2Nlc3MucHJvY2Vzc2VzIiB2LWlmPSJzdGFydF9wcm9jZXNzLmlzX3Nob3cgfHwgc3RhcnRfcHJvY2Vzc19zZWxlY3RlZF9pZHMuaW5jbHVkZXMoc3RhcnRfcHJvY2Vzcy5pZCkiPgogICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSIiPgogICAgICAgICAgICAgICAgICA8dHIgY2xhc3M9IiI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LWluZm8gY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0ic3RhcnRQcm9jZXNzKCdiYXRjaCcscHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2Vzcyxwcm9jZXNzLmlkLHRydWUpIj4KICAgICAgICAgICAgICAgICAgICAgICN7e3Byb2Nlc3Muc3VwZXJ2aXNvcl9kZXRhaWwubmFtZX19CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+CiAgICAgICAgICAgICAgICAgICAgICB7e3Byb2Nlc3Muc2hpZnR9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPnt7ZGF0ZUZvcm1hdGUocHJvY2Vzcy5jcmVhdGVkX29uKX19PC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIHBiLTEiIDpjbGFzcz0icHJvY2Vzcy5zdGF0dXM9PSdDb21wbGV0ZWQnPydiYWRnZS1zdWNjZXNzJzpwcm9jZXNzLnN0YXR1cz09J0RyYWZ0Jz8nYmFkZ2Utc2Vjb25kYXJ5Jzpwcm9jZXNzLnN0YXR1cz09J1N0YXJ0aW5nJz8nYmFkZ2Utc3VjY2Vzcyc6cHJvY2Vzcy5zdGF0dXM9PSdTdG9wJz8nYmFkZ2UtZGFuZ2VyJzonYmFkZ2Utd2FybmluZyciPnt7cHJvY2Vzcy5zdGF0dXN9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1saWdodCBteC0xIGN1cnNvci1wb2ludGVyIHBiLTEiIEBjbGljaz0icHJvY2Vzc0NvbChwcm9jZXNzKSI+PGI+e3twcm9jZXNzLmlzX3Nob3cgfHwgcHJvY2Vzc19zZWxlY3RlZF9pZHMuaW5jbHVkZXMocHJvY2Vzcy5pZCk/Jy0nOicrJ319PC9iPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iYm9yZGVyLXRvcCBtdC0xIG1yLTIiIHYtaWY9InByb2Nlc3MuaXNfc2hvdyB8fCBwcm9jZXNzX3NlbGVjdGVkX2lkcy5pbmNsdWRlcyhwcm9jZXNzLmlkKSI+CiAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iIiB2LWlmPSJwcm9jZXNzX2RldGFpbC5xY190ZXN0Ij4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtaW5mbyIgY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICBRQyBDaGVjawogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtc3VjY2VzcyIgdi1pZj0icHJvY2Vzcy5xY190ZXN0X2NvdW50PjAiPgogICAgICAgICAgICAgICAgICAgICAgICBRQyA8Yj57e3Byb2Nlc3MucWNfdGVzdF9jb3VudH19PC9iPnRpbWVze3tjaGVja011bHQocHJvY2Vzcy5xY190ZXN0X2NvdW50KX19IGNoZWNrZWQKICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LWRhbmdlciIgdi1lbHNlPgogICAgICAgICAgICAgICAgICAgICAgICBRQyBub3QgY2hlY2tlZAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS13YXJuaW5nIiB2LWlmPSJwcm9jZXNzLnFjX3Rlc3RfY291bnQ+MCI+CiAgICAgICAgICAgICAgICAgICAgICAgIFZpZXcKICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8dHIgdi1pZj0icHJvY2Vzc19kZXRhaWwuaXNfbWFjaGluZSI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49IjIiIHYtaWY9InByb2Nlc3NfZGV0YWlsLm5hbWUuaW5jbHVkZXMoJ1NwaXJhbCcpIj4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzcy5lbmRfdGltZT8nU3BpcmFsIFJ1bm5pbmcgVGltZSc6cHJvY2Vzcy5zdGFydF90aW1lPydTcGlyYWwgU3RhcnQgVGltZSc6J1NwaXJhbCBSdW5uaW5nIFRpbWUnfX0KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPSIyIiB2LWVsc2U+CiAgICAgICAgICAgICAgICAgICAgICB7e3Byb2Nlc3MuZW5kX3RpbWU/J01hY2hpbmUgUnVubmluZyBUaW1lJzpwcm9jZXNzLnN0YXJ0X3RpbWU/J01hY2hpbmUgU3RhcnQgVGltZSc6J01hY2hpbmUgUnVubmluZyBUaW1lJ319CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggOmNvbHNwYW49InByb2Nlc3MuZW5kX3RpbWU/JzInOicnIj4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzcy5lbmRfdGltZT90aW1lRm9ybWF0ZShwcm9jZXNzLnN0YXJ0X3RpbWUpKycgdG8gJyt0aW1lRm9ybWF0ZShwcm9jZXNzLmVuZF90aW1lKTpwcm9jZXNzLnN0YXJ0X3RpbWU/dGltZUZvcm1hdGUocHJvY2Vzcy5zdGFydF90aW1lKTonTm90IHN0YXJ0J319CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQiIHYtaWY9IiFwcm9jZXNzLmVuZF90aW1lIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1kYW5nZXIgY3Vyc29yLXBvaW50ZXIiIHYtaWY9InByb2Nlc3Muc3RhcnRfdGltZSIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ21hY2hpbmUnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MscHJvY2Vzcy5pZCkiID5FbmQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utc3VjY2VzcyBjdXJzb3ItcG9pbnRlciIgdi1lbHNlIEBjbGljaz0ic3RhcnRQcm9jZXNzKCdtYWNoaW5lJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQpIiA+U3RhcnQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9InByb2Nlc3NfZGV0YWlsLmxhYm91cnMiPgogICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPSIyIj4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzc19kZXRhaWwubGFib3Vyc319CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+CiAgICAgICAgICAgICAgICAgICAgICB7e3Byb2Nlc3MubGFib3VyX3dvcmtlcnM+MD9wcm9jZXNzLmxhYm91cl93b3JrZXJzKycgTGFib3VyJytjaGVja011bHQocHJvY2Vzcy5sYWJvdXJfd29ya2Vycyk6J05vIExhYm91cnMnfX0KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utd2FybmluZyBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ2VtcGxveWVlX3BhcnRpY2lwYXRlJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQsdHJ1ZSkiIHYtaWY9InByb2Nlc3MubGFib3VyX3dvcmtlcnMiPlZpZXc8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtcHJpbWFyeSBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ2VtcGxveWVlX3BhcnRpY2lwYXRlJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQpIiB2LWVsc2U+QWRkPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPSJwcm9jZXNzX2RldGFpbC5jb25zdW1hYmxlX2l0ZW1zLmxlbmd0aD4wICYmICFwcm9jZXNzX2RldGFpbC5oYXZlX2JhcnJlbCI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49IjIiPgogICAgICAgICAgICAgICAgICAgICAgQ29uc3VtYWJsZQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPgogICAgICAgICAgICAgICAgICAgICAge3twcm9jZXNzLmNvbnN1bWFibGVzX2NvdW50PjA/cHJvY2Vzcy5jb25zdW1hYmxlc19jb3VudCsnIGNvbnN1bWFibGUnK2NoZWNrTXVsdChwcm9jZXNzLmNvbnN1bWFibGVzX2NvdW50KTonTm8gY29uc3VtYWJsZXMnfX0KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utd2FybmluZyBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ2NvbnN1bWFibGVzJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQsdHJ1ZSkiIHYtaWY9InByb2Nlc3MuY29uc3VtYWJsZXNfY291bnQiPlZpZXc8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtcHJpbWFyeSBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ2NvbnN1bWFibGVzJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQpIiB2LWVsc2U+QWRkPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPSJwcm9jZXNzX2RldGFpbC5vdXRwdXRzLmxlbmd0aD4wICYmIHByb2Nlc3NfZGV0YWlsLmRpcmVjdF9wYWNraW5nIj4KICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICBQYWNraW5nICYgT3V0cHV0CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+CiAgICAgICAgICAgICAgICAgICAgICB7e3Byb2Nlc3MuZGlyZWN0X3BhY2tpbmdfY291bnQ+MD9wcm9jZXNzLmRpcmVjdF9wYWNraW5nX2NvdW50KycgcGFjaycrY2hlY2tNdWx0KHByb2Nlc3MuZGlyZWN0X3BhY2tpbmdfY291bnQpOidObyBwYWNrcyd9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS13YXJuaW5nIGN1cnNvci1wb2ludGVyIiBAY2xpY2s9InN0YXJ0UHJvY2VzcygnZGlyZWN0X3BhY2tpbmcnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MscHJvY2Vzcy5pZCx0cnVlKSIgdi1pZj0icHJvY2Vzcy5kaXJlY3RfcGFja2luZ19jb3VudCI+Vmlldzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1wcmltYXJ5IGN1cnNvci1wb2ludGVyIiBAY2xpY2s9InN0YXJ0UHJvY2VzcygnZGlyZWN0X3BhY2tpbmcnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MscHJvY2Vzcy5pZCkiIHYtZWxzZT5BZGQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyIHYtZWxzZS1pZj0icHJvY2Vzc19kZXRhaWwub3V0cHV0cy5sZW5ndGg+MCAmJiAhcHJvY2Vzc19kZXRhaWwuYXV0b19vdXRwdXQgJiYgIXByb2Nlc3NfZGV0YWlsLmhhdmVfYmFycmVsIj4KICAgICAgICAgICAgICAgICAgICA8dGggY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICBPdXRwdXQKICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzcy5wcm9jZXNzX291dHB1dHNfY291bnQ+MD9wcm9jZXNzLnByb2Nlc3Nfb3V0cHV0c19jb3VudCsnIG91dHB1dCcrY2hlY2tNdWx0KHByb2Nlc3MucHJvY2Vzc19vdXRwdXRzX2NvdW50KTonTm8gb3V0cHV0cyd9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS13YXJuaW5nIGN1cnNvci1wb2ludGVyIiBAY2xpY2s9InN0YXJ0UHJvY2Vzcygnb3V0cHV0Jyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQsdHJ1ZSkiIHYtaWY9InByb2Nlc3MucHJvY2Vzc19vdXRwdXRzX2NvdW50Ij5WaWV3PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLXByaW1hcnkgY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0ic3RhcnRQcm9jZXNzKCdvdXRwdXQnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MscHJvY2Vzcy5pZCkiIHYtZWxzZT5BZGQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9InByb2Nlc3NfZGV0YWlsLm91dHB1dHMubGVuZ3RoPjAgJiYgcHJvY2Vzc19kZXRhaWwuaW5kZW50X3BhY2tpbmciPgogICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPSIyIj4KICAgICAgICAgICAgICAgICAgICAgIEZpbmFsIFBhY2tpbmcKICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzcy5pbmRlbnRfcGFja2luZ19jb3VudD4wP3Byb2Nlc3MuaW5kZW50X3BhY2tpbmdfY291bnQrJyBtYXRlcmlhbCcrY2hlY2tNdWx0KHByb2Nlc3MuaW5kZW50X3BhY2tpbmdfY291bnQpOidObyBpbmRlbnQnfX0KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utd2FybmluZyBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ2luZGVudF9wYWNraW5nJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQsdHJ1ZSkiIHYtaWY9InByb2Nlc3MuaW5kZW50X3BhY2tpbmdfY291bnQiPlZpZXc8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtcHJpbWFyeSBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ2luZGVudF9wYWNraW5nJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQpIiB2LWVsc2U+QWRkPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPSJwcm9jZXNzX2RldGFpbC5oYXZlX2JhcnJlbCI+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbHNwYW49IjIiPgogICAgICAgICAgICAgICAgICAgICAgRmlsbCBCYXJyZWwKICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzcy5iYXJyZWxfc3RvY2tzX2NvdW50PjA/cHJvY2Vzcy5iYXJyZWxfc3RvY2tzX2NvdW50KycgYmFycmVsJytjaGVja011bHQocHJvY2Vzcy5iYXJyZWxfc3RvY2tzX2NvdW50KTonTm90IGZpbGxlZCd9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS13YXJuaW5nIGN1cnNvci1wb2ludGVyIiBAY2xpY2s9InN0YXJ0UHJvY2VzcygnYmFycmVsJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQsdHJ1ZSkiIHYtaWY9InByb2Nlc3MuYmFycmVsX3N0b2Nrc19jb3VudCI+Vmlldzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1wcmltYXJ5IGN1cnNvci1wb2ludGVyIiBAY2xpY2s9InN0YXJ0UHJvY2VzcygnYmFycmVsJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQpIiB2LWVsc2U+QWRkPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPSJwcm9jZXNzX2RldGFpbC5wYWNraW5nX2xhYm91cnMiPgogICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPSIyIj4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzc19kZXRhaWwucGFja2luZ19sYWJvdXJzfX0KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzcy5wYWNraW5nX3dvcmtlcnM+MD9wcm9jZXNzLnBhY2tpbmdfd29ya2VycysnIExhYm91cicrY2hlY2tNdWx0KHByb2Nlc3MucGFja2luZ193b3JrZXJzKTonTm8gTGFib3Vycyd9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS13YXJuaW5nIGN1cnNvci1wb2ludGVyIiBAY2xpY2s9InN0YXJ0UHJvY2VzcygncGFja2luZ19sYWJvdXJzJyxwcm9jZXNzX2RldGFpbCxzdGFydF9wcm9jZXNzLHByb2Nlc3MuaWQsdHJ1ZSkiIHYtaWY9InByb2Nlc3MucGFja2luZ193b3JrZXJzPjAiPlZpZXc8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtcHJpbWFyeSBjdXJzb3ItcG9pbnRlciIgQGNsaWNrPSJzdGFydFByb2Nlc3MoJ3BhY2tpbmdfbGFib3VycycscHJvY2Vzc19kZXRhaWwsc3RhcnRfcHJvY2Vzcyxwcm9jZXNzLmlkKSIgdi1lbHNlPkFkZDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICA8dHIgdi1pZj0icHJvY2Vzc19kZXRhaWwudW5sb2FkaW5nX2xhYm91cnMiPgogICAgICAgICAgICAgICAgICAgIDx0aCBjb2xzcGFuPSIyIj4KICAgICAgICAgICAgICAgICAgICAgIHt7cHJvY2Vzc19kZXRhaWwudW5sb2FkaW5nX2xhYm91cnN9fQogICAgICAgICAgICAgICAgICAgIDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPgogICAgICAgICAgICAgICAgICAgICAge3twcm9jZXNzLnVubG9hZGluZ193b3JrZXJzPjA/cHJvY2Vzcy51bmxvYWRpbmdfd29ya2VycysnIExhYm91cicrY2hlY2tNdWx0KHByb2Nlc3MudW5sb2FkaW5nX3dvcmtlcnMpOidObyBMYWJvdXJzJ319CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRleHQtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLXdhcm5pbmcgY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0ic3RhcnRQcm9jZXNzKCd1bmxvYWRpbmcnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MscHJvY2Vzcy5pZCx0cnVlKSIgdi1pZj0icHJvY2Vzcy51bmxvYWRpbmdfd29ya2Vycz4wIj5WaWV3PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJhZGdlIGJhZGdlLXByaW1hcnkgY3Vyc29yLXBvaW50ZXIiIEBjbGljaz0ic3RhcnRQcm9jZXNzKCd1bmxvYWRpbmcnLHByb2Nlc3NfZGV0YWlsLHN0YXJ0X3Byb2Nlc3MscHJvY2Vzcy5pZCkiIHYtZWxzZT5BZGQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8aHIgY2xhc3M9Im15LTIiPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+IDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAKICAgIDwvZGl2PgogIDwvZGl2PgogIDxkaXY+CiAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjpmaXhlZDt0b3A6NDUlO3JpZ2h0OjFweDtjdXJzb3I6cG9pbnRlciIgQG1vdXNlZG93bj0ic2Nyb2xsX2NsaWNrPXRydWU7c2Nyb2xsUmlnaHQoKSIgIEBtb3VzZXVwPSJzY3JvbGxfY2xpY2s9ZmFsc2UiPgogICAgICA8aW1nIHNyYz0iL2ltZy9hcnJvdy1yaWdodC5wbmciIHN0eWxlPSJ3aWR0aDoyMHB4O2FzcGVjdC1yYXRpbzogMSAvIDIuNTsiIHYtaWY9InNjcm9sbF9wb3MucmlnaHQiPgogICAgPC9kaXY+CiAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjpmaXhlZDt0b3A6NDUlO2xlZnQ6MTA1cHg7Y3Vyc29yOnBvaW50ZXIiIEBtb3VzZWRvd249InNjcm9sbF9jbGljaz10cnVlO3Njcm9sbExlZnQoKSIgIEBtb3VzZXVwPSJzY3JvbGxfY2xpY2s9ZmFsc2UiPgogICAgICA8aW1nIHNyYz0iL2ltZy9hcnJvdy1sZWZ0LnBuZyIgc3R5bGU9IndpZHRoOjIwcHg7YXNwZWN0LXJhdGlvOiAxIC8gMi41OyIgdi1pZj0ic2Nyb2xsX3Bvcy5sZWZ0Ij4KICAgIDwvZGl2PgogIDwvZGl2PgogIDxkaXY+CiAgICA8Yi1tb2RhbCBpZD0ibGlzdC1tYWluLXByb2Nlc3MiIGhpZGUtaGVhZGVyICBoaWRlLWZvb3RlciA6bm8tY2xvc2Utb24tYmFja2Ryb3A9InRydWUiPgogICAgICA8ZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBtYi0yIGFsaWduLWl0ZW1zLWNlbnRlciAganVzdGlmeS1jb250ZW50LWJldHdlZW4iPgogICAgICAgICAgPHNsb3QgbmFtZT0iaGVhZGVyIj4KICAgICAgICAgICAgIDxoNSBjbGFzcz0ibWItMCI+PHNwYW4gY2xhc3M9InRleHQtc3VjY2VzcyI+e3ttYWluX3Byb2R1Y3Rpb25fcHJvY2Vzcy5uYW1lfX08L3NwYW4+PC9oNT4KICAgICAgICAgIDwvc2xvdD4KICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCI+CiAgICAgICAgICAgIDxiLWJ1dHRvbiB0eXBlPSJidXR0b24iIHZhcmlhbnQ9ImRhbmdlciIgY2xhc3M9IiBweC0zIHB5LTEgIGQtc20tYmxvY2sgbXgtMSIgQGNsaWNrPSIkYnZNb2RhbC5oaWRlKCdsaXN0LW1haW4tcHJvY2VzcycpIj5DbG9zZTwvYi1idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSIgbXktMyBib3JkZXItdG9wIj48L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxiLXJvdyBjbGFzcz0ibWFpbi1zY3JvbGwiPgogICAgICAgIDxiLWNvbCBsZz0iMTIiIHhsPSIxMiI+CiAgICAgICAgICA8Yi1jYXJkIGNsYXNzPSJtdC0yIiB2LWZvcj0ibWFpbl9wcm9kdWN0aW9uX3Byb2NlcyBpbiBtYWluX3Byb2R1Y3Rpb25fcHJvY2Vzcy5wcm9kdWN0aW9uX3Byb2Nlc3NlcyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTIgYWxpZ24tc2VsZi1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvY3JtLnBuZyIgPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC03IGFsaWduLXNlbGYtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxiPnt7bWFpbl9wcm9kdWN0aW9uX3Byb2Nlcy5uYW1lfX0gPC9iPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9Im0tMCI+IHByb2R1Y3RzPC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0zIGFsaWduLXNlbGYtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBAY2xpY2s9IiRyb3V0ZXIucHVzaCgnL2FwcC9wcm9kdWN0aW9uL3Byb2Nlc3MvcHJvY2Vzc2luZy9saXN0LycrbWFpbl9wcm9kdWN0aW9uX3Byb2Nlcy5pZCk7cHJvZHVjdGlvbl9wcm9jZXNzPW1haW5fcHJvZHVjdGlvbl9wcm9jZXM7Z2V0UHJvZHVjdGlvblByb2Nlc3MoKSIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBweS0xIGJ0bi1zbSB3LTEwMCI+CiAgICAgICAgICAgICAgICAgICAgVmlldwogICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYi1jYXJkPgogICAgICAgIDwvYi1jb2w+CiAgICAgIDwvYi1yb3c+CiAgICA8L2ItbW9kYWw+CgogICAgPGItbW9kYWwgaWQ9Imxpc3QtcHJvY2VzcyIgaGlkZS1oZWFkZXIgIGhpZGUtZm9vdGVyIDpuby1jbG9zZS1vbi1iYWNrZHJvcD0idHJ1ZSI+CiAgICAgIDxkaXY+CiAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBtYi0yIGFsaWduLWl0ZW1zLWNlbnRlciAganVzdGlmeS1jb250ZW50LWJldHdlZW4iPgogICAgICAgICAgICA8c2xvdCBuYW1lPSJoZWFkZXIiPgogICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTAiPjxzcGFuIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPnt7cHJvZHVjdGlvbl9wcm9jZXNzLm5hbWV9fTwvc3Bhbj4gL3t7Y3VycmVudF9wcm9jZXNzX2RldGFpbC5uYW1lfX08L2g1PgogICAgICAgICAgICA8L3Nsb3Q+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCI+CiAgICAgICAgICAgICAgPGItYnV0dG9uIHR5cGU9ImJ1dHRvbiIgdmFyaWFudD0ic3VjY2VzcyIgY2xhc3M9IiBweC0zIHB5LTEgIGQtc20tYmxvY2sgbXgtMSIgQGNsaWNrPSJjcmVhdGVQcm9jZXNzKCkiPlN0YXJ0IFByb2Nlc3M8L2ItYnV0dG9uPgogICAgICAgICAgICAgIDxiLWJ1dHRvbiB0eXBlPSJidXR0b24iIHZhcmlhbnQ9ImRhbmdlciIgY2xhc3M9IiBweC0zIHB5LTEgIGQtc20tYmxvY2sgbXgtMSIgQGNsaWNrPSJsaXN0X3Byb2Nlc3M9dHJ1ZTskYnZNb2RhbC5oaWRlKCdsaXN0LXByb2Nlc3MnKSI+Q2xvc2U8L2ItYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iIG15LTMgYm9yZGVyLXRvcCI+PC9kaXY+CiAgICAgIDwvZGl2PgogICAgICA8Yi1yb3cgY2xhc3M9Im1haW4tc2Nyb2xsIj4KICAgICAgICA8Yi1jb2wgbGc9IjEyIiB4bD0iMTIiIHYtaWY9Imxpc3RfcHJvY2VzcyI+CiAgICAgICAgICA8Yi1jYXJkIGNsYXNzPSJtdC0yIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCBweC0yIHB5LTEgbXgtMCBtdC0yIiB2LWZvcj0icHJvY2Vzc19kZXRhaWwgaW4gcHJvY2Vzc19kZXRhaWxzIj4KICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9IiI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aD57e3Byb2Nlc3NfZGV0YWlsLm5hbWV9fTwvdGg+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCBwci0yIj4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyBweC0yIHB5LTEgYnRuLXNtICBteS0yICIgQGNsaWNrPSJzZWxlY3RQcm9jZXNzRGV0YWlsKHByb2Nlc3NfZGV0YWlsKSI+U3RhcnQ8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2ItY2FyZD4KICAgICAgICA8L2ItY29sPgogICAgICAgIDxiLWNvbCBsZz0iMTIiIHhsPSIxMiIgY2xhc3M9IiIgdi1lbHNlPgogICAgICAgICAgPGZvcm0gcmVmPSJkYXRhRm9ybSIgQHN1Ym1pdC5wcmV2ZW50PSJkYXRhRm9ybSgpIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtMiBteC0yIHB0LTAiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9fdGhyZWFkX3NlYXJjaF9pbnB1dCIgdi1zaG93PSJmYWxzZSI+CiAgICAgICAgICAgICAgICA8c3Bhbj5XYXJlSG91c2UgIDogPC9zcGFuPgogICAgICAgICAgICAgICAgPHNlbGVjdCBjbGFzcz0idWktYXV0b2NvbXBsZXRlLWlucHV0IHctMTAwIG14LTEiIG5hbWU9IndhcmVob3VzZSIgdi1tb2RlbD0id2FyZWhvdXNlX2lkIiBAY2hhbmdlPSJzdG9ja1BhcmFtZXRlcigpIiBkaXNhYmxlZD4KICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iIiBkaXNhYmxlZD5TZWxlY3QgV2FyZUhvdXNlPC9vcHRpb24+CiAgICAgICAgICAgICAgICAgIDxvcHRpb24gdi1mb3I9IndhcmVob3VzZSBpbiB3YXJlaG91c2VzIiA6dmFsdWU9IndhcmVob3VzZS5pZCI+e3t3YXJlaG91c2UubmFtZX19PC9vcHRpb24+CiAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IndhcmVob3VzZSIgdi1tb2RlbD0id2FyZWhvdXNlX2lkIiByZWFkb25seSAvPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InByb2Nlc3NfZGV0YWlsIiA6dmFsdWU9ImN1cnJlbnRfcHJvY2Vzc19kZXRhaWwuaWQiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InByb2R1Y3Rpb25fcHJvY2VzcyIgOnZhbHVlPSJwcm9kdWN0aW9uX3Byb2Nlc3MuaWQiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InN0YXR1cyIgdmFsdWU9IlJ1bm5pbmciPgogICAgICAgICAgICAgIDxkaXYgdi1pZj0iY3VycmVudF9wcm9jZXNzX2RldGFpbC5iYXJyZWxfaW5wdXQiPgogICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSIgdi1pZj0iY3VycmVudF9wcm9jZXNzX2RldGFpbC5pc19zb3J0aW5nIj4KICAgICAgICAgICAgICAgICAgPHRib2R5IGNsYXNzPSJvdXRwdXQtcm93cyIgdi1mb3I9IihiYXJyZWwsYmtleSkgaW4gYmFycmVsX3N0b2NrcyIgdi1pZj0iYmFycmVsLmlzX2FkZGVkIj4KICAgICAgICAgICAgICAgICAgICA8dHIgdi1mb3I9Iihwcm9kdWN0LHBrZXkpIGluIGJhcnJlbC5wcm9kdWN0cyI+CiAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtcHJpbWFyeSI+PGI+e3tiYXJyZWwuY29kZX19IHt7YmFycmVsLm5hbWV9fTwvYj48L3RkPgogICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPkF2YWlsYWJsZSBRdWFudGl0eTogPGI+e3twcm9kdWN0LnN0b2NrX3F1YW50aXR5fX1LRzwvYj48L3RkPgogICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJkLWZsZXgiIDpzdHlsZT0icHJvZHVjdC5pc19hZGRlZD8nb3BhY2l0eToxJzonb3BhY2l0eTowLjUnIj4KICAgICAgICAgICAgICAgICAgICAgICAgVGFrZW4gUVRZKEtHKTogPGlucHV0IHR5cGU9Im51bWJlciIgcGxhY2Vob2xkZXI9IlF1YW50aXR5IiBjbGFzcz0idWktYXV0b2NvbXBsZXRlLWlucHV0IHctMTAwIiA6bWF4PSJwcm9kdWN0LnN0b2NrX3F1YW50aXR5IiB2LW1vZGVsPSJwcm9kdWN0LnF1YW50aXR5IiA6bmFtZT0iJ3F1YW50aXR5Jytwcm9kdWN0LmlkKydiYXJyZWwnK2JhcnJlbC5pZCIgOmRpc2FibGVkPSIhcHJvZHVjdC5pc19hZGRlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIDpuYW1lPSInaXNfYWRkZWQnK3Byb2R1Y3QuaWQrJ2JhcnJlbCcrYmFycmVsLmlkIiA6dmFsdWU9InByb2R1Y3QuaXNfYWRkZWQ/J3llcyc6J25vJyI+CiAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tc20gcHgtMyBweS0xIG1sLTQiIEBjbGljaz0iYWRkUHJvZHVjdChwcm9kdWN0KSIgdi1pZj0iIXByb2R1Y3QuaXNfYWRkZWQiPkFkZDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGFuZ2VyIGJ0bi1zbSBweC0zIHB5LTEgbWwtNCIgQGNsaWNrPSJyZW1vdmVQcm9kdWN0KHByb2R1Y3QpIiB2LWVsc2U+UmVtb3ZlPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC0yIHB0LTEiIHYtZWxzZT4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im91dHB1dC1yb3dzIHRleHQtcHJpbWFyeSBwLTEgbXItMSIgdi1mb3I9IihiYXJyZWwsYmtleSkgaW4gYmFycmVsX3N0b2NrcyIgdi1pZj0iYmFycmVsLmlzX2FkZGVkIj4KICAgICAgICAgICAgICAgICAgICB7e2JhcnJlbC5jb2RlfX0ge3tiYXJyZWwubmFtZX19CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IHBiLTMgbXgtMCI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiBweC0yIG1iLTMiPjxiPiBTZWxlY3QgYSBCYXJyZWwgPC9iPjwvZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMiBweC0yIiB2LWZvcj0iYmFycmVsIGluIGJhcnJlbF9zdG9ja3MiIEBjbGljaz0iYmFycmVsLmlzX2FkZGVkPSFiYXJyZWwuaXNfYWRkZWQiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJhcnJlbF9vdXQiIDpjbGFzcz0iYmFycmVsLmlzX2FkZGVkPydzZWxlY3RlZCc6JyciIHN0eWxlPSJoZWlnaHQ6MTAwcHgiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmFycmVsX2luIiA6c3R5bGU9IidoZWlnaHQ6JysoKDEwMC0oKDEwMC9iYXJyZWwubWF4X3F1YW50aXR5KSowKSktKDEwMC9iYXJyZWwubWF4X3F1YW50aXR5KSpiYXJyZWwuYXZhaWxhYmxlX3F1YW50aXR5KSsnJSciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkZXRhaWxzIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXByaW1hcnkiPnt7YmFycmVsLmNvZGV9fTwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+PHNtYWxsPlN0b2NrOiA8Yj57e2JhcnJlbC5hdmFpbGFibGVfcXVhbnRpdHl9fUtHPC9iPjwvc21hbGw+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWZvcj0iKHByb2R1Y3QscGtleSkgaW4gYmFycmVsLnByb2R1Y3RzIiB2LWlmPSJwa2V5PT0wIj4jTG90L3t7cHJvZHVjdC5sb3R9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmFycmVsX3BlcHBlciIgOnN0eWxlPSInaGVpZ2h0OicrKCgxMDAvYmFycmVsLm1heF9xdWFudGl0eSkqMCkrJyUnIj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIHRleHQtaW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZm9yPSIocHJvZHVjdCxwa2V5KSBpbiBiYXJyZWwucHJvZHVjdHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+PHNwYW4gdi1pZj0icGtleSE9MCI+LCA8L3NwYW4+e3twcm9kdWN0LnByb2R1Y3R9fSA8c3BhbiBjbGFzcz0idGV4dC1zdWNjZXNzIj57e3Byb2R1Y3Quc3RvY2tfcXVhbnRpdHl9fUtHPC9zcGFuPjwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InRhYmxlIG10LTIgdy0xMDAiIHYtZWxzZT4KICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0ib3V0cHV0LXJvd3MiPgogICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoPiM8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD5JbnB1dDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPkxvdDwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoIHYtc2hvdz0iIWN1cnJlbnRfcHJvY2Vzc19kZXRhaWwuaXNfZHJ5ZXIiPkF2YWlsYWJsZSBRdHkoS0cpPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGggdi1zaG93PSIhY3VycmVudF9wcm9jZXNzX2RldGFpbC5pc19kcnllciI+UXVhbnRpdHkgVGFrZW4oS0cpPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+QWN0aW9uPC90aD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICA8dGJvZHkgY2xhc3M9Im91dHB1dC1yb3dzIiB2LWZvcj0iKHN0b2NrX3BhcmFtZXRlcixrZXkpIGluIHN0b2NrX3BhcmFtZXRlcnMiPgogICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPnt7a2V5KzF9fSk8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZCA6c3R5bGU9InN0b2NrX3BhcmFtZXRlci5pc19hZGRlZD8nb3BhY2l0eToxJzonb3BhY2l0eTowLjUnIj4KICAgICAgICAgICAgICAgICAgICAgIHt7c3RvY2tfcGFyYW1ldGVyLnBhcmFtZXRlcl9kZXRhaWwubmFtZX19IDxzdXAgdi1pZj0ic3RvY2tfcGFyYW1ldGVyLmlzX29yZ2FuaWMiPjxzcGFuIGNsYXNzPSJiYWRnZSBiYWRnZS1zdWNjZXNzIj5PUkc8L3NwYW4+PC9zdXA+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQgOnN0eWxlPSJzdG9ja19wYXJhbWV0ZXIuaXNfYWRkZWQ/J29wYWNpdHk6MSc6J29wYWNpdHk6MC41JyI+CiAgICAgICAgICAgICAgICAgICAgICAje3tzdG9ja19wYXJhbWV0ZXIubG90fX0vTG90CiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiA6bmFtZT0iJ2xvdCcrc3RvY2tfcGFyYW1ldGVyLmlkIiA6dmFsdWU9InN0b2NrX3BhcmFtZXRlci5sb3QiPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPCEtLSA8dGQgOnN0eWxlPSJzdG9ja19wYXJhbWV0ZXIuaXNfYWRkZWQ/J29wYWNpdHk6MSc6J29wYWNpdHk6MC41JyI+CiAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGNsYXNzPSJ1aS1hdXRvY29tcGxldGUtaW5wdXQgdy0xMDAgbXgtMSIgOm5hbWU9IidpbmRlbnQnK3N0b2NrX3BhcmFtZXRlci5pZCIgdi1tb2RlbD0ic3RvY2tfcGFyYW1ldGVyLmluZGVudCIgOmRpc2FibGVkPSIhc3RvY2tfcGFyYW1ldGVyLmlzX2FkZGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHYtZm9yPSJpbmRlbnQgaW4gaW5kZW50cyIgOnZhbHVlPSJpbmRlbnQuaWQiPiN7e2luZGVudC5pZH19L0luZGVudDwvb3B0aW9uPgogICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4gLS0+CiAgICAgICAgICAgICAgICAgICAgPHRkIDpzdHlsZT0ic3RvY2tfcGFyYW1ldGVyLmlzX2FkZGVkPydvcGFjaXR5OjEnOidvcGFjaXR5OjAuNSciIHYtc2hvdz0iIWN1cnJlbnRfcHJvY2Vzc19kZXRhaWwuaXNfZHJ5ZXIiPgogICAgICAgICAgICAgICAgICAgICAge3tzdG9ja19wYXJhbWV0ZXIuc3RvY2tfcXVhbnRpdHl9fQogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkIDpzdHlsZT0ic3RvY2tfcGFyYW1ldGVyLmlzX2FkZGVkPydvcGFjaXR5OjEnOidvcGFjaXR5OjAuNSciIHYtc2hvdz0iIWN1cnJlbnRfcHJvY2Vzc19kZXRhaWwuaXNfZHJ5ZXIiPgogICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgY2xhc3M9InVpLWF1dG9jb21wbGV0ZS1pbnB1dCB3LTEwMCIgOm1heD0ic3RvY2tfcGFyYW1ldGVyLnN0b2NrX3F1YW50aXR5IiB2LW1vZGVsPSJzdG9ja19wYXJhbWV0ZXIucXVhbnRpdHkiIDpuYW1lPSIncXVhbnRpdHknK3N0b2NrX3BhcmFtZXRlci5pZCIgOmRpc2FibGVkPSIhc3RvY2tfcGFyYW1ldGVyLmlzX2FkZGVkIj4KICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIDpuYW1lPSInaXNfYWRkZWQnK3N0b2NrX3BhcmFtZXRlci5pZCsnbG90JyIgOnZhbHVlPSJzdG9ja19wYXJhbWV0ZXIuaXNfYWRkZWQ/J3llcyc6J25vJyI+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBidG4tc20gcHgtMyBweS0xIG1sLTQiIEBjbGljaz0iYWRkUHJvZHVjdChzdG9ja19wYXJhbWV0ZXIpIiB2LWlmPSIhc3RvY2tfcGFyYW1ldGVyLmlzX2FkZGVkIj5BZGQ8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kYW5nZXIgYnRuLXNtIHB4LTMgcHktMSBtbC00IiBAY2xpY2s9InJlbW92ZVByb2R1Y3Qoc3RvY2tfcGFyYW1ldGVyKSIgdi1lbHNlPlJlbW92ZTwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0ciB2LWlmPSJzdG9ja19wYXJhbWV0ZXIuaXNfYWRkZWQgJiYgIHN0b2NrX3BhcmFtZXRlci5iYWdzLmxlbmd0aD4wIj4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InB4LTMiIDpjb2xzcGFuPSJjdXJyZW50X3Byb2Nlc3NfZGV0YWlsLmlzX2RyeWVyPzQ6NiI+CiAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InctMTAwIHRhYmxlLWRhbmdlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImJvcmRlci10b3AtMCI+IzwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJib3JkZXItdG9wLTAiPk1hdGVyaWFsPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImJvcmRlci10b3AtMCI+U3BlY3M8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iYm9yZGVyLXRvcC0wIj5Mb3Q8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iYm9yZGVyLXRvcC0wIj5TdGF0dXM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iYm9yZGVyLXRvcC0wIj5QYWNraW5nIG1hdGVyaWFsIHJlY292ZXJ5IChudW1iZXIpPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHYtZm9yPSIocGFja2luZ19tYXRlcmlhbCxwazIpIGluIHN0b2NrX3BhcmFtZXRlci5iYWdzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e3BrMisxfX0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e3BhY2tpbmdfbWF0ZXJpYWwubWF0ZXJpYWxfZGV0YWlsLm5hbWV9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgOm5hbWU9IidwYWNraW5nX21hdGVyaWFsJytwYWNraW5nX21hdGVyaWFsLmlkKydwYXJhbWV0ZXInK3N0b2NrX3BhcmFtZXRlci5pZCIgOnZhbHVlPSJwYWNraW5nX21hdGVyaWFsLmlkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCB2LWZvcj0ic3BlY2lmaWNhdGlvbiBpbiBwYWNraW5nX21hdGVyaWFsLnNwZWNpZmljYXRpb25zIiB2LWlmPSJzcGVjaWZpY2F0aW9uLm1hdGVyaWFsX2lkcy5pbmNsdWRlcyhwYWNraW5nX21hdGVyaWFsLm1hdGVyaWFsX2RldGFpbC5pZCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YiBjbGFzcz0idGV4dC1wcmltYXJ5Ij4ge3tzcGVjaWZpY2F0aW9uLm5hbWV9fTwvYj46e3tzcGVjaWZpY2F0aW9uLnZhbHVlfX0sIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICNMb3R7e3BhY2tpbmdfbWF0ZXJpYWwucGFja2luZ19tYXRlcmlhbH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YiBjbGFzcz0idGV4dC1wcmltYXJ5Ij57e3BhY2tpbmdfbWF0ZXJpYWwuc3RhdHVzfX08L2I+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBwbGFjZWhvbGRlcj0iTnVtYmVyIG9mIEJhZ3MiIGNsYXNzPSJ1aS1hdXRvY29tcGxldGUtaW5wdXQgdy0xMDAiIHZhbHVlPSIwIiA6bmFtZT0iJ251bWJlcl9vZl9iYWdzJytwYWNraW5nX21hdGVyaWFsLmlkKydwYXJhbWV0ZXInK3N0b2NrX3BhcmFtZXRlci5pZCIgOm1heD0icGFja2luZ19tYXRlcmlhbC5xdWFudGl0eSIgbWluPSIwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZm9ybT4KICAgICAgICA8L2ItY29sPgogICAgICA8L2Itcm93PgogICAgPC9iLW1vZGFsPgoKICAgIDxiLW1vZGFsIGlkPSJicmVhay1saXN0IiBoaWRlLWhlYWRlciAgaGlkZS1mb290ZXIgOm5vLWNsb3NlLW9uLWJhY2tkcm9wPSJ0cnVlIj4KICAgICAgPGRpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggbWItMiBhbGlnbi1pdGVtcy1jZW50ZXIgIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIj4KICAgICAgICAgIDxzbG90IG5hbWU9ImhlYWRlciI+CiAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTAiPjxzcGFuIGNsYXNzPSJ0ZXh0LXN1Y2Nlc3MiPnt7Y3VycmVudF9wcm9jZXNzX2RldGFpbC5uYW1lfX08L3NwYW4+IC9CcmVha3M8L2g1PgogICAgICAgICAgPC9zbG90PgogICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IiB2LWlmPSJsaXN0X3Byb2Nlc3MiPgogICAgICAgICAgICA8Yi1idXR0b24gdHlwZT0iYnV0dG9uIiB2YXJpYW50PSJkYW5nZXIiIGNsYXNzPSIgcHgtMyBweS0xICBkLXNtLWJsb2NrIG14LTEiIEBjbGljaz0iJGJ2TW9kYWwuaGlkZSgnYnJlYWstbGlzdCcpIj5DbG9zZTwvYi1idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSIgbXktMyBib3JkZXItdG9wIj48L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxiLXJvdyBjbGFzcz0ibWFpbi1zY3JvbGwiPgogICAgICAgIDxiLWNvbCBsZz0iMTIiIHhsPSIxMiI+CiAgICAgICAgICA8Yi1jYXJkIGNsYXNzPSJtdC0yIj4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1zdHJpcGVkIj4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aD5ObzwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5TdGFydCBUaW1lPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPkVuZCBUaW1lPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPlRvdGFsIFRpbWU8L3RoPgogICAgICAgICAgICAgICAgICA8dGg+VHlwZTwvdGg+CiAgICAgICAgICAgICAgICAgIDx0aD5SZWFzb248L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0ciB2LWZvcj0iKGJyZWFrX3RpbWUsYmtleSkgaW4gYnJlYWtfdGltZXMiPgogICAgICAgICAgICAgICAgICA8dGQ+e3tia2V5KzF9fTwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD48c21hbGw+e3tkYXRlRm9ybWF0ZShicmVha190aW1lLnN0YXJ0X2RhdGUpfX08L3NtYWxsPnt7dGltZUZvcm1hdGUoYnJlYWtfdGltZS5zdGFydF90aW1lKX19PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPjxzbWFsbD57e2RhdGVGb3JtYXRlKGJyZWFrX3RpbWUuZW5kX2RhdGUpfX08L3NtYWxsPnt7dGltZUZvcm1hdGUoYnJlYWtfdGltZS5lbmRfdGltZSl9fTwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD57e2JyZWFrX3RpbWUudG90YWxfdGltZX19PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPnt7YnJlYWtfdGltZS5icmVha190aW1lfX08L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+e3ticmVha190aW1lLnJlYXNvbn19PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgIDwvYi1jYXJkPgogICAgICAgIDwvYi1jb2w+CiAgICAgIDwvYi1yb3c+CiAgICA8L2ItbW9kYWw+CgogICAgPGItbW9kYWwgaWQ9InN0YXJ0LXByb2Nlc3MiIGhpZGUtaGVhZGVyICBoaWRlLWZvb3RlciA6bm8tY2xvc2Utb24tYmFja2Ryb3A9InRydWUiPgogICAgICA8ZGl2PgogICAgICAgIDxQcm9jZXNzaW5nRm9ybSBAY2xvc2VQb3B1cD0iY2xvc2VQb3B1cCIgOmFjdGlvbj0iYWN0aW9uIiA6cHJvY2Vzc19kZXRhaWxfaWQ9ImN1cnJlbnRfcHJvY2Vzc19kZXRhaWwuaWQiIDpzdGFydF9wcm9jZXNzX2lkPSJzdGFydF9wcm9jZXNzX2lkIiB2LWlmPSJsb2FkX3Byb2Nlc3NpbmdfZm9ybSIgOnByb2Nlc3NpbmdfaWQ9InByb2Nlc3NpbmdfaWQiIDppc192aWV3PSJpc192aWV3Ij48L1Byb2Nlc3NpbmdGb3JtPgogICAgICA8L2Rpdj4KICAgIDwvYi1tb2RhbD4KCiAgICA8Yi1tb2RhbCBpZD0icGFja2luZy1wcm9jZXNzIiBoaWRlLWhlYWRlciAgaGlkZS1mb290ZXIgOm5vLWNsb3NlLW9uLWJhY2tkcm9wPSJ0cnVlIj4KICAgICAgPGRpdj4KICAgICAgICA8UGFja2luZ0Zvcm0gQGNsb3NlUG9wdXA9ImNsb3NlUG9wdXAiIDphY3Rpb249ImFjdGlvbiIgOnByb2Nlc3NfZGV0YWlsX2lkPSJjdXJyZW50X3Byb2Nlc3NfZGV0YWlsLmlkIiA6c3RhcnRfcHJvY2Vzc19pZD0ic3RhcnRfcHJvY2Vzc19pZCIgdi1pZj0ibG9hZF9wcm9jZXNzaW5nX2Zvcm0iIDpwcm9jZXNzaW5nX2lkPSJwcm9jZXNzaW5nX2lkIiA6aXNfdmlldz0iaXNfdmlldyI+PC9QYWNraW5nRm9ybT4KICAgICAgPC9kaXY+CiAgICA8L2ItbW9kYWw+CgogICAgPGItbW9kYWwgaWQ9ImJyZWFrLWRvd24iIGhpZGUtaGVhZGVyICBoaWRlLWZvb3RlciA6bm8tY2xvc2Utb24tYmFja2Ryb3A9InRydWUiPgogICAgICA8ZGl2PgogICAgICAgIDxCcmVha0Rvd25Gb3JtIEBjbG9zZUJyZWFrUG9wdXA9ImNsb3NlQnJlYWtQb3B1cCIgOnByb2Nlc3NfZGV0YWlsX2lkPSJjdXJyZW50X3Byb2Nlc3NfZGV0YWlsLmlkIiB2LWlmPSJsb2FkX2JyZWFrX2Zvcm0iIDpwcm9jZXNzaW5nX2lkPSJwcm9jZXNzaW5nX2lkIj48L0JyZWFrRG93bkZvcm0+CiAgICAgIDwvZGl2PgogICAgPC9iLW1vZGFsPgogIDwvZGl2Pgo8L2Rpdj4K"},null]}