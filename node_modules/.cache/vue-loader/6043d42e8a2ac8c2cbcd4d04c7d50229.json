{"remainingRequest":"E:\\vue_projects\\social media manager\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\social media manager\\src\\components\\calen.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\vue_projects\\social media manager\\src\\components\\calen.vue","mtime":1614698250000},{"path":"E:\\vue_projects\\social media manager\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\social media manager\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\vue_projects\\social media manager\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\vue_projects\\social media manager\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\social media manager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\social media manager\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KDQpib2R5LCBodG1sLCAjYXBwLCAjZGF5c3BhbiB7DQogIGZvbnQtZmFtaWx5OiBSb2JvdG8sIHNhbnMtc2VyaWYgIWltcG9ydGFudDsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMTAwJTsNCn0NCg0KLnYtYnRuLS1mbGF0LA0KLnYtdGV4dC1maWVsZC0tc29sbyAudi1pbnB1dF9fc2xvdCB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjUgIWltcG9ydGFudDsNCiAgbWFyZ2luLWJvdHRvbTogOHB4ICFpbXBvcnRhbnQ7DQp9DQoNCg=="},{"version":3,"sources":["calen.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6UA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"calen.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <v-app id=\"dayspan\" v-cloak>\r\n\r\n    <ds-calendar-app ref=\"app\"\r\n      :calendar=\"calendar\"\r\n      :read-only=\"readOnly\"\r\n      @change=\"saveState\">\r\n\r\n      <template slot=\"title\">\r\n        DaySpan\r\n      </template>\r\n\r\n      <template slot=\"menuRight\">\r\n        <v-btn icon large href=\"https://github.com/ClickerMonkey/dayspan-vuetify\" target=\"_blank\">\r\n          <v-avatar size=\"32px\" tile>\r\n            <img src=\"https://simpleicons.org/icons/github.svg\" alt=\"Github\">\r\n          </v-avatar>\r\n        </v-btn>\r\n      </template>\r\n\r\n      <template slot=\"eventPopover\" slot-scope=\"slotData\">\r\n         <ds-calendar-event-popover\r\n          v-bind=\"slotData\"\r\n          :read-only=\"readOnly\"\r\n          @finish=\"saveState\"\r\n        ></ds-calendar-event-popover>\r\n      </template>\r\n\r\n      <template slot=\"eventCreatePopover\" slot-scope=\"{placeholder, calendar}\">\r\n        <ds-calendar-event-create-popover\r\n          :calendar-event=\"placeholder\"\r\n          :calendar=\"calendar\"\r\n          :close=\"$refs.app.$refs.calendar.clearPlaceholder\"\r\n          @create-edit=\"$refs.app.editPlaceholder\"\r\n          @create-popover-closed=\"saveState\"\r\n        ></ds-calendar-event-create-popover>\r\n      </template>\r\n\r\n      <template slot=\"eventTimeTitle\" slot-scope=\"{calendarEvent, details}\">\r\n        <div>\r\n          <v-icon class=\"ds-ev-icon\"\r\n            v-if=\"details.icon\"\r\n            size=\"14\"\r\n            :style=\"{color: details.forecolor}\">\r\n            {{ details.icon }}\r\n          </v-icon>\r\n          <strong class=\"ds-ev-title\">{{ details.title }}</strong>\r\n        </div>\r\n        <div class=\"ds-ev-description\">{{ getCalendarTime( calendarEvent ) }}</div>\r\n      </template>\r\n\r\n      <template slot=\"drawerBottom\">\r\n        <div class=\"pa-3\">\r\n          <v-checkbox\r\n            label=\"Read Only?\"\r\n            v-model=\"readOnly\"\r\n          ></v-checkbox>\r\n        </div>\r\n      </template>\r\n\r\n    </ds-calendar-app>\r\n\r\n  </v-app>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { Calendar, Weekday, Month } from 'dayspan';\r\n\r\nexport default {\r\n\r\n  name: 'calen',\r\n\r\n  data: () => ({\r\n    storeKey: 'dayspanState',\r\n    calendar: Calendar.months(),\r\n    readOnly: false,\r\n    defaultEvents: [\r\n      {\r\n        data: {\r\n          title: 'Weekly Meeting',\r\n          color: '#3F51B5'\r\n        },\r\n        schedule: {\r\n          dayOfWeek: [Weekday.MONDAY],\r\n          times: [9],\r\n          duration: 30,\r\n          durationUnit: 'minutes'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'First Weekend',\r\n          color: '#4CAF50'\r\n        },\r\n        schedule: {\r\n          weekspanOfMonth: [0],\r\n          dayOfWeek: [Weekday.FRIDAY],\r\n          duration: 3,\r\n          durationUnit: 'days'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'End of Month',\r\n          color: '#000000'\r\n        },\r\n        schedule: {\r\n          lastDayOfMonth: [1],\r\n          duration: 1,\r\n          durationUnit: 'hours'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Mother\\'s Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.MAY],\r\n          dayOfWeek: [Weekday.SUNDAY],\r\n          weekspanOfMonth: [1]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'New Year\\'s Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.JANUARY],\r\n          dayOfMonth: [1]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Inauguration Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.JANUARY],\r\n          dayOfMonth: [20]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Martin Luther King, Jr. Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.JANUARY],\r\n          dayOfWeek: [Weekday.MONDAY],\r\n          weekspanOfMonth: [2]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'George Washington\\'s Birthday',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.FEBRUARY],\r\n          dayOfWeek: [Weekday.MONDAY],\r\n          weekspanOfMonth: [2]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Memorial Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.MAY],\r\n          dayOfWeek: [Weekday.MONDAY],\r\n          lastWeekspanOfMonth: [0]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Independence Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.JULY],\r\n          dayOfMonth: [4]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Labor Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.SEPTEMBER],\r\n          dayOfWeek: [Weekday.MONDAY],\r\n          lastWeekspanOfMonth: [0]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Columbus Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.OCTOBER],\r\n          dayOfWeek: [Weekday.MONDAY],\r\n          weekspanOfMonth: [1]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Veterans Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.NOVEMBER],\r\n          dayOfMonth: [11]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Thanksgiving Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.NOVEMBER],\r\n          dayOfWeek: [Weekday.THURSDAY],\r\n          weekspanOfMonth: [3]\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          title: 'Christmas Day',\r\n          color: '#2196F3',\r\n          calendar: 'US Holidays'\r\n        },\r\n        schedule: {\r\n          month: [Month.DECEMBER],\r\n          dayOfMonth: [25]\r\n        }\r\n      }\r\n    ]\r\n  }),\r\n\r\n  mounted()\r\n  {\r\n    window.app = this.$refs.app;\r\n\r\n    this.loadState();\r\n  },\r\n\r\n  methods:\r\n  {\r\n    getCalendarTime(calendarEvent)\r\n    {\r\n      let sa = calendarEvent.start.format('a');\r\n      let ea = calendarEvent.end.format('a');\r\n      let sh = calendarEvent.start.format('h');\r\n      let eh = calendarEvent.end.format('h');\r\n\r\n      if (calendarEvent.start.minute !== 0)\r\n      {\r\n        sh += calendarEvent.start.format(':mm');\r\n      }\r\n\r\n      if (calendarEvent.end.minute !== 0)\r\n      {\r\n        eh += calendarEvent.end.format(':mm');\r\n      }\r\n\r\n      return (sa === ea) ? (sh + ' - ' + eh + ea) : (sh + sa + ' - ' + eh + ea);\r\n    },\r\n\r\n    saveState()\r\n    {\r\n      let state = this.calendar.toInput(true);\r\n      let json = JSON.stringify(state);\r\n\r\n      localStorage.setItem(this.storeKey, json);\r\n    },\r\n\r\n    loadState()\r\n    {\r\n      let state = {};\r\n\r\n      try\r\n      {\r\n        let savedState = JSON.parse(localStorage.getItem(this.storeKey));\r\n\r\n        if (savedState)\r\n        {\r\n          state = savedState;\r\n          state.preferToday = false;\r\n        }\r\n      }\r\n      catch (e)\r\n      {\r\n        // eslint-disable-next-line\r\n        console.log( e );\r\n      }\r\n\r\n      if (!state.events || !state.events.length)\r\n      {\r\n        state.events = this.defaultEvents;\r\n      }\r\n\r\n      state.events.forEach(ev =>\r\n      {\r\n        let defaults = this.$dayspan.getDefaultEventDetails();\r\n\r\n        ev.data = Vue.util.extend( defaults, ev.data );\r\n      });\r\n\r\n      this.$refs.app.setState( state );\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\nbody, html, #app, #dayspan {\r\n  font-family: Roboto, sans-serif !important;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.v-btn--flat,\r\n.v-text-field--solo .v-input__slot {\r\n  background-color: #f5f5f5 !important;\r\n  margin-bottom: 8px !important;\r\n}\r\n\r\n</style>\r\n"]}]}