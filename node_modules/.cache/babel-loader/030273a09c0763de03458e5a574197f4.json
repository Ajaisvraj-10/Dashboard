{"remainingRequest":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/thread-loader/dist/cjs.js!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/babel-loader/lib/index.js!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/resize-detector/esm/index.js","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/resize-detector/esm/index.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}