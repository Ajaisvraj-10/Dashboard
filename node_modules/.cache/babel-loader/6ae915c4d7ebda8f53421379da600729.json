{"remainingRequest":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\src\\views\\app\\m1\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\src\\views\\app\\m1\\home.vue","mtime":1691816395702},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1691816391275},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\babel-loader\\lib\\index.js","mtime":1691816383919},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691816385086},{"path":"C:\\Users\\HP\\OneDrive\\Desktop\\Videopages\\videopages-frontent\\node_modules\\vue-loader\\lib\\index.js","mtime":1691816392152}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTWFpbkhlYWRlciBmcm9tICcvc3JjL3ZpZXdzL2FwcC9tMS9oZWFkZXInOwppbXBvcnQgTWFpbkZvb3RlciBmcm9tICcvc3JjL3ZpZXdzL2FwcC9tMS9mb290ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsnZWRpdCcsICdibG9ja3MnLCAnY3VycmVudF9ibG9jayddLAogIG1ldGFJbmZvOiB7CiAgICB0aXRsZTogIk1haW4iCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBNYWluSGVhZGVyOiBNYWluSGVhZGVyLAogICAgTWFpbkZvb3RlcjogTWFpbkZvb3RlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0YXJ0OiBmYWxzZSwKICAgICAgY3VycmVudF9wYWdlOiB7fSwKICAgICAgYmFubmVyczogW10sCiAgICAgIGN1cnJlbnRfbW92aWU6IHsKICAgICAgICBsYW5ndWFnZV9kZXRhaWw6IHt9LAogICAgICAgIGNhdGVnb3J5X2RldGFpbDoge30sCiAgICAgICAgbW92aWVfc3BlYzogW10KICAgICAgfSwKICAgICAgcHJldmlld19tb3ZpZTogewogICAgICAgIGxhbmd1YWdlX2RldGFpbDoge30sCiAgICAgICAgY2F0ZWdvcnlfZGV0YWlsOiB7fSwKICAgICAgICBtb3ZpZV9zcGVjOiBbXSwKICAgICAgICB2aWRlbzoge30KICAgICAgfSwKICAgICAgc2hvd19iYW5uZXI6IHRydWUsCiAgICAgIHBsYXlfdmlkZW86IHt9LAogICAgICBvbGRfa2V5OiAwLAogICAgICBzbGlkZTogMAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy4kcm9vdC5hZG1pbl90b2tlbikgewogICAgICB0aGlzLmluaXQoKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAnJHJvb3QuYWRtaW5fdG9rZW4nOiBmdW5jdGlvbiAkcm9vdEFkbWluX3Rva2VuKCkgewogICAgICB0aGlzLmluaXQoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5wYXltZW50KSB7CiAgICAgICAgdGhpcy5zaG93QWxlcnQoJ1BsYW4gcHVyY2hhc2VkIHN1Y2Nlc3NmdWxseSEnKTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZWRpdCkgewogICAgICAgIHRoaXMuc3RhcnQgPSB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZWRpdCA9IGZhbHNlOwogICAgICAgIHRoaXMuYmxvY2tzID0gW3t9LCB7fSwge31dOwogICAgICAgIHRoaXMuZ2V0UGFnZSgpOwogICAgICB9CgogICAgICB0aGlzLmdldEJhbm5lcnMoKTsKICAgIH0sCiAgICBnZXRCYW5uZXJzOiBmdW5jdGlvbiBnZXRCYW5uZXJzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGhlYWRlcnMgPSBuZXcgSGVhZGVycygpOwogICAgICBoZWFkZXJzLmFwcGVuZCgiQXV0aG9yaXphdGlvbiIsICJCZWFyZXIgIiArICh0aGlzLiRyb290LnRva2VuID8gdGhpcy4kcm9vdC50b2tlbiA6IHRoaXMuJHJvb3QuYWRtaW5fdG9rZW4pKTsKICAgICAgZmV0Y2godGhpcy5hcGlfdXJsICsgJy9jdXN0b21lci9iYW5uZXJzLz90aGVtZV9uYW1lPScgKyB0aGVtZV9uYW1lLCB7CiAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICBoZWFkZXJzOiBoZWFkZXJzCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoanNvbkRhdGEpIHsKICAgICAgICBfdGhpcy5iYW5uZXJzID0ganNvbkRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIHByZXZpZXdCYW5uZXI6IGZ1bmN0aW9uIHByZXZpZXdCYW5uZXIobW92aWUsIGJsb2NrLCBta2V5KSB7CiAgICAgIHZhciBibG9ja190eXBlID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAnYmxvY2snOwogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIHRoaXMucHJldmlld19tb3ZpZSA9IG1vdmllOwogICAgICB2YXIgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGJsb2NrX3R5cGUgKyBibG9jay5pZCk7CiAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYmxvY2tfdHlwZSArIGJsb2NrLmlkICsgJ21vdmllJyArIG1vdmllLmlkKTsKCiAgICAgIGlmICh0aGlzLm9sZF9rZXkgPCBta2V5KSB7CiAgICAgICAgaWYgKG1rZXkgPiAyKSB7CiAgICAgICAgICBjb250ZW50LnNjcm9sbFRvKHsKICAgICAgICAgICAgbGVmdDogY29udGVudC5zY3JvbGxMZWZ0ICs9IGVsZW1lbnQub2Zmc2V0V2lkdGgsCiAgICAgICAgICAgIGJlaGF2aW9yOiAnc21vb3RoJwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGlmIChibG9jay5tb3ZpZXMubGVuZ3RoIC0gMyA+IG1rZXkpIHsKICAgICAgICAgIGNvbnRlbnQuc2Nyb2xsVG8oewogICAgICAgICAgICBsZWZ0OiBjb250ZW50LnNjcm9sbExlZnQgLT0gZWxlbWVudC5vZmZzZXRXaWR0aCwKICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMub2xkX2tleSA9IG1rZXk7CgogICAgICBpZiAoIXRoaXMuc2hvd19iYW5uZXIpIHsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMucGxheV92aWRlbyk7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm15VmlkZW8iKS5wYXVzZSgpOwogICAgICB9CgogICAgICB0aGlzLnNob3dfYmFubmVyID0gdHJ1ZTsKICAgICAgdGhpcy5wbGF5X3ZpZGVvID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIHNlbGYuc2hvd19iYW5uZXIgPSBmYWxzZTsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibXlWaWRlbyIpLnBsYXkoKTsKICAgICAgfSwgNTAwMCk7CiAgICB9LAogICAgd2F0Y2hOb3c6IGZ1bmN0aW9uIHdhdGNoTm93KCkgewogICAgICB0aGlzLnNob3dfYmFubmVyID0gZmFsc2U7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJteVZpZGVvIikucGxheSgpOwogICAgfSwKICAgIGNsaWNrTW92aWU6IGZ1bmN0aW9uIGNsaWNrTW92aWUobW92aWUpIHsKICAgICAgdGhpcy5jdXJyZW50X21vdmllID0gbW92aWU7CgogICAgICBpZiAoIXRoaXMuZWRpdCkgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgIG5hbWU6ICd2aWRlbycsCiAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgdHlwZTogdGhpcy5zbHVnaWZ5KG1vdmllLnR5cGUpLAogICAgICAgICAgICBjYXRlZ29yeTogdGhpcy5zbHVnaWZ5KG1vdmllLmNhdGVnb3J5X2RldGFpbC5uYW1lKSwKICAgICAgICAgICAgc2x1ZzogbW92aWUuc2x1ZwogICAgICAgICAgfSwKICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICAgIGxhbmd1YWdlOiBtb3ZpZS5sYW5ndWFnZV9kZXRhaWwubmFtZQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZ2V0UGFnZTogZnVuY3Rpb24gZ2V0UGFnZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7CiAgICAgIGhlYWRlcnMuYXBwZW5kKCJBdXRob3JpemF0aW9uIiwgIkJlYXJlciAiICsgKHRoaXMuJHJvb3QudG9rZW4gPyB0aGlzLiRyb290LnRva2VuIDogdGhpcy4kcm9vdC5hZG1pbl90b2tlbikpOwogICAgICBmZXRjaCh0aGlzLmFwaV91cmwgKyAnL2NvbnRlbnQvcGFnZXNfY29udGVudHMvP3RoZW1lPScgKyB0aGVtZV9uYW1lICsgJyZwYWdlPS8nLCB7CiAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICBoZWFkZXJzOiBoZWFkZXJzCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoanNvbkRhdGEpIHsKICAgICAgICBfdGhpczIuY3VycmVudF9wYWdlID0ganNvbkRhdGE7CiAgICAgICAgX3RoaXMyLmJsb2NrcyA9IGpzb25EYXRhLmJsb2NrczsKCiAgICAgICAgaWYgKF90aGlzMi5ibG9ja3MubGVuZ3RoID4gMCkgewogICAgICAgICAgaWYgKF90aGlzMi5ibG9ja3NbMF0ubW92aWVzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgX3RoaXMyLnByZXZpZXdfbW92aWUgPSBfdGhpczIuYmxvY2tzWzBdLm1vdmllc1swXTsKICAgICAgICAgICAgdmFyIHNlbGYgPSBfdGhpczI7CiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdibG9jaycgKyBzZWxmLmJsb2Nrc1swXS5pZCArICdtb3ZpZScgKyBzZWxmLmJsb2Nrc1swXS5tb3ZpZXNbMF0uaWQpLmZvY3VzKCk7CiAgICAgICAgICAgIH0sIDEwMDApOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgX3RoaXMyLnN0YXJ0ID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9LAogICAgc2VsZWN0Q29udGVudDogZnVuY3Rpb24gc2VsZWN0Q29udGVudChibG9jaykgewogICAgICBpZiAodGhpcy5lZGl0KSB7CiAgICAgICAgdGhpcy4kZW1pdCgnc2VsZWN0ZWRDb250ZW50JywgYmxvY2spOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},null]}