{"remainingRequest":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/thread-loader/dist/cjs.js!/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/babel-loader/lib/index.js!/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/ott-frontent/src/views/app/m1/qr-login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/src/views/app/m1/qr-login.vue","mtime":1690362678935},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/ott-frontent/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydlZGl0JywgJ2Jsb2NrcycsICdjdXJyZW50X2Jsb2NrJ10sCiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0YXJ0OiBmYWxzZSwKICAgICAgY3VycmVudF9wYWdlOiB7fSwKICAgICAgbWVudV9jbGljazogZmFsc2UsCiAgICAgIGNybnRfdGFiOiAibG9naW4iLAogICAgICBkZXZpY2VfdG9rZW46ICcnLAogICAgICBsb2dpbl9jb2RlOiAnJywKICAgICAgZXJyb3JfY291bnQ6IDAKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaWYgKHRoaXMuZWRpdCkgewogICAgICB0aGlzLnN0YXJ0ID0gdHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuZWRpdCA9IGZhbHNlOwogICAgICB0aGlzLmJsb2NrcyA9IFt7fSwge30sIHt9XTsKICAgICAgdGhpcy5nZXRQYWdlKCk7CiAgICB9CgogICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJkZXZpY2VfdG9rZW4iKSkgewogICAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oImRldmljZV90b2tlbiIpLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLmRldmljZV90b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJkZXZpY2VfdG9rZW4iKTsKICAgICAgfQogICAgfQoKICAgIGlmICh0aGlzLmRldmljZV90b2tlbiA9PSAnJykgewogICAgICB0aGlzLmRldmljZV90b2tlbiA9IHRoaXMuZ2VuZXJhdGVUb2tlbigpOwogICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiZGV2aWNlX3Rva2VuIiwgdGhpcy5kZXZpY2VfdG9rZW4pOwogICAgfQoKICAgIHRoaXMuc2V0TG9naW5Db2RlKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZW5lcmF0ZVRva2VuOiBmdW5jdGlvbiBnZW5lcmF0ZVRva2VuKCkgewogICAgICB2YXIgdG9rZW4gPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKTsKICAgICAgcmV0dXJuIHRva2VuOwogICAgfSwKICAgIHNldExvZ2luQ29kZTogZnVuY3Rpb24gc2V0TG9naW5Db2RlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZvcm1kYXRhLmFwcGVuZCgnZGV2aWNlX3Rva2VuJywgdGhpcy5kZXZpY2VfdG9rZW4pOwogICAgICB2YXIgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7CiAgICAgIGhlYWRlcnMuYXBwZW5kKCJBdXRob3JpemF0aW9uIiwgIkJlYXJlciAiICsgdGhpcy4kcm9vdC5hZG1pbl90b2tlbik7CiAgICAgIGZldGNoKHRoaXMuYXBpX3VybCArICcvdXNlcnMvdHZfbG9naW4vJywgewogICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsCiAgICAgICAgYm9keTogZm9ybWRhdGEKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChqc29uRGF0YSkgewogICAgICAgIGlmIChqc29uRGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICBfdGhpcy5sb2dpbl9jb2RlID0ganNvbkRhdGEuY29kZTsKCiAgICAgICAgICBfdGhpcy5jaGVja0xvZ2luMigpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpcy5zaG93QWxlcnQoJ1NvbWV0aGluZyBXcm9uZyEnLCAncmVkJyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBjaGVja0xvZ2luMjogZnVuY3Rpb24gY2hlY2tMb2dpbjIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZvcm1kYXRhLmFwcGVuZCgnZGV2aWNlX3Rva2VuJywgdGhpcy5kZXZpY2VfdG9rZW4pOwogICAgICB2YXIgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7CiAgICAgIGhlYWRlcnMuYXBwZW5kKCJBdXRob3JpemF0aW9uIiwgIkJlYXJlciAiICsgdGhpcy4kcm9vdC5hZG1pbl90b2tlbik7CiAgICAgIGZldGNoKHRoaXMuYXBpX3VybCArICcvdXNlcnMvdHZfbG9naW4vJywgewogICAgICAgIG1ldGhvZDogJ3B1dCcsCiAgICAgICAgaGVhZGVyczogaGVhZGVycywKICAgICAgICBib2R5OiBmb3JtZGF0YQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT0gMjAwICYmIF90aGlzMi5lcnJvcl9jb3VudCA8IDUpIHsKICAgICAgICAgIHZhciBzZWxmID0gX3RoaXMyOwogICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHNlbGYuZXJyb3JfY291bnQrKzsKICAgICAgICAgICAgc2VsZi5jaGVja0xvZ2luMigpOwogICAgICAgICAgfSwgMjAwMCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChqc29uRGF0YSkgewogICAgICAgIGlmIChqc29uRGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICBfdGhpczIuZXJyb3JfY291bnQgPSAwOwoKICAgICAgICAgIGlmIChqc29uRGF0YS5pc19sb2dnZWQpIHsKICAgICAgICAgICAgdmFyIHVzZXJkYXRhID0ganNvbkRhdGEudXNlcjsKCiAgICAgICAgICAgIGlmICh1c2VyZGF0YS5hY2Nlc3MpIHsKICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgidXNlckluZm8iLCBKU09OLnN0cmluZ2lmeSh1c2VyZGF0YSkpOwogICAgICAgICAgICAgIF90aGlzMi4kcm9vdC50b2tlbiA9IHVzZXJkYXRhLmFjY2VzczsKCiAgICAgICAgICAgICAgaWYgKF90aGlzMi4kcm9vdC50b2tlbiA9PSAnJykgewogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oInVzZXJJbmZvIik7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJy8nOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBfdGhpczIuc2hvd0FsZXJ0KCdTb21ldGhpbmcgV3JvbmchJywgJ3JlZCcpOwoKICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgidXNlckluZm8iKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIHNlbGYgPSBfdGhpczI7CiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIHNlbGYuY2hlY2tMb2dpbjIoKTsKICAgICAgICAgICAgfSwgNTAwMCk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi5zaG93QWxlcnQoJ1NvbWV0aGluZyBXcm9uZyEnLCAncmVkJyk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBhbGVydChlcnJvcik7CiAgICAgICAgdmFyIHNlbGYgPSBfdGhpczI7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBzZWxmLmNoZWNrTG9naW4yKCk7CiAgICAgICAgfSwgMjAwMCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFBhZ2U6IGZ1bmN0aW9uIGdldFBhZ2UoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGhlYWRlcnMgPSBuZXcgSGVhZGVycygpOwogICAgICBoZWFkZXJzLmFwcGVuZCgiQXV0aG9yaXphdGlvbiIsICJCZWFyZXIgIiArIHRoaXMuJHJvb3QuYWRtaW5fdG9rZW4pOwogICAgICBmZXRjaCh0aGlzLmFwaV91cmwgKyAnL2NvbnRlbnQvcGFnZXNfY29udGVudHMvP3RoZW1lPScgKyB0aGVtZV9uYW1lICsgJyZwYWdlPS9zaWduLWluJywgewogICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgaGVhZGVyczogaGVhZGVycwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGpzb25EYXRhKSB7CiAgICAgICAgX3RoaXMzLmN1cnJlbnRfcGFnZSA9IGpzb25EYXRhOwogICAgICAgIF90aGlzMy5ibG9ja3MgPSBqc29uRGF0YS5ibG9ja3M7CiAgICAgICAgX3RoaXMzLnN0YXJ0ID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9LAogICAgc2VsZWN0Q29udGVudDogZnVuY3Rpb24gc2VsZWN0Q29udGVudChibG9jaykgewogICAgICBpZiAodGhpcy5lZGl0KSB7CiAgICAgICAgdGhpcy5ibG9ja3MuZm9yRWFjaChmdW5jdGlvbiAoYmxrKSB7CiAgICAgICAgICBibGsuaXNfZWRpdCA9IGZhbHNlOwogICAgICAgIH0pOwogICAgICAgIGJsb2NrLmlzX2VkaXQgPSB0cnVlOwogICAgICAgIHRoaXMuJGVtaXQoJ3NlbGVjdGVkQ29udGVudCcsIGJsb2NrKTsKICAgICAgfQogICAgfQogIH0KfTs="},null]}