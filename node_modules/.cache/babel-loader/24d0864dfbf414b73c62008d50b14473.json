{"remainingRequest":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/thread-loader/dist/cjs.js!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/babel-loader/lib/index.js!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vuetify-loader/lib/loader.js??ref--17-0!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/muhammed/Documents/vue_projects/backend/biowin aeo/src/views/app/pages/farmers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/src/views/app/pages/farmers.vue","mtime":1678346673097},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammed/Documents/vue_projects/backend/biowin aeo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBtZXRhSW5mbzogewogICAgdGl0bGU6ICJIb21lIgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZhcm1lcnM6IFtdLAogICAgICB0ZW1wX2Zhcm1lcnM6IFtdLAogICAgICBzZWFyY2hRdWVyeTogJycsCiAgICAgIHBhZ2U6IDAsCiAgICAgIGZhcm1lcnNfY291bnQ6IDAsCiAgICAgIGZpbHRlcjogewogICAgICAgIGljczogbnVsbCwKICAgICAgICBwYW5jaGF5YXRoOiBudWxsLAogICAgICAgIHZmYzogbnVsbCwKICAgICAgICBjb3VudDogMAogICAgICB9LAogICAgICBsb2FkX21vcmU6IGZhbHNlLAogICAgICBub3Rfc3RhcnQ6IHRydWUsCiAgICAgIGJhY2tncm91bmRfc3RhcnQ6IHRydWUsCiAgICAgIGxhc3RTY3JvbGxQb3NpdGlvbjogMAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNoZWNrTG9naW4oKTsKCiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oImZhcm1lcl9maWx0ZXIiKSkgewogICAgICB0aGlzLmZpbHRlciA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlWyJmYXJtZXJfZmlsdGVyIl0pOwogICAgICB0aGlzLnNlbGVjdEZpbHRlcigpOwogICAgICB0aGlzLmZpbHRlckRhdGEoKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuZ2V0RmFybWVycygpOwogICAgfQoKICAgIHZhciBzZWxmID0gdGhpczsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm1haW4tYm9keTQiKVswXS5hZGRFdmVudExpc3RlbmVyKCJzY3JvbGwiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHNlbGYuaGFuZGxlU2Nyb2xsKCk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZVNjcm9sbDogZnVuY3Rpb24gaGFuZGxlU2Nyb2xsKCkgewogICAgICB2YXIgY3VycmVudFNjcm9sbFBvc2l0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibWFpbi1ib2R5NCIpWzBdLnNjcm9sbFRvcDsKCiAgICAgIGlmIChjdXJyZW50U2Nyb2xsUG9zaXRpb24gPCAwKSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0KCiAgICAgIHRoaXMuYmFja2dyb3VuZF9zdGFydCA9IGN1cnJlbnRTY3JvbGxQb3NpdGlvbiA8IHRoaXMubGFzdFNjcm9sbFBvc2l0aW9uOwogICAgICB0aGlzLmxhc3RTY3JvbGxQb3NpdGlvbiA9IGN1cnJlbnRTY3JvbGxQb3NpdGlvbjsKICAgIH0sCiAgICByZXN1bHRRdWVyeTogZnVuY3Rpb24gcmVzdWx0UXVlcnkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAodGhpcy5zZWFyY2hRdWVyeSA9PSAnY2hlY2tfY2FtMTAxJykgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvaW5zcGVjdGlvbi1kaWdpdGFsLXNpZ24vNScpOwogICAgICB9CgogICAgICB2YXIgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7CiAgICAgIGhlYWRlcnMuYXBwZW5kKCJBdXRob3JpemF0aW9uIiwgIkJlYXJlciAiICsgdGhpcy4kcm9vdC50b2tlbik7CiAgICAgIGZldGNoKHRoaXMuYXBpX3VybCArICcvZW1wbG95ZWUvZmFybWVycy8/c2VhcmNoPScgKyB0aGlzLnNlYXJjaFF1ZXJ5LCB7CiAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICBoZWFkZXJzOiBoZWFkZXJzCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoanNvbkRhdGEpIHsKICAgICAgICBfdGhpcy5mYXJtZXJzID0ganNvbkRhdGEuZmFybWVyczsKICAgICAgICBfdGhpcy5sb2FkX21vcmUgPSBmYWxzZTsKICAgICAgfSk7CgogICAgICBpZiAodGhpcy5zZWFyY2hRdWVyeSA9PSAnJykgewogICAgICAgIHRoaXMuZmFybWVyc19jb3VudCA9IGpzb25EYXRhLmZhcm1lcnNfY291bnQ7CiAgICAgICAgdGhpcy5mYXJtZXJzID0gdGhpcy50ZW1wX2Zhcm1lcnM7CiAgICAgICAgdGhpcy5nZXRGYXJtZXJzKCk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRGYXJtZXJzOiBmdW5jdGlvbiBnZXRGYXJtZXJzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMucGFnZSsrOwogICAgICB0aGlzLm5vdF9zdGFydCA9IHRydWU7CiAgICAgIHZhciBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTsKICAgICAgaGVhZGVycy5hcHBlbmQoIkF1dGhvcml6YXRpb24iLCAiQmVhcmVyICIgKyB0aGlzLiRyb290LnRva2VuKTsKICAgICAgdmFyIHBhcmFtID0gJz9wYWdlPScgKyB0aGlzLnBhZ2U7CgogICAgICBpZiAodGhpcy4kcm9vdC51c2VyX3R5cGUgPT0gJ2luc3BlY3RvcicpIHsKICAgICAgICBwYXJhbSArPSAnJmluc3BlY3Rvcj0nICsgdGhpcy4kcm9vdC5pbnNwZWN0b3JJbmZvLmlkOwogICAgICB9CgogICAgICBmZXRjaCh0aGlzLmFwaV91cmwgKyAnL2VtcGxveWVlL2Zhcm1lcnMvJyArIHBhcmFtLCB7CiAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICBoZWFkZXJzOiBoZWFkZXJzCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoanNvbkRhdGEpIHsKICAgICAgICBfdGhpczIubm90X3N0YXJ0ID0gZmFsc2U7CiAgICAgICAgX3RoaXMyLmZhcm1lcnNfY291bnQgPSBqc29uRGF0YS5mYXJtZXJzX2NvdW50OwoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGpzb25EYXRhLmZhcm1lcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIF90aGlzMi5mYXJtZXJzLnB1c2goanNvbkRhdGEuZmFybWVyc1tpXSk7CiAgICAgICAgfQoKICAgICAgICBfdGhpczIubG9hZF9tb3JlID0gdHJ1ZTsKCiAgICAgICAgaWYgKGkgPCAyMCkgewogICAgICAgICAgX3RoaXMyLmxvYWRfbW9yZSA9IGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMyLnRlbXBfZmFybWVycyA9IF90aGlzMi5mYXJtZXJzOwogICAgICB9KTsKICAgIH0sCiAgICBzZWxlY3RGaWx0ZXI6IGZ1bmN0aW9uIHNlbGVjdEZpbHRlcigpIHsKICAgICAgdGhpcy5wYWdlID0gMDsKICAgICAgdGhpcy5nZXRUeXBlcygpOwogICAgICB0aGlzLmdldEljcygpOwoKICAgICAgaWYgKHRoaXMuZmlsdGVyLmljcykgewogICAgICAgIHRoaXMuY2hhbmdlSUNTKCk7CiAgICAgIH0KICAgIH0sCiAgICBjYW5jZWxGaWx0ZXI6IGZ1bmN0aW9uIGNhbmNlbEZpbHRlcigpIHsKICAgICAgdGhpcy5wYWdlID0gMDsKICAgICAgdGhpcy5mYXJtZXJzID0gW107CiAgICAgIHRoaXMuZ2V0RmFybWVycygpOwogICAgICB0aGlzLiRidk1vZGFsLmhpZGUoJ2ZpbHRlci1kYXRhJyk7CiAgICAgIHRoaXMuZmlsdGVyID0gewogICAgICAgIGljczogbnVsbCwKICAgICAgICBwYW5jaGF5YXRoOiBudWxsLAogICAgICAgIHZmYzogbnVsbCwKICAgICAgICBjb3VudDogMAogICAgICB9OwogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgiZmFybWVyX2ZpbHRlciIpOwogICAgfSwKICAgIGNhbGNGaWx0ZXJDb3VudDogZnVuY3Rpb24gY2FsY0ZpbHRlckNvdW50KCkgewogICAgICB2YXIgY291bnQgPSAwOwoKICAgICAgaWYgKHRoaXMuZmlsdGVyLmljcykgewogICAgICAgIGNvdW50Kys7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmZpbHRlci5wYW5jaGF5YXRoKSB7CiAgICAgICAgY291bnQrKzsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZmlsdGVyLnZmYykgewogICAgICAgIGNvdW50Kys7CiAgICAgIH0KCiAgICAgIHRoaXMuZmlsdGVyLmNvdW50ID0gY291bnQ7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJmYXJtZXJfZmlsdGVyIiwgSlNPTi5zdHJpbmdpZnkodGhpcy5maWx0ZXIpKTsKICAgICAgdGhpcy4kYnZNb2RhbC5oaWRlKCdmaWx0ZXItZGF0YScpOwogICAgfSwKICAgIGZpbHRlckRhdGE6IGZ1bmN0aW9uIGZpbHRlckRhdGEoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5wYWdlKys7CiAgICAgIHRoaXMubm90X3N0YXJ0ID0gdHJ1ZTsKICAgICAgdGhpcy5jYWxjRmlsdGVyQ291bnQoKTsKICAgICAgdmFyIGZvcm1kYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZvcm1kYXRhLmFwcGVuZCgnZnBvJywgdGhpcy4kcm9vdC51c2VySW5mby5mcG8pOwogICAgICBpZiAodGhpcy5maWx0ZXIuaWNzKSBmb3JtZGF0YS5hcHBlbmQoJ2ljcycsIHRoaXMuZmlsdGVyLmljcyk7CiAgICAgIGlmICh0aGlzLmZpbHRlci5wYW5jaGF5YXRoKSBmb3JtZGF0YS5hcHBlbmQoJ3BhbmNoYXlhdGgnLCB0aGlzLmZpbHRlci5wYW5jaGF5YXRoKTsKICAgICAgaWYgKHRoaXMuZmlsdGVyLnZmYykgZm9ybWRhdGEuYXBwZW5kKCd2ZmMnLCB0aGlzLmZpbHRlci52ZmMpOwoKICAgICAgaWYgKHRoaXMuJHJvb3QudXNlcl90eXBlID09ICdpbnNwZWN0b3InKSB7CiAgICAgICAgZm9ybWRhdGEuYXBwZW5kKCdpbnNwZWN0b3InLCB0aGlzLiRyb290Lmluc3BlY3RvckluZm8uaWQpOwogICAgICB9CgogICAgICB2YXIgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7CiAgICAgIGhlYWRlcnMuYXBwZW5kKCJBdXRob3JpemF0aW9uIiwgIkJlYXJlciAiICsgdGhpcy4kcm9vdC50b2tlbik7CiAgICAgIGZldGNoKHRoaXMuYXBpX3VybCArICcvZW1wbG95ZWUvZmFybWVycy8/cGFnZT0nICsgdGhpcy5wYWdlLCB7CiAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgYm9keTogZm9ybWRhdGEsCiAgICAgICAgaGVhZGVyczogaGVhZGVycwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGpzb25EYXRhKSB7CiAgICAgICAgX3RoaXMzLm5vdF9zdGFydCA9IGZhbHNlOwogICAgICAgIF90aGlzMy5mYXJtZXJzX2NvdW50ID0ganNvbkRhdGEuZmFybWVyc19jb3VudDsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBqc29uRGF0YS5mYXJtZXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBfdGhpczMuZmFybWVycy5wdXNoKGpzb25EYXRhLmZhcm1lcnNbaV0pOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMzLmxvYWRfbW9yZSA9IHRydWU7CgogICAgICAgIGlmIChpIDwgMjApIHsKICAgICAgICAgIF90aGlzMy5sb2FkX21vcmUgPSBmYWxzZTsKICAgICAgICB9CgogICAgICAgIGlmIChqc29uRGF0YS5mYXJtZXJzLmxlbmd0aCA8PSAwKSB7CiAgICAgICAgICBfdGhpczMuc2hvd0FsZXJ0KCdObyBmYXJtZXJzIGZvdW5kIScpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},null]}