{"remainingRequest":"E:\\vue_projects\\biowin\\node_modules\\babel-loader\\lib\\index.js!E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js??ref--17-0!E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\process\\processing-packing.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue_projects\\biowin\\src\\views\\app\\oodo\\production\\process\\processing-packing.vue","mtime":1676396277717},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"E:\\vue_projects\\biowin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue_projects\\biowin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["processing-packing.vue"],"names":[],"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","sourcesContent":["<template>\r\n  <div class=\"main-content create-main\">\r\n    <form ref=\"dataForm\" @submit.prevent=\"dataForm()\" v-if=\"is_start\">\r\n      <div class=\"d-flex mb-2 align-items-center  justify-content-between\">\r\n        <slot name=\"header\">\r\n          <h5 class=\"mb-0\"><span class=\"text-success\">{{process_detail.name}}</span> / {{slugToWord(action=='indent_packing'?'final packing':action=='direct_packing'?'packing':action)}}</h5>\r\n        </slot>\r\n        <div class=\"d-flex\">\r\n          <div class=\"d-flex\">\r\n            <b-button variant=\"success\" type=\"button\" class=\" px-3 py-1  d-sm-block mx-1\" @click=\"dataForm()\" v-if=\"!is_view\">Save\r\n            </b-button>\r\n          </div>\r\n          <b-button variant=\"danger\" class=\" px-3 py-1  d-sm-block mx-1\" @click=\"closePopup()\"\r\n            >Discard\r\n          </b-button>\r\n        </div>\r\n      </div>\r\n      <div class=\" my-3 border-top\"></div>\r\n      <fieldset :disabled=\"is_view\">\r\n        <b-row class=\"main-scroll\">\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='consumables'\">\r\n            <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"user-info pt-2 mb-5\">\r\n\r\n                    <div class=\"o_thread_search_input mt-3\">\r\n                      <b> Consumable Details </b>\r\n                    </div>\r\n                    <div v-for=\"consumable_item in form_data.consumable_items_list\">\r\n                      <div v-if=\"consumable_item.is_lot_wise\">\r\n                        <div class=\"o_thread_search_input\" v-for=\"consumable in consumable_item.lots\" v-if=\"consumable.warehouse==process_detail.warehouse\">\r\n                          <span style=\"width:120px;\"> {{consumable_item.name}} ({{consumable_item.unit}}) : </span>\r\n                          <button class=\"btn btn-white append_btn_left\" type=\"button\">Lot: {{consumable.id}}</button>\r\n                          <input placeholder=\"Quantity\" type=\"number\" min=\"0\" class=\"ui-autocomplete-input append_btn_input_right\" autocomplete=\"off\" :name=\"'consumable_qty'+consumable_item.id+'lot'+consumable.id\" :max=\"consumable.available_quantity\">\r\n                          <button class=\"btn btn-white append_btn_right\" type=\"button\">{{consumable_item.unit}}</button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"o_thread_search_input\" v-else>\r\n                        <span style=\"width:120px;\"> {{consumable_item.name}} ({{consumable_item.unit}}) : </span>\r\n                        <button class=\"btn btn-white append_btn_left\" type=\"button\" v-if=\"consumable_item.is_lot\">Lot: {{consumable_item.consumable}}</button>\r\n                        <input placeholder=\"Quantity\" type=\"number\" min=\"0\" class=\"ui-autocomplete-input append_btn_input_right\" autocomplete=\"off\" v-model=\"consumable_item.quantity\" :name=\"'consumable_qty'+consumable_item.id\" :max=\"consumable_item.is_free?'':consumable_item.available_quantity\">\r\n                        <button class=\"btn btn-white append_btn_right\" type=\"button\">{{consumable_item.unit}}</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='barrel'\">\r\n            <div class=\"card-scroll\">\r\n              <table class=\"table\">\r\n                <thead class=\"output-rows\">\r\n                  <tr>\r\n                    <th class=\"text-info\">Output</th>\r\n                    <th class=\"text-info\">Lot</th>\r\n                    <th class=\"text-success\">Quantity(KG)</th>\r\n                    <th class=\"text-primary\">Percentage(%)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"output-rows\" v-for=\"(parameter,key) in form_data.process_outputs\" v-if=\"parameter.parameter_detail.status\">\r\n                  <tr>\r\n                    <td class=\"text-info\">\r\n                      <b>{{parameter.parameter_detail.name}} <sup v-if=\"form_data.is_organic\"><span class=\"badge badge-success\">ORG</span></sup> </b>\r\n                    </td>\r\n                    <td class=\"\">\r\n                      <b>#Lot/{{form_data.lot}} </b>\r\n                    </td>\r\n                    <td class=\"text-success\">\r\n                      <span>{{parameter.quantity.toFixed(2)}}KG</span>\r\n                      <input :placeholder=\"parameter.name\" type=\"hidden\" step=\"0.1\" class=\"ui-autocomplete-input ops\" autocomplete=\"off\" v-model=\"parameter.quantity\" :name=\"'quantity'+parameter.parameter\" min=\"0\">\r\n                    </td>\r\n                    <td class=\"text-primary\">\r\n                      <span>{{parameter.quantity_persentage}}</span>\r\n                      <input :placeholder=\"parameter.name\" type=\"hidden\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"parameter.quantity_persentage\" :name=\"'quantity_persentage'+parameter.parameter\" min=\"0\" readonly>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td colspan=\"4\">\r\n                      <b-card  header-bg-variant=\"transparent\" class=\"card-scroll\">\r\n                        <div class=\"row mt-2\" v-for=\"barrel in form_data.barrel_stocks\" v-show=\"barrel_id==barrel.id\">\r\n                          <div class=\"col-md-4 pl-0\">\r\n                            <div class=\"pb-4 px-4\">\r\n                              <div class=\"barrel_out\" style=\"height:220px\">\r\n                                <div class=\"barrel_in\" :style=\"'height:'+((100-((100/barrel.max_quantity)*barrel.quantity))-(100/barrel.max_quantity)*barrel.available_quantity)+'%'\">\r\n                                  <div class=\"details text-center\">\r\n                                    <h4>{{barrel.code}}</h4>\r\n                                    <span class=\"text-info text-14\">{{barrel.quantity}}KG/{{barrel.available_quantity}}KG/{{barrel.max_quantity}}KG</span>\r\n                                    <div style=\"font-size:15px;font-weight:600;\">{{barrel.quantity_persentage}}</div>\r\n                                  </div>\r\n                                </div>\r\n                                <div class=\"barrel_pepper\" :style=\"'height:'+((100/barrel.max_quantity)*barrel.quantity)+'%'\">\r\n                                </div>\r\n                                <div class=\"px-2 pt-1 text-center text-secondary\" v-for=\"(product,pkey) in barrel.products\">\r\n                                  <small><span v-if=\"pkey!=0\">, </span><span v-else><b>#Lot/{{product.lot}}</b></span> {{product.product}}</small>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"text-center p-2\">\r\n                                <b>{{barrel.name}}</b>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-8 pl-0\">\r\n                            <b class=\"h5 px-2 border-bottom text-success font-weight-600\">{{barrel.code}} {{barrel.name}}</b>\r\n                            <div class=\"o_thread_search_input\">\r\n                              <span style=\"width:120px;\"> Filling Quantity: </span>\r\n                              <button class=\"btn btn-white append_btn_left\" type=\"button\">{{barrel.code}}</button>\r\n                              <input :placeholder=\"parameter.name\" :type=\"'number'\" step=\"0.1\" class=\"ui-autocomplete-input append_btn_input_right ops w-100\" autocomplete=\"off\" v-model=\"barrel.quantity\" @input=\"calculation(parameter,barrel)\" :name=\"'quantity'+barrel.id+'barrel'+parameter.parameter\" min=\"0\">\r\n                              <button class=\"btn btn-white append_btn_right\" type=\"button\">KG</button>\r\n                            </div>\r\n                            <div class=\"o_thread_search_input py-0\">\r\n                              <span style=\"width:120px;\"> </span>\r\n                              <div class=\"text-right text-primary w-100 pr-3\">{{barrel.quantity_persentage}}</div>\r\n                              <input type=\"hidden\" v-model=\"barrel.quantity_persentage\" :name=\"'quantity_persentage'+barrel.id+'barrel'+parameter.parameter\">\r\n                              <input type=\"hidden\" :name=\"'barrel'+barrel.id\" v-model=\"barrel.id\">\r\n                            </div>\r\n                            <div class=\"mb-5\">\r\n                              <div class=\"o_thread_search_input\">\r\n                                <b> Consumable Details</b>\r\n                              </div>\r\n                              <div v-for=\"consumable_item in barrel.consumable_items_list\">\r\n                                <div v-if=\"consumable_item.is_lot_wise\">\r\n                                  <div class=\"o_thread_search_input\" v-for=\"consumable in consumable_item.lots\" v-if=\"consumable.warehouse==process_detail.warehouse\">\r\n                                    <span style=\"width:120px;\"> {{consumable_item.name}} ({{consumable_item.unit}}) : </span>\r\n                                    <button class=\"btn btn-white append_btn_left\" type=\"button\">Lot: {{consumable.id}}</button>\r\n                                    <input placeholder=\"Quantity\" type=\"number\" min=\"0\" class=\"ui-autocomplete-input append_btn_input_right\" autocomplete=\"off\" :name=\"'consumable_qty'+consumable_item.id+'lot'+consumable.id\" :max=\"consumable.available_quantity\">\r\n                                    <button class=\"btn btn-white append_btn_right\" type=\"button\">{{consumable_item.unit}}</button>\r\n                                  </div>\r\n                                </div>\r\n                                <div class=\"o_thread_search_input\" v-else>\r\n                                  <span style=\"width:120px;\"> {{consumable_item.name}} ({{consumable_item.unit}}) : </span>\r\n                                  <button class=\"btn btn-white append_btn_left\" type=\"button\" v-if=\"consumable_item.is_lot\">Lot: {{consumable_item.consumable}}</button>\r\n                                  <input placeholder=\"Quantity\" type=\"number\" min=\"0\" class=\"ui-autocomplete-input append_btn_input_right\" autocomplete=\"off\" v-model=\"consumable_item.quantity\" :name=\"'consumable_qty'+consumable_item.id\" :max=\"consumable_item.is_free?'':consumable_item.available_quantity\">\r\n                                  <button class=\"btn btn-white append_btn_right\" type=\"button\">{{consumable_item.unit}}</button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row pb-3 \">\r\n                          <div class=\"col-md-12 px-2 mb-3\"><b> Select a Barrel </b></div>\r\n                          <div class=\"col-md-1 px-2\" v-for=\"barrel in form_data.barrel_stocks\" @click=\"barrel_id=barrel.id\" v-if=\"barrel.available_quantity!=barrel.max_quantity\">\r\n                            <div class=\"barrel_out\" :class=\"barrel_id==barrel.id?'selected':''\" style=\"height:50px\">\r\n                              <div class=\"barrel_in\" :style=\"'height:'+((100-((100/barrel.max_quantity)*barrel.quantity))-(100/barrel.max_quantity)*barrel.available_quantity)+'%'\">\r\n                                <div class=\"details text-center\">\r\n                                  <div>{{barrel.code}}</div>\r\n                                  <small v-for=\"(product,pkey) in barrel.products\" v-if=\"pkey==0\"><b>#Lot/{{product.lot}}</b></small>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"barrel_pepper\" :style=\"'height:'+((100/barrel.max_quantity)*barrel.quantity)+'%'\">\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"text-center text-danger\"><small>Free: <b>{{barrel.max_quantity-barrel.available_quantity}}KG</b></small></div>\r\n                          </div>\r\n                        </div>\r\n                      </b-card>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot class=\"output-rows\">\r\n                  <tr>\r\n                    <th class=\"text-right\" colspan=\"2\">Total Output : </th>\r\n                    <td><b class=\"text-success h5\">{{total_output.toFixed(2)}}KG</b>/ <span class=\"text-info\">{{total_weight.toFixed(2)}}KG</span></td>\r\n                    <td class=\"text-primary\">{{CalculatePersentage(total_output,total_weight)}}</td>\r\n                  </tr>\r\n                  <tr v-show=\"process_detail.id!=1\">\r\n                    <th class=\"text-right\" colspan=\"2\">{{process_detail.have_husk?'Husk':process_detail.name+' Loss'}} : </th>\r\n                    <td class=\"text-danger\">{{(total_weight-total_output).toFixed(2)}}Kg</td>\r\n                    <td class=\"text-danger\">{{CalculatePersentage(total_weight-total_output,total_weight)}}</td>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='output' || action=='direct_packing'\">\r\n            <div class=\"card-scroll\">\r\n              <table class=\"table\">\r\n                <thead class=\"output-rows\">\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th class=\"text-info\">Output</th>\r\n                    <th class=\"text-success\">Quantity(KG)</th>\r\n                    <th class=\"text-primary\">Percentage(%)</th>\r\n                    <th class=\"text-danger\" v-if=\"process_detail.direct_packing\">Packing</th>\r\n                    <th v-else></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"output-rows\" v-for=\"(parameter,key) in form_data.process_outputs\" v-if=\"parameter.parameter_detail.status\">\r\n                  <tr>\r\n                    <td>{{key+1}})</td>\r\n                    <td class=\"text-info\">\r\n                      <b>{{parameter.parameter_detail.name}} <sup v-if=\"form_data.is_organic\"><span class=\"badge badge-success\">ORG</span></sup></b>\r\n                    </td>\r\n                    <td class=\"text-success\">\r\n                      <span v-if=\"process_detail.direct_packing\">{{parameter.quantity.toFixed(2)}}KG</span>\r\n                      <input :placeholder=\"parameter.name\" :type=\"process_detail.direct_packing?'hidden':'number'\" step=\"0.1\" class=\"ui-autocomplete-input ops\" autocomplete=\"off\" v-model=\"parameter.quantity\" @input=\"calculation(parameter)\" :name=\"'quantity'+parameter.parameter\" min=\"0\">\r\n                    </td>\r\n                    <td class=\"text-primary\">\r\n                      <span>{{parameter.quantity_persentage}}</span>\r\n                      <input :placeholder=\"parameter.name\" type=\"hidden\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"parameter.quantity_persentage\" :name=\"'quantity_persentage'+parameter.parameter\" min=\"0\" readonly>\r\n                    </td>\r\n                    <td v-if=\"process_detail.direct_packing\">\r\n                      <button type=\"button\" class=\"btn btn-sm py-1 px-2 btn-primary\" @click=\"$bvModal.show('packing-form'+parameter.parameter)\" v-if=\"parameter.direct_packing_ids.length>0\">\r\n                        Select Materials ({{parameter.direct_packing_ids.length}})\r\n                      </button>\r\n                      <button type=\"button\" class=\"btn btn-sm py-1 px-2 btn-warning\" @click=\"$bvModal.show('packing-form'+parameter.parameter)\" v-else>\r\n                        Select Materials\r\n                      </button>\r\n                    </td>\r\n                    <td v-else></td>\r\n                  </tr>\r\n                  <tr class=\"p-0\">\r\n                    <td class=\"p-0\" colspan=\"5\">\r\n                      <div class=\"py-0 px-3\" v-if=\"parameter.direct_packing_ids.length>0\">\r\n                        <table class=\"w-100\">\r\n                          <tr>\r\n                            <th class=\"border-top-0\">#</th>\r\n                            <th class=\"border-top-0\">Material</th>\r\n                            <th class=\"border-top-0\">Specs</th>\r\n                            <th class=\"border-top-0\">Lot</th>\r\n                            <th class=\"border-top-0\">Status</th>\r\n                            <th class=\"border-top-0\">Packing material taken (number)</th>\r\n                            <th class=\"border-top-0\">Product weight (KG/Bag)</th>\r\n                          </tr>\r\n                          <tr v-for=\"(packing_material,mkey) in parameter.packing_materials\" v-if=\"packing_material.packing_type=='direct_packing'\">\r\n                            <td>{{mkey+1}})</td>\r\n                            <td>\r\n                              {{packing_material.material_detail.name}}\r\n                              <input type=\"hidden\" :name=\"'is_added'+packing_material.id+'parameter'+parameter.parameter\" :value=\"'yes'\">\r\n                            </td>\r\n                            <td>\r\n                              <small v-for=\"specification in packing_material.specifications\" v-if=\"specification.material_ids.includes(packing_material.material)\">\r\n                                <b class=\"text-primary\"> {{specification.name}}</b>:{{specification.value}}, \r\n                              </small>\r\n                            </td>\r\n                            <td>#Lot{{packing_material.lot}}</td>\r\n                            <td><b class=\"text-primary\">{{packing_material.status}}</b></td>\r\n                            <td style=\"width:50%\" colspan=\"2\">\r\n                              <div class=\"d-flex\" v-for=\"(qty,qtkey) in packing_material.qtys\">\r\n                                <input type=\"number\" class=\"ui-autocomplete-input w-100\" v-model=\"qty.number_of_bags\" :name=\"'number_of_bags'+packing_material.id+'parameter'+parameter.parameter+'qtkey'+qtkey\" :max=\"packing_material.quantity\">\r\n                                <input type=\"number\" class=\"ui-autocomplete-input w-100\" v-model=\"qty.packing_quantity\" :name=\"'packing_quantity'+packing_material.id+'parameter'+parameter.parameter+'qtkey'+qtkey\" step=\"0.1\">\r\n                                <div class=\"border pt-1 px-1\">{{packing_material.material_detail.unit}}</div>\r\n                              </div>\r\n                              <div class=\"d-flex\">\r\n                                <span class=\"pl-1\" style=\"width:45%\">\r\n                                  <b>{{totalPackMetQty(packing_material,'piece')}}</b>piece\r\n                                </span>\r\n                                <span class=\"pl-2\" style=\"width:35%\"><b>{{totalPackMetQty(packing_material,'weight')}}{{packing_material.material_detail.unit}}</b>\r\n                                </span>\r\n                                <div class=\"text-right\" style=\"width:20%\">\r\n                                  <button type=\"button\" class=\"btn btn-danger btn-sm mt-1 mr-1 px-2 py-1\" @click=\"packing_material.qtys.splice((packing_material.qtys.length-1),1)\" v-if=\"packing_material.qtys.length>1\">-</button>\r\n                                  <button type=\"button\" class=\"btn btn-primary btn-sm mt-1 px-2 py-1\" @click=\"packing_material.qtys.push({packing_quantity:0, number_of_bags:0})\" style=\"margin-right:1px\">+</button>\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </table>\r\n                        <div class=\"pb-3\" v-show=\"false\">\r\n                          <div class=\"text-right text-info\">\r\n                            <span class=\"mx-2\">Total:</span>\r\n                            <span class=\"mx-2\">Materials: <b>({{totalPackQty(parameter,'materials')}})</b></span>\r\n                            <span class=\"mx-2\">Bags: <b>({{totalPackQty(parameter,'piece')}})</b></span>\r\n                            <span class=\"mx-2\">Weight: <b>({{totalPackQty(parameter,'weight')}})</b></span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"packing-form\">\r\n                        <b-modal :id=\"'packing-form'+parameter.parameter\" hide-header  hide-footer :no-close-on-backdrop=\"true\">\r\n                          <div>\r\n                            <div class=\"d-flex mb-2 align-items-center  justify-content-between\">\r\n                              <slot name=\"header\">\r\n                                 <h5 class=\"mb-0\">Select Packing Materials/<span class=\"text-success\">{{parameter.parameter_detail.name}} <sup v-if=\"form_data.is_organic\"><span class=\"badge badge-success\">ORG</span></sup></span></h5>\r\n                              </slot>\r\n                              <div class=\"d-flex\">\r\n                                <b-button type=\"button\" :variant=\"parameter.direct_packing_ids.length>0?'success':'danger'\" class=\" px-3 py-1  d-sm-block mx-1\" @click=\"totalPackQty(parameter);$bvModal.hide('packing-form'+parameter.parameter)\">{{parameter.direct_packing_ids.length>0?'Select':'Close'}}</b-button>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\" my-3 border-top\"></div>\r\n                          </div>\r\n                          <b-row class=\"main-scroll\">\r\n                            <b-col lg=\"4\" xl=\"4\" class=\"pr-0\">\r\n                              <b-card header-bg-variant=\"transparent\" class=\"mt-2\">\r\n                                <h5>Filter</h5>\r\n                                <div v-if=\"filter_material.material\">\r\n                                  <div class=\"o_thread_search_input px-0\">\r\n                                    <select class=\"ui-autocomplete-input w-100 ml-0\" v-model=\"filter_material.material_detail\" @change=\"filter_material.material=filter_material.material_detail.id\">\r\n                                      <option :value=\"{id:'all',specifications:[]}\">Select Material</option>\r\n                                      <option v-for=\"material in materials\" :value=\"material\">{{material.name}}</option>\r\n                                    </select>\r\n                                  </div>\r\n                                  <div class=\"px-0 mt-1\" v-for=\"(specification,key2) in filter_material.specifications\" v-if=\"specification.material_ids.includes(filter_material.material)\">\r\n                                    <span>{{specification.name}}</span>\r\n                                    <div>\r\n                                      <select class=\"ui-autocomplete-input w-100 ml-0\" v-model=\"specification.value\" v-if=\"specification.values\">\r\n                                        <option v-for=\"value in specification.values\" :value=\"value.value\">{{value.value}}</option>\r\n                                      </select>\r\n                                      <div v-else><input type=\"checkbox\" v-model=\"specification.value\" :id=\"'checkmet'\"> <label :for=\"'checkmet'\"> YES</label></div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </b-card>\r\n                            </b-col>\r\n                            <b-col lg=\"8\" xl=\"8\" class=\"\">\r\n                              <b-card header-bg-variant=\"transparent\" class=\"mt-2\">\r\n                                <h5>Packing Materials</h5>\r\n                                <div class=\"user-info\">\r\n                                  <table class=\"table\">\r\n                                    <tr>\r\n                                      <th>Material</th>\r\n                                      <th>Specs</th>\r\n                                      <th>Lot</th>\r\n                                      <th>Status</th>\r\n                                      <th>Action</th>\r\n                                    </tr>\r\n                                    <tr v-for=\"material in packing_materials\" v-if=\"checkMetFilter(material) && material.packing_type=='direct_packing'\">\r\n                                      <td :style=\"material.is_added?'opacity:1':'opacity:0.5'\">{{material.material_detail.name}}</td>\r\n                                      <td :style=\"material.is_added?'opacity:1':'opacity:0.5'\">\r\n                                        <small v-for=\"specification in material.specifications\" v-if=\"specification.material_ids.includes(material.material)\">\r\n                                          <b class=\"text-primary\"> {{specification.name}}</b>:{{specification.value}}, \r\n                                        </small>\r\n                                      </td>\r\n                                      <td :style=\"material.is_added?'opacity:1':'opacity:0.5'\">#Lot{{material.lot}}</td>\r\n                                      <td :style=\"material.is_added?'opacity:1':'opacity:0.5'\"><b class=\"text-primary\">{{material.status}}</b></td>\r\n                                      <td>\r\n                                        <button type=\"button\" class=\"btn btn-danger btn-sm px-3 py-1 ml-4\" @click=\"removeMaterial(parameter,material)\" v-if=\"parameter.direct_packing_ids.includes(material.id)\">Remove</button>\r\n                                        <button type=\"button\" class=\"btn btn-primary btn-sm px-3 py-1 ml-4\" @click=\"addMaterial(parameter,material)\" v-else>Add</button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  </table>\r\n                                </div>\r\n                              </b-card>\r\n                            </b-col>\r\n                          </b-row>\r\n                        </b-modal>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot class=\"output-rows\">\r\n                  <tr v-if=\"process_detail.id==1\" v-show=\"false\">\r\n                    <td></td>\r\n                    <td>\r\n                      {{slugToWord('robesta_fresh_pulping_output')}}\r\n                    </td>\r\n                    <td>\r\n                      <input :placeholder=\"slugToWord('robesta_fresh_pulping_output')\" type=\"number\" step=\"0.1\" class=\"ui-autocomplete-input ops\" autocomplete=\"off\" :value=\"total_weight-total_output\" :name=\"'quantity'+pulping_output_id\" min=\"0\" readonly>\r\n                    </td>\r\n                    <td>\r\n                      <input :placeholder=\"slugToWord('percentage')\" type=\"text\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"CalculatePersentage(total_weight-total_output,total_weight)\" :name=\"'quantity_persentage'+pulping_output_id\" min=\"0\" readonly>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                  <tr v-show=\"process_detail.id!=1\">\r\n                    <th></th>\r\n                    <th class=\"text-right\">Total Output : </th>\r\n                    <td><b class=\"text-success h5\">{{total_output.toFixed(2)}}KG</b>/ <span class=\"text-info\">{{total_weight.toFixed(2)}}KG</span></td>\r\n                    <td class=\"text-primary\">{{CalculatePersentage(total_output,total_weight)}}</td>\r\n                    <td></td>\r\n                  </tr>\r\n                  <tr v-show=\"process_detail.id!=1\">\r\n                    <th></th>\r\n                    <th class=\"text-right\">{{process_detail.have_husk?'Husk':process_detail.name+' Loss'}} : </th>\r\n                    <td class=\"text-danger\">{{(total_weight-total_output).toFixed(2)}}Kg</td>\r\n                    <td class=\"text-danger\">{{CalculatePersentage(total_weight-total_output,total_weight)}}</td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n              <hr>\r\n            </div>\r\n          </b-col>\r\n          <b-col lg=\"12\" xl=\"12\" class=\"my-3\" v-if=\"action=='indent_packing'\">\r\n            <div class=\"card-scroll\">\r\n              <table class=\"table\">\r\n                <thead class=\"output-rows\">\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th class=\"text-info\">Output</th>\r\n                    <th class=\"text-success\">Quantity(KG)</th>\r\n                    <th class=\"text-primary\">Percentage(%)</th>\r\n                    <th class=\"text-danger\" v-if=\"process_detail.indent_packing\">Packing</th>\r\n                    <th v-else></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"output-rows\" v-for=\"(parameter,key) in form_data.process_outputs\" v-if=\"parameter.parameter_detail.status\">\r\n                  <tr>\r\n                    <td>{{key+1}})</td>\r\n                    <td class=\"text-info\">\r\n                      <b>{{parameter.parameter_detail.name}} <sup v-if=\"form_data.is_organic\"><span class=\"badge badge-success\">ORG</span></sup></b>\r\n                    </td>\r\n                    <td class=\"text-success\">\r\n                      <span>{{parameter.quantity.toFixed(2)}}KG</span>\r\n                      <input :placeholder=\"parameter.name\" type=\"hidden\" step=\"0.1\" class=\"ui-autocomplete-input ops\" autocomplete=\"off\" v-model=\"parameter.quantity\" @input=\"calculation(parameter)\" :name=\"'quantity'+parameter.parameter\" min=\"0\">\r\n                    </td>\r\n                    <td class=\"text-primary\">\r\n                      <span>{{parameter.quantity_persentage}}</span>\r\n                      <input :placeholder=\"parameter.name\" type=\"hidden\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" v-model=\"parameter.quantity_persentage\" :name=\"'quantity_persentage'+parameter.parameter\" min=\"0\" readonly>\r\n                    </td>\r\n                    <td v-if=\"process_detail.indent_packing\">\r\n                      <button type=\"button\" class=\"btn btn-sm py-1 px-2 btn-primary\" @click=\"$bvModal.show('packing-form'+parameter.parameter)\" v-if=\"parameter.indent_packing_ids.length>0\">\r\n                        Select Indent ({{parameter.indent_packing_ids.length}})\r\n                      </button>\r\n                      <button type=\"button\" class=\"btn btn-sm py-1 px-2 btn-warning\" @click=\"$bvModal.show('packing-form'+parameter.parameter)\" v-else>\r\n                        Select Indent\r\n                      </button>\r\n                    </td>\r\n                    <td v-else></td>\r\n                  </tr>\r\n                  <tr class=\"p-0\">\r\n                    <td class=\"p-0\" colspan=\"5\">\r\n                      <div class=\"py-0 px-3\" v-if=\"parameter.indent_packing_ids.length>0\">\r\n                        <table class=\"w-100\">\r\n                          <tr>\r\n                            <th class=\"border-top-0\">#</th>\r\n                            <th class=\"border-top-0\">Material</th>\r\n                            <th class=\"border-top-0\">Specs</th>\r\n                            <th class=\"border-top-0\">Lot</th>\r\n                            <th class=\"border-top-0\">Status</th>\r\n                            <th class=\"border-top-0\">Packing material taken (number)</th>\r\n                            <th class=\"border-top-0\">Product weight (KG/Bag)</th>\r\n                          </tr>\r\n                          <tr v-for=\"(packing_material,mkey) in packing_materials\" v-if=\"packing_material.packing_type=='indent_packing' && parameter.indent_packing_ids.includes(packing_material.id)\">\r\n                            <td>{{mkey+1}})</td>\r\n                            <td>\r\n                              {{packing_material.material_detail.name}}\r\n                              <input type=\"hidden\" :name=\"'is_added'+packing_material.id+'parameter'+parameter.parameter\" :value=\"'yes'\">\r\n                            </td>\r\n                            <td>\r\n                              <small v-for=\"specification in packing_material.specifications\" v-if=\"specification.material_ids.includes(packing_material.material)\">\r\n                                <b class=\"text-primary\"> {{specification.name}}</b>:{{specification.value}}, \r\n                              </small>\r\n                            </td>\r\n                            <td>#Lot{{packing_material.lot}}</td>\r\n                            <td><b class=\"text-primary\">{{packing_material.status}}</b></td>\r\n                            <td style=\"width:50%\" colspan=\"2\">\r\n                              <div class=\"d-flex\" v-for=\"(qty,qtkey) in packing_material.qtys\">\r\n                                <input type=\"number\" class=\"ui-autocomplete-input w-100\" v-model=\"qty.number_of_bags\" :name=\"'number_of_bags'+packing_material.id+'parameter'+parameter.parameter+'qtkey'+qtkey\" :max=\"packing_material.quantity\">\r\n                                <input type=\"number\" class=\"ui-autocomplete-input w-100\" v-model=\"qty.packing_quantity\" :name=\"'packing_quantity'+packing_material.id+'parameter'+parameter.parameter+'qtkey'+qtkey\" step=\"0.1\">\r\n                                <div class=\"border pt-1 px-1\">{{packing_material.material_detail.unit}}</div>\r\n                              </div>\r\n                              <div class=\"d-flex\">\r\n                                <span class=\"pl-1\" style=\"width:45%\">\r\n                                  <b>{{totalPackMetQty(packing_material,'piece')}}</b>piece\r\n                                </span>\r\n                                <span class=\"pl-2\" style=\"width:35%\"><b>{{totalPackMetQty(packing_material,'weight')}}{{packing_material.material_detail.unit}}</b>\r\n                                </span>\r\n                                <div class=\"text-right\" style=\"width:20%\">\r\n                                  <button type=\"button\" class=\"btn btn-danger btn-sm mt-1 mr-1 px-2 py-1\" @click=\"packing_material.qtys.splice((packing_material.qtys.length-1),1)\" v-if=\"packing_material.qtys.length>1\">-</button>\r\n                                  <button type=\"button\" class=\"btn btn-primary btn-sm mt-1 px-2 py-1\" @click=\"packing_material.qtys.push({packing_quantity:0, number_of_bags:0})\" style=\"margin-right:1px\">+</button>\r\n                                </div>\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        </table>\r\n                        <div class=\"pb-3\" v-show=\"false\">\r\n                          <div class=\"text-right text-info\">\r\n                            <span class=\"mx-2\">Total:</span>\r\n                            <span class=\"mx-2\">Materials: <b>({{totalPackQty(parameter,'materials')}})</b></span>\r\n                            <span class=\"mx-2\">Bags: <b>({{totalPackQty(parameter,'piece')}})</b></span>\r\n                            <span class=\"mx-2\">Weight: <b>({{totalPackQty(parameter,'weight')}})</b></span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"packing-form\">\r\n                        <b-modal :id=\"'packing-form'+parameter.parameter\" hide-header  hide-footer :no-close-on-backdrop=\"true\">\r\n                          <div>\r\n                            <div class=\"d-flex mb-2 align-items-center  justify-content-between\">\r\n                              <slot name=\"header\">\r\n                                 <h5 class=\"mb-0\">Select Packing Materials/<span class=\"text-success\">{{parameter.parameter_detail.name}} <sup v-if=\"form_data.is_organic\"><span class=\"badge badge-success\">ORG</span></sup></span></h5>\r\n                              </slot>\r\n                              <div class=\"d-flex\">\r\n                                <b-button type=\"button\" :variant=\"parameter.indent_packing_ids.length>0?'success':'danger'\" class=\" px-3 py-1  d-sm-block mx-1\" @click=\"totalPackQty(parameter);$bvModal.hide('packing-form'+parameter.parameter)\">{{parameter.indent_packing_ids.length>0?'Select':'Close'}}</b-button>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\" my-3 border-top\"></div>\r\n                          </div>\r\n\r\n                          <b-row class=\"main-scroll\">\r\n                            <b-col lg=\"6\" xl=\"6\" class=\"pr-0\">\r\n                              <b-card header-bg-variant=\"transparent\" class=\"mt-2\">\r\n                                <h5>Select Indent</h5>\r\n                                <div class=\"user-info\">\r\n                                  <table class=\"table\">\r\n                                    <tr>\r\n                                      <th>Indent</th>\r\n                                      <th>Product</th>\r\n                                      <th>Quantity</th>\r\n                                      <th>Action</th>\r\n                                    </tr>\r\n                                    <tr v-for=\"indent in indent_packings\" v-if=\"indent.parameter==parameter.parameter\">\r\n                                      <td :style=\"indent.is_added?'opacity:1':'opacity:0.5'\">\r\n                                        #{{indent.main_indent}}/Indent\r\n                                      </td>\r\n                                      <td :style=\"indent.is_added?'opacity:1':'opacity:0.5'\">\r\n                                        {{indent.product_detail.category_detail.name}}> {{indent.product_detail.name}}> {{indent.parameter_detail.name}}\r\n                                      </td>\r\n                                      <td :style=\"indent.is_added?'opacity:1':'opacity:0.5'\">{{indent.quantity}}KG</td>\r\n                                      <td>\r\n                                        <button type=\"button\" class=\"btn btn-danger btn-sm px-3 py-1 ml-4\" @click=\"removeIndent(parameter,indent)\" v-if=\"parameter.indent_ids.includes(indent.id)\">Remove</button>\r\n                                        <button type=\"button\" class=\"btn btn-primary btn-sm px-3 py-1 ml-4\" @click=\"selectIndent(parameter,indent)\" v-else>Select</button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  </table>\r\n                                </div>\r\n                              </b-card>\r\n                            </b-col>\r\n                            <b-col lg=\"6\" xl=\"6\" class=\"\">\r\n                              <b-card header-bg-variant=\"transparent\" class=\"mt-2\">\r\n                                <h5>Packing Materials</h5>\r\n                                <div class=\"user-info\">\r\n                                  <div class=\"alert alert-info p-2\" v-if=\"packing_note\">\r\n                                    <div>Packing note</div>\r\n                                    <pre v-html=\"packing_note\" class=\"m-0\"></pre>\r\n                                  </div>\r\n                                  <table class=\"table\">\r\n                                    <tr>\r\n                                      <th>Material</th>\r\n                                      <th>Specs</th>\r\n                                      <th>Lot</th>\r\n                                      <th>Status</th>\r\n                                      <th>Action</th>\r\n                                    </tr>\r\n                                    <tr v-for=\"material in packing_materials\" v-if=\"material.packing_type=='indent_packing' && parameter.indent_packing_ids.includes(material.id)\">\r\n                                      <td :style=\"material.is_added?'opacity:1':'opacity:0.5'\">{{material.material_detail.name}}</td>\r\n                                      <td :style=\"material.is_added?'opacity:1':'opacity:0.5'\">\r\n                                        <small v-for=\"specification in material.specifications\" v-if=\"specification.material_ids.includes(material.material)\">\r\n                                          <b class=\"text-primary\"> {{specification.name}}</b>:{{specification.value}}, \r\n                                        </small>\r\n                                      </td>\r\n                                      <td :style=\"material.is_added?'opacity:1':'opacity:0.5'\">#Lot{{material.lot}}</td>\r\n                                      <td :style=\"material.is_added?'opacity:1':'opacity:0.5'\"><b class=\"text-primary\">{{material.status}}</b></td>\r\n                                      <td>\r\n                                        <button type=\"button\" class=\"btn btn-danger btn-sm px-3 py-1 ml-4\" @click=\"removeMaterial(parameter,material)\" v-if=\"parameter.indent_packing_ids.includes(material.id)\">Remove</button>\r\n                                        <button type=\"button\" class=\"btn btn-primary btn-sm px-3 py-1 ml-4\" @click=\"addMaterial(parameter,material)\" v-else>Add</button>\r\n                                      </td>\r\n                                    </tr>\r\n                                  </table>\r\n                                </div>\r\n                              </b-card>\r\n                            </b-col>\r\n                          </b-row>\r\n                        </b-modal>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot class=\"output-rows\">\r\n                  <tr v-if=\"process_detail.id==1\" v-show=\"false\">\r\n                    <td></td>\r\n                    <td>\r\n                      {{slugToWord('robesta_fresh_pulping_output')}}\r\n                    </td>\r\n                    <td>\r\n                      <input :placeholder=\"slugToWord('robesta_fresh_pulping_output')\" type=\"number\" step=\"0.1\" class=\"ui-autocomplete-input ops\" autocomplete=\"off\" :value=\"total_weight-total_output\" :name=\"'quantity'+pulping_output_id\" min=\"0\" readonly>\r\n                    </td>\r\n                    <td>\r\n                      <input :placeholder=\"slugToWord('percentage')\" type=\"text\" step=\"0.1\" class=\"ui-autocomplete-input\" autocomplete=\"off\" :value=\"CalculatePersentage(total_weight-total_output,total_weight)\" :name=\"'quantity_persentage'+pulping_output_id\" min=\"0\" readonly>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                  <tr v-show=\"process_detail.id!=1\">\r\n                    <th></th>\r\n                    <th class=\"text-right\">Total Output : </th>\r\n                    <td><b class=\"text-success h5\">{{total_output.toFixed(2)}}KG</b>/ <span class=\"text-info\">{{total_weight.toFixed(2)}}KG</span></td>\r\n                    <td class=\"text-primary\">{{CalculatePersentage(total_output,total_weight)}}</td>\r\n                    <td></td>\r\n                  </tr>\r\n                  <tr v-show=\"process_detail.id!=1\">\r\n                    <th></th>\r\n                    <th class=\"text-right\">{{process_detail.have_husk?'Husk':process_detail.name+' Loss'}} : </th>\r\n                    <td class=\"text-danger\">{{(total_weight-total_output).toFixed(2)}}Kg</td>\r\n                    <td class=\"text-danger\">{{CalculatePersentage(total_weight-total_output,total_weight)}}</td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n              <hr>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </fieldset>\r\n    </form>\r\n    <div style=\"height:84vh\" v-else>\r\n      <div>\r\n        <div class=\"loader_logo\">\r\n          <img src=\"/img/logo.png\" class=\"\" alt=\"logo\">\r\n        </div>\r\n\r\n        <div class=\"loading\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport ProductFields from '/src/views/app/oodo/components/product_fields'\r\nexport default {\r\n  props: ['process_detail_id','start_process_id','processing_id','action','is_view'],\r\n  components:{\r\n    ProductFields\r\n  },\r\n  data() {\r\n    return {\r\n      form_data:{\r\n        id:null,\r\n        date:null,\r\n        product:null,\r\n        status:'Draft',\r\n        shift:'DAY',\r\n        workers:[],\r\n        wage_workers:[],\r\n        work_type:'wages',\r\n        overtime_hourse_st1:2,\r\n        machines:[],\r\n        start_process_detail:{process_products_list:[],main_process_detail:{},firewood_details:{},dryer_details:{}, attribut:null, attribute_detail:{}},\r\n        other_lots:[],\r\n        lot:null,\r\n        is_organic:false,\r\n        process_outputs:[],\r\n        barrel_stocks:[],\r\n        next_process:null,\r\n        consumable_items_list:[],\r\n        unloading:{\r\n          workers:[],\r\n          wage_workers:[],\r\n          work_type:'wages',\r\n          overtime_hourse_st1:2,\r\n        },\r\n      },\r\n      process_detail:{outputs:[],consumable_items_list:[],inputs:[]},\r\n      packing_materials:[],\r\n      indent_packings:[],\r\n      barrel_id:null,\r\n      id:null,\r\n      product_name : '',\r\n      total_weight:0,\r\n      total_output:0,\r\n      workers:[],\r\n      next_processes:[],\r\n      stock_parameters:[],\r\n      is_start:false,\r\n      filter_material:{specifications:[]},\r\n      materials:[],\r\n      specifications:[],\r\n      boilers:[],\r\n      packing_note:'',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.form_data.date = this.currentDate()\r\n    if(this.processing_id){\r\n      this.getProcess()\r\n    }else{\r\n      this.getProcessDetails()\r\n    }\r\n  },\r\n  methods: {\r\n    getProcess() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/processing/'+this.processing_id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.form_data = jsonData\r\n        this.getPackingMaterials()\r\n        if(this.action=='indent_packing'){\r\n          this.getIndents()\r\n        }\r\n        this.getProcessDetails()\r\n      })\r\n    },\r\n    getProcessDetails() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/process_details/'+this.process_detail_id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.process_detail = jsonData\r\n        this.form_data.machines = jsonData.machines\r\n        var self = this\r\n        if(!this.form_data.contract_labour_charge){\r\n          this.form_data.contract_labour_charge = jsonData.production_process_detail.labour_charge\r\n        }\r\n        if(this.form_data.process_outputs.length<=0){\r\n          this.getParameters()\r\n        }\r\n        // if(this.form_data.process_outputs.length>0 && this.form_data.direct_packing_ids.length<=0 && this.action=='direct_packing'){\r\n        //   var self = this\r\n        //   this.form_data.process_outputs.forEach(function(val,key){\r\n        //     self.packing_materials.push.apply(self.packing_materials,self.form_data.process_outputs[key].packing_materials)\r\n        //     self.form_data.process_outputs[key].packing_materials = self.packing_materials\r\n        //   })\r\n        //   this.setPackingMaterialFilter()\r\n        // }\r\n        if(this.form_data.consumable_items_list.length<=0){\r\n          this.form_data.consumable_items_list = jsonData.consumable_items_list\r\n        }\r\n        if(jsonData.have_barrel && this.form_data.barrel_stocks.length<=0){\r\n          this.getBarrels()\r\n        }\r\n        this.getStartProcess()\r\n      })\r\n    },\r\n    getStartProcess() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/start_process/'+this.start_process_id+'/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.form_data.start_process_detail = jsonData\r\n        var last_process_id = null \r\n        jsonData.processes.forEach(function(val,key){\r\n          last_process_id = val.id\r\n        })\r\n        var lots = [];\r\n        var lot = null;\r\n        var total = 0;\r\n        var is_organic = true\r\n        jsonData.process_products.forEach(function(val,key){\r\n          if(!val.is_organic){\r\n            is_organic = false\r\n          }\r\n          if(key==0)lot=val.lot\r\n          lots.push(val.lot)\r\n        })\r\n        this.total_weight = jsonData.total_weight\r\n        this.form_data.lot = lot\r\n        this.form_data.other_lots = lots\r\n        this.form_data.is_organic = is_organic\r\n        if(this.form_data.process_outputs.length>0){\r\n          this.calculateQty()\r\n        }\r\n        this.is_start = true\r\n      })\r\n    },\r\n    getBarrels() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/barrel/?product='+this.form_data.product, {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        var self = this\r\n        jsonData.forEach(function(val,key){\r\n          jsonData[key]['quantity'] = 0\r\n          jsonData[key]['quantity_persentage'] = 0\r\n          jsonData[key]['consumable_items_list'] = self.form_data.consumable_items_list\r\n        })\r\n        this.form_data.barrel_stocks = jsonData\r\n      })\r\n    },\r\n    getParameters() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/parameters/?outputs='+this.process_detail.outputs+'&start_process='+this.start_process_id, {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        jsonData.forEach(function(val,key){\r\n          jsonData[key].parameter = val.id\r\n          jsonData[key].parameter_detail = val\r\n          jsonData[key].quantity = 0\r\n          jsonData[key].quantity_persentage = '0%'\r\n          jsonData[key]['direct_packing_ids'] = []\r\n          jsonData[key]['indent_packing_ids'] = []\r\n          jsonData[key]['packing_ids'] = []\r\n          jsonData[key]['packing_materials'] = []\r\n          jsonData[key]['indent_ids'] = []\r\n        })\r\n        this.form_data.process_outputs = jsonData\r\n        this.setPackingMaterialFilter()\r\n        this.calculateQty()\r\n      })\r\n    },\r\n    calculateQty(){\r\n      var self=this;\r\n      var total = 0;\r\n      this.form_data.process_outputs.forEach(function(val,key){\r\n        if(val.parameter_type=='semi_finished_product' || val.parameter_type=='full_finished_product' || val.parameter_type=='main_product'){\r\n          total = total+parseFloat(val.quantity)\r\n        }\r\n      })\r\n      this.total_weight = total+this.total_weight\r\n      this.total_output = total\r\n    },\r\n    calculation(parameter,barrel={id:null}){\r\n      var self=this;\r\n      var total = 0;\r\n      var process_outputs = this.form_data.process_outputs\r\n      this.form_data.process_outputs = []\r\n      process_outputs.forEach(function(val,key){\r\n        if(self.process_detail.have_barrel && barrel.id){\r\n          var total_br_qty = 0 \r\n          self.form_data.barrel_stocks.forEach(function(br){\r\n            if(br.id!=barrel.id){\r\n              total_br_qty = total_br_qty+parseFloat(br.quantity)\r\n            }\r\n          })\r\n          val.quantity = parseFloat(barrel.quantity)+total_br_qty\r\n          barrel.quantity_persentage = self.CalculatePersentage(barrel.quantity,barrel.max_quantity,'Barrel is full')\r\n        }\r\n        if(val.quantity){\r\n          if(self.total_weight!=0){\r\n            var persentage = (val.quantity/self.total_weight)*100\r\n            persentage = persentage.toFixed(2)\r\n            process_outputs[key].quantity_persentage = persentage+'%'\r\n          }\r\n          if(val.parameter_type=='semi_finished_product' || val.parameter_type=='full_finished_product' || val.parameter_type=='main_product'){\r\n            total = total+parseFloat(val.quantity)\r\n          }\r\n        }else{\r\n            process_outputs[key].quantity_persentage = '0%'\r\n        }\r\n      })\r\n      this.form_data.process_outputs = process_outputs\r\n      this.total_output = total\r\n    },\r\n    CalculatePersentage(value,total_weight, message='Output is over'){\r\n      if(value){\r\n        if(this.total_weight!=0){\r\n          var persentage = (value/total_weight)*100\r\n          persentage = persentage.toFixed(2)\r\n          if(persentage>100){\r\n            this.showAlert(message,'red')\r\n          }\r\n          return persentage+'%'\r\n        }\r\n      }\r\n      return '0%'\r\n    },\r\n    dataForm() {\r\n      if(this.action == 'consumables'){\r\n        this.consumableStockCreate()\r\n      }else if(this.action == 'output' || this.action == 'direct_packing' || this.action == 'indent_packing'|| this.action == 'barrel'){\r\n        this.createOutput()\r\n      }\r\n    },\r\n    consumableStockCreate() {\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('process_detail',this.process_detail.id)\r\n      formdata.append('start_process',this.start_process_id)\r\n      formdata.append('process',this.form_data.id)\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/consumable_stock_create/', {\r\n          method : 'POST',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        if(jsonData.success){\r\n          if(jsonData.out_of_stock){\r\n            this.showAlert('Out of stock!','red')\r\n          }else{\r\n            this.closePopup()\r\n            this.showAlert('Saved Successfully!')\r\n          }\r\n        }else{\r\n          this.showAlert(jsonData.message,'red')\r\n        }\r\n      })\r\n    },\r\n    getIndents() {\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/indent/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.indent_packings = jsonData\r\n      })\r\n    },\r\n    getPackingMaterials(){\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/packing_material_stock/?warehouse='+this.form_data.start_process_detail.main_process_detail.warehouse+'&in_stock=true', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        var packing_type = this.action\r\n        jsonData.forEach(function(val,key){\r\n          jsonData[key].is_added = false\r\n          jsonData[key].packing_type = packing_type\r\n          jsonData[key].qtys = [{packing_quantity:0, number_of_bags:0}]\r\n        })\r\n        this.packing_materials = jsonData\r\n      })\r\n    },\r\n    totalPackMetQty(packing_material,type=\"piece\"){\r\n      var total_bags=0\r\n      var total=0\r\n      packing_material.qtys.forEach(function(qty){\r\n        total_bags = total_bags+parseInt(qty.number_of_bags)\r\n        total = total+(parseFloat(qty.packing_quantity)*parseInt(qty.number_of_bags))\r\n      })\r\n      if(type=='piece'){\r\n        return total_bags\r\n      }\r\n      else if(type=='weight'){\r\n        return total.toFixed(2)\r\n      }else{\r\n        return 0\r\n      }\r\n\r\n    },\r\n    totalPackQty(parameter,type=\"piece\"){\r\n      var total_mets=0\r\n      var total_bags=0\r\n      var total=0\r\n      var total_qty=0\r\n      var unit =''\r\n      var self=this\r\n      parameter.packing_materials.forEach(function(packing_material){\r\n        if(packing_material.is_added){\r\n          var total_bags2=0\r\n          var total2=0\r\n          unit = packing_material.material_detail.unit\r\n          packing_material.qtys.forEach(function(qty){\r\n            total_bags2 = total_bags2+parseInt(qty.number_of_bags)\r\n            total2 = total2+(parseFloat(qty.packing_quantity)*parseInt(qty.number_of_bags))\r\n          })\r\n          if(packing_material.packing_type==self.action){\r\n            total_mets++\r\n            total_bags = total_bags+total_bags2\r\n            total = total+total2\r\n          }\r\n          total_qty = total_qty+total2\r\n        }\r\n      })\r\n      parameter.quantity = total_qty\r\n      var self=this;\r\n      var total_qty = 0;\r\n      var process_outputs = this.form_data.process_outputs\r\n      process_outputs.forEach(function(val,key){\r\n        if(val.quantity){\r\n          if(self.total_weight!=0){\r\n            var persentage = (val.quantity/self.total_weight)*100\r\n            persentage = persentage.toFixed(2)\r\n            process_outputs[key].quantity_persentage = persentage+'%'\r\n          }\r\n          if(val.parameter_type=='semi_finished_product' || val.parameter_type=='full_finished_product' || val.parameter_type=='main_product'){\r\n            total_qty = total_qty+parseFloat(val.quantity)\r\n          }\r\n        }else{\r\n            process_outputs[key].quantity_persentage = '0%'\r\n        }\r\n      })\r\n      this.total_output = total_qty\r\n      if(type=='materials'){\r\n        return total_mets\r\n      }\r\n      else if(type=='piece'){\r\n        return total_bags\r\n      }\r\n      else if(type=='weight'){\r\n        return total.toFixed(2)+unit\r\n      }else{\r\n        return 0\r\n      }\r\n    },\r\n    setPackingMaterialFilter(){\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/product/materials/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.materials = jsonData\r\n      })\r\n\r\n      fetch(this.api_url+'/product/specifications/', {\r\n          method : 'get',\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.specifications = jsonData\r\n        var specification_values = [];\r\n        this.specifications.forEach(function(val,key){\r\n          if(val.specification_for=='Packing Material'){\r\n            specification_values.push({id:val.id, name:val.name ,value:'', is_values:val.is_values, values:val.values,material_ids:val.material_ids})\r\n          }\r\n        })\r\n        this.filter_material = {material:'all', requested_quantity:0, price:0,max_quantity:0,stock_quantity:0, print_indent:{id:null}, specifications:specification_values, material_detail:{id:'all',specifications:[]}}\r\n      })\r\n    },\r\n    checkMetFilter(packing_material){\r\n      var filter=false\r\n      if(packing_material.material==this.filter_material.material || this.filter_material.material=='all')\r\n      {\r\n        filter=true\r\n      }\r\n      for(var sk=0;sk<this.filter_material.specifications.length;sk++){\r\n        var specification=this.filter_material.specifications[sk]\r\n        if(specification.material_ids.includes(this.filter_material.material)){\r\n          if(specification.value){\r\n            if(packing_material.specifications[sk].values==null){\r\n              if((packing_material.specifications[sk].value=='on' && !specification.value) || packing_material.specifications[sk].value=='off' && specification.value){\r\n                filter=false\r\n              }\r\n            }else if(packing_material.specifications[sk].value!=specification.value){\r\n              filter=false\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return filter\r\n    },\r\n    createOutput() {\r\n      var formdata = new FormData(this.$refs['dataForm'])\r\n      formdata.append('process_detail',this.process_detail.id)\r\n      formdata.append('start_process',this.start_process_id)\r\n      formdata.append('process',this.form_data.id)\r\n      formdata.append('packing_type',this.action)\r\n      if(this.lock_btn){\r\n        return false\r\n      }\r\n      this.lock_btn = true\r\n      var headers = new Headers();\r\n      headers.append(\"Authorization\", \"Token \"+this.$root.token);\r\n      fetch(this.api_url+'/production/process_outputs/', {\r\n          method : 'POST',\r\n          body : formdata,\r\n          headers: headers,\r\n      })\r\n      .then((response) => {\r\n          return response.json()\r\n      })\r\n      .then((jsonData) => {\r\n        this.lock_btn = false\r\n        if(jsonData.success){\r\n          this.closePopup()\r\n          this.showAlert('Saved Successfully!')\r\n        }else{\r\n          this.showAlert('Something Wrong!','red')\r\n        }\r\n      })\r\n    },\r\n    closePopup(){\r\n      this.$emit('closePopup', true)\r\n    },\r\n    addMaterial(parameter,packing_material){\r\n      packing_material.is_added = true\r\n      var pm = JSON.stringify(packing_material)\r\n      parameter.packing_materials.push(JSON.parse(pm))\r\n      parameter.direct_packing_ids.push(packing_material.id)\r\n      parameter.packing_ids.push(packing_material.id)\r\n    },\r\n    removeMaterial(parameter,packing_material){\r\n      packing_material.is_added = false\r\n      var index = parameter.packing_ids.indexOf(packing_material.id)\r\n      var index2 = parameter.direct_packing_ids.indexOf(packing_material.id)\r\n      parameter.packing_materials.splice(index, 1);\r\n      parameter.packing_ids.splice(index, 1);\r\n      parameter.direct_packing_ids.splice(index2, 1);\r\n    },\r\n    selectIndent(parameter,indent){\r\n      indent.is_added = true\r\n      parameter.indent_ids.push(indent.id)\r\n      for(var p=0;p<indent.values.length;p++){\r\n        var pack = this.checkMaterialStock(indent.values[p])\r\n        if(pack.id){\r\n          if(pack.packing_type=='indent_packing'){\r\n            this.packing_materials.forEach(function(val,key){\r\n              if(pack.id==val.id){\r\n                val['is_added'] = true\r\n                val['indent'] = indent.id\r\n                parameter.packing_materials.push(val)\r\n                parameter.packing_ids.push(val.id)\r\n                parameter.indent_packing_ids.push(val.id)\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n      console.log(parameter.packing_materials)\r\n    },\r\n    removeIndent(parameter,indent){\r\n      indent.is_added = false\r\n      this.packing_note = ''\r\n      parameter.packing_materials.forEach(function(material,pmi){\r\n        if(material.indent==indent.id && material.packing_type=='indent_packing'){\r\n          parameter.packing_materials.splice(pmi, 1);\r\n          parameter.packing_ids.splice(pmi, 1);\r\n          parameter.indent_packing_ids.splice(parameter.indent_packing_ids.indexOf(material.id), 1);\r\n        }\r\n      })\r\n      parameter.indent_ids.splice(parameter.indent_ids.indexOf(indent.id), 1)\r\n    },\r\n    checkMaterialStock(material){\r\n      var avai_material = {id:null}\r\n      var packing_materials = this.packing_materials\r\n      packing_materials.forEach(function(p1,key){\r\n        var is_pack = true\r\n        if(material.material==p1.material){\r\n          p1.specifications.forEach(function(s2){\r\n            var is_specs = true\r\n            if(p1.material_detail.specifications.includes(s2.id)){\r\n              var spec = true\r\n              material.specifications.forEach(function(s1){\r\n                if(s1.material_ids.includes(material.material)){\r\n                  if(s2.id==s1.id){\r\n                    if(s2.value==s1.value || (s1.values==null && s2.value=='on' && s1.value)){\r\n                    }else{\r\n                      spec = false\r\n                    }\r\n                  }\r\n                }\r\n              })\r\n              if(!spec){\r\n                is_specs = false\r\n              }\r\n            }\r\n            if(!is_specs){\r\n              is_pack = false\r\n            }\r\n          })\r\n        }else{\r\n          is_pack = false\r\n        }\r\n        if(is_pack){\r\n          avai_material = p1\r\n        }\r\n      })\r\n      return avai_material\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style >\r\n\r\n@import '../../styles/style.css';\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/app/oodo/production/process"}]}